	.arch armv8-a
	.file	"bitmapdecoding.cpp"
// GNU C++14 (GCC) version 8.3.0 (aarch64-linux-gnu)
//	compiled by GNU C version 8.3.0, GMP version 6.1.0, MPFR version 3.1.4, MPC version 1.0.3, isl version isl-0.18-GMP

// GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
// options passed:  -imultiarch aarch64-linux-gnu -D_GNU_SOURCE
// bitmapdecoding.cpp -mlittle-endian -mabi=lp64
// -auxbase-strip bitmapdecoding.s -O2 -std=c++14 -fverbose-asm
// options enabled:  -faggressive-loop-optimizations -falign-labels
// -fasynchronous-unwind-tables -fauto-inc-dec -fbranch-count-reg
// -fcaller-saves -fchkp-check-incomplete-type -fchkp-check-read
// -fchkp-check-write -fchkp-instrument-calls -fchkp-narrow-bounds
// -fchkp-optimize -fchkp-store-bounds -fchkp-use-static-bounds
// -fchkp-use-static-const-bounds -fchkp-use-wrappers -fcode-hoisting
// -fcombine-stack-adjustments -fcommon -fcompare-elim -fcprop-registers
// -fcrossjumping -fcse-follow-jumps -fdefer-pop
// -fdelete-null-pointer-checks -fdevirtualize -fdevirtualize-speculatively
// -fdwarf2-cfi-asm -fearly-inlining -feliminate-unused-debug-types
// -fexceptions -fexpensive-optimizations -fforward-propagate
// -ffp-int-builtin-inexact -ffunction-cse -fgcse -fgcse-lm -fgnu-runtime
// -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads -fident
// -fif-conversion -fif-conversion2 -findirect-inlining -finline
// -finline-atomics -finline-functions-called-once -finline-small-functions
// -fipa-bit-cp -fipa-cp -fipa-icf -fipa-icf-functions -fipa-icf-variables
// -fipa-profile -fipa-pure-const -fipa-ra -fipa-reference -fipa-sra
// -fipa-vrp -fira-hoist-pressure -fira-share-save-slots
// -fira-share-spill-slots -fisolate-erroneous-paths-dereference -fivopts
// -fkeep-static-consts -fleading-underscore -flifetime-dse -flra-remat
// -flto-odr-type-merging -fmath-errno -fmerge-constants
// -fmerge-debug-strings -fmove-loop-invariants -fomit-frame-pointer
// -foptimize-sibling-calls -foptimize-strlen -fpartial-inlining -fpeephole
// -fpeephole2 -fplt -fprefetch-loop-arrays -free -freg-struct-return
// -freorder-blocks -freorder-functions -frerun-cse-after-loop
// -fsched-critical-path-heuristic -fsched-dep-count-heuristic
// -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
// -fsched-pressure -fsched-rank-heuristic -fsched-spec
// -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fschedule-fusion
// -fschedule-insns -fschedule-insns2 -fsection-anchors
// -fsemantic-interposition -fshow-column -fshrink-wrap
// -fshrink-wrap-separate -fsigned-zeros -fsplit-ivs-in-unroller
// -fsplit-wide-types -fssa-backprop -fssa-phiopt -fstdarg-opt
// -fstore-merging -fstrict-aliasing -fstrict-volatile-bitfields
// -fsync-libcalls -fthread-jumps -ftoplevel-reorder -ftrapping-math
// -ftree-bit-ccp -ftree-builtin-call-dce -ftree-ccp -ftree-ch
// -ftree-coalesce-vars -ftree-copy-prop -ftree-cselim -ftree-dce
// -ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre
// -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
// -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop -ftree-pre
// -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink -ftree-slsr
// -ftree-sra -ftree-switch-conversion -ftree-tail-merge -ftree-ter
// -ftree-vrp -funit-at-a-time -funwind-tables -fverbose-asm
// -fzero-initialized-in-bss -mfix-cortex-a53-835769
// -mfix-cortex-a53-843419 -mglibc -mlittle-endian
// -momit-leaf-frame-pointer -mpc-relative-literal-loads

	.text
	.section	.text._ZNKSt5ctypeIcE8do_widenEc,"axG",@progbits,_ZNKSt5ctypeIcE8do_widenEc,comdat
	.align	2
	.p2align 3,,7
	.weak	_ZNKSt5ctypeIcE8do_widenEc
	.type	_ZNKSt5ctypeIcE8do_widenEc, %function
_ZNKSt5ctypeIcE8do_widenEc:
.LFB1334:
	.cfi_startproc
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:1085:       { return __c; }
	mov	w0, w1	//, __c
	ret	
	.cfi_endproc
.LFE1334:
	.size	_ZNKSt5ctypeIcE8do_widenEc, .-_ZNKSt5ctypeIcE8do_widenEc
	.text
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj1EEvP6lead_sS1_Pj, %function
_Z6unpackILj1EEvP6lead_sS1_Pj:
.LFB2227:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	bne	.L42		//,
.L3:
// bitmapdecoding.cpp:367: }
	ret	
	.p2align 2
.L42:
	sub	x3, x1, x0	// tmp108, end, begin
	sub	x3, x3, #16	// tmp109, tmp108,
	lsr	x3, x3, 4	// tmp107, tmp109,
	add	x3, x3, 1	// tmp110, tmp107,
	ands	x3, x3, 7	// tmp111, tmp110,
	beq	.L5		//,
	cmp	x3, 1	// tmp111,
	beq	.L28		//,
	cmp	x3, 2	// tmp111,
	beq	.L29		//,
	cmp	x3, 3	// tmp111,
	beq	.L30		//,
	cmp	x3, 4	// tmp111,
	beq	.L31		//,
	cmp	x3, 5	// tmp111,
	beq	.L32		//,
	cmp	x3, 6	// tmp111,
	bne	.L43		//,
.L33:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	ldr	x6, [x0]	// MEM[base: j_26, offset: 0B], MEM[base: j_26, offset: 0B]
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldp	w3, w4, [x0, 8]	//, MEM[base: j_26, offset: 12B], MEM[base: j_26, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x6	// tmp101, MEM[base: j_26, offset: 0B]
	clz	x5, x5	// tmp101, tmp101
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w3, w5	// tmp105, MEM[base: j_26, offset: 8B], tmp101
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x2, x4, lsl 2]	// tmp105, *_5
.L32:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	ldr	x6, [x0]	// MEM[base: j_26, offset: 0B], MEM[base: j_26, offset: 0B]
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldp	w3, w4, [x0, 8]	//, MEM[base: j_26, offset: 12B], MEM[base: j_26, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x6	// tmp101, MEM[base: j_26, offset: 0B]
	clz	x5, x5	// tmp101, tmp101
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w3, w5	// tmp105, MEM[base: j_26, offset: 8B], tmp101
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x2, x4, lsl 2]	// tmp105, *_5
.L31:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	ldr	x6, [x0]	// MEM[base: j_26, offset: 0B], MEM[base: j_26, offset: 0B]
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldp	w3, w4, [x0, 8]	//, MEM[base: j_26, offset: 12B], MEM[base: j_26, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x6	// tmp101, MEM[base: j_26, offset: 0B]
	clz	x5, x5	// tmp101, tmp101
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w3, w5	// tmp105, MEM[base: j_26, offset: 8B], tmp101
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x2, x4, lsl 2]	// tmp105, *_5
.L30:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	ldr	x6, [x0]	// MEM[base: j_26, offset: 0B], MEM[base: j_26, offset: 0B]
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldp	w3, w4, [x0, 8]	//, MEM[base: j_26, offset: 12B], MEM[base: j_26, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x6	// tmp101, MEM[base: j_26, offset: 0B]
	clz	x5, x5	// tmp101, tmp101
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w3, w5	// tmp105, MEM[base: j_26, offset: 8B], tmp101
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x2, x4, lsl 2]	// tmp105, *_5
.L29:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	ldr	x6, [x0]	// MEM[base: j_26, offset: 0B], MEM[base: j_26, offset: 0B]
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldp	w3, w4, [x0, 8]	//, MEM[base: j_26, offset: 12B], MEM[base: j_26, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x6	// tmp101, MEM[base: j_26, offset: 0B]
	clz	x5, x5	// tmp101, tmp101
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w3, w5	// tmp105, MEM[base: j_26, offset: 8B], tmp101
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x2, x4, lsl 2]	// tmp105, *_5
.L28:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	ldr	x6, [x0]	// MEM[base: j_26, offset: 0B], MEM[base: j_26, offset: 0B]
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldp	w3, w4, [x0, 8]	//, MEM[base: j_26, offset: 12B], MEM[base: j_26, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x6	// tmp101, MEM[base: j_26, offset: 0B]
	clz	x5, x5	// tmp101, tmp101
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w3, w5	// tmp105, MEM[base: j_26, offset: 8B], tmp101
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x2, x4, lsl 2]	// tmp105, *_5
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	beq	.L3		//,
.L5:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	ldr	x6, [x0]	// MEM[base: j_26, offset: 0B], MEM[base: j_26, offset: 0B]
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x7, x0, 16	// tmp112, begin,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldp	w3, w4, [x0, 8]	//, MEM[base: j_26, offset: 12B], MEM[base: j_26, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x6	// tmp101, MEM[base: j_26, offset: 0B]
	clz	x5, x5	// tmp101, tmp101
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w3, w5	// tmp105, MEM[base: j_26, offset: 8B], tmp101
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x2, x4, lsl 2]	// tmp105, *_5
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	ldr	x6, [x0, 16]	// MEM[base: j_26, offset: 0B], MEM[base: j_26, offset: 0B]
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x7, 112	// begin, tmp112,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldp	w3, w4, [x7, 8]	//, MEM[base: j_26, offset: 12B], MEM[base: j_26, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x6	// tmp101, MEM[base: j_26, offset: 0B]
	clz	x5, x5	// tmp101, tmp101
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w3, w5	// tmp105, MEM[base: j_26, offset: 8B], tmp101
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	ldr	x6, [x7, 16]	// MEM[base: j_26, offset: 0B], MEM[base: j_26, offset: 0B]
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x2, x4, lsl 2]	// tmp105, *_5
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldp	w3, w4, [x7, 24]	//, MEM[base: j_26, offset: 12B], MEM[base: j_26, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x6	// tmp101, MEM[base: j_26, offset: 0B]
	clz	x5, x5	// tmp101, tmp101
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w3, w5	// tmp105, MEM[base: j_26, offset: 8B], tmp101
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	ldr	x6, [x7, 32]	// MEM[base: j_26, offset: 0B], MEM[base: j_26, offset: 0B]
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x2, x4, lsl 2]	// tmp105, *_5
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldp	w3, w4, [x7, 40]	//, MEM[base: j_26, offset: 12B], MEM[base: j_26, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x6	// tmp101, MEM[base: j_26, offset: 0B]
	clz	x5, x5	// tmp101, tmp101
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w3, w5	// tmp105, MEM[base: j_26, offset: 8B], tmp101
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	ldr	x6, [x7, 48]	// MEM[base: j_26, offset: 0B], MEM[base: j_26, offset: 0B]
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x2, x4, lsl 2]	// tmp105, *_5
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldp	w3, w4, [x7, 56]	//, MEM[base: j_26, offset: 12B], MEM[base: j_26, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x6	// tmp101, MEM[base: j_26, offset: 0B]
	clz	x5, x5	// tmp101, tmp101
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w3, w5	// tmp105, MEM[base: j_26, offset: 8B], tmp101
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	ldr	x6, [x7, 64]	// MEM[base: j_26, offset: 0B], MEM[base: j_26, offset: 0B]
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x2, x4, lsl 2]	// tmp105, *_5
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldp	w3, w4, [x7, 72]	//, MEM[base: j_26, offset: 12B], MEM[base: j_26, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x6	// tmp101, MEM[base: j_26, offset: 0B]
	clz	x5, x5	// tmp101, tmp101
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w3, w5	// tmp105, MEM[base: j_26, offset: 8B], tmp101
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	ldr	x6, [x7, 80]	// MEM[base: j_26, offset: 0B], MEM[base: j_26, offset: 0B]
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x2, x4, lsl 2]	// tmp105, *_5
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldp	w3, w4, [x7, 88]	//, MEM[base: j_26, offset: 12B], MEM[base: j_26, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x6	// tmp101, MEM[base: j_26, offset: 0B]
	clz	x5, x5	// tmp101, tmp101
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w3, w5	// tmp105, MEM[base: j_26, offset: 8B], tmp101
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	ldr	x6, [x7, 96]	// MEM[base: j_26, offset: 0B], MEM[base: j_26, offset: 0B]
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x2, x4, lsl 2]	// tmp105, *_5
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldp	w3, w4, [x7, 104]	//, MEM[base: j_26, offset: 12B], MEM[base: j_26, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x6	// tmp101, MEM[base: j_26, offset: 0B]
	clz	x5, x5	// tmp101, tmp101
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w3, w5	// tmp105, MEM[base: j_26, offset: 8B], tmp101
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x2, x4, lsl 2]	// tmp105, *_5
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	bne	.L5		//,
// bitmapdecoding.cpp:367: }
	ret	
	.p2align 2
.L43:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	ldr	x6, [x0]	// MEM[base: j_26, offset: 0B], MEM[base: j_26, offset: 0B]
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldp	w3, w4, [x0, 8]	//, MEM[base: j_26, offset: 12B], MEM[base: j_26, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x6	// tmp101, MEM[base: j_26, offset: 0B]
	clz	x5, x5	// tmp101, tmp101
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w3, w5	// tmp105, MEM[base: j_26, offset: 8B], tmp101
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x2, x4, lsl 2]	// tmp105, *_5
	b	.L33		//
	.cfi_endproc
.LFE2227:
	.size	_Z6unpackILj1EEvP6lead_sS1_Pj, .-_Z6unpackILj1EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj2EEvP6lead_sS1_Pj, %function
_Z6unpackILj2EEvP6lead_sS1_Pj:
.LFB2228:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L44		//,
	sub	x3, x1, x0	// tmp119, end, begin
	sub	x3, x3, #16	// tmp120, tmp119,
	lsr	x3, x3, 4	// tmp118, tmp120,
	add	x3, x3, 1	// tmp121, tmp118,
	ands	x3, x3, 3	// tmp122, tmp121,
	beq	.L46		//,
	cmp	x3, 1	// tmp122,
	beq	.L57		//,
	cmp	x3, 2	// tmp122,
	beq	.L58		//,
	ldp	w3, w6, [x0, 8]	//, MEM[base: j_13, offset: 12B], MEM[base: j_13, offset: 8B]
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x5, [x0, -16]	// bits, MEM[base: j_13, offset: 0B]
	lsl	x6, x6, 2	// _34, MEM[base: j_13, offset: 12B],
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x9, x5	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x4, x5, #1	// _38, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x9, x9	// tmp109, tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	x7, x2, x6	// tmp115, out, _34
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w3, w9	// tmp111, MEM[base: j_13, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x2, x6]	// tmp111, *_35
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x4, x5, x4	// bits, bits, _38
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w3, [x0, -8]	//, MEM[base: j_13, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x4	// tmp114, bits
	clz	x8, x8	// tmp114, tmp114
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w3, w8	// tmp116, MEM[base: j_13, offset: 8B], tmp114
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x7, 4]	// tmp116, *_50
.L58:
	ldp	w3, w6, [x0, 8]	//, MEM[base: j_13, offset: 12B], MEM[base: j_13, offset: 8B]
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x5, [x0, -16]	// bits, MEM[base: j_13, offset: 0B]
	lsl	x6, x6, 2	// _34, MEM[base: j_13, offset: 12B],
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x9, x5	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x4, x5, #1	// _38, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x9, x9	// tmp109, tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	x7, x2, x6	// tmp115, out, _34
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w3, w9	// tmp111, MEM[base: j_13, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x2, x6]	// tmp111, *_35
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x4, x5, x4	// bits, bits, _38
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w3, [x0, -8]	//, MEM[base: j_13, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x4	// tmp114, bits
	clz	x8, x8	// tmp114, tmp114
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w3, w8	// tmp116, MEM[base: j_13, offset: 8B], tmp114
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x7, 4]	// tmp116, *_50
.L57:
	ldp	w3, w6, [x0, 8]	//, MEM[base: j_13, offset: 12B], MEM[base: j_13, offset: 8B]
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x5, [x0, -16]	// bits, MEM[base: j_13, offset: 0B]
	lsl	x6, x6, 2	// _34, MEM[base: j_13, offset: 12B],
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x9, x5	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x4, x5, #1	// _38, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x9, x9	// tmp109, tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	x7, x2, x6	// tmp115, out, _34
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w3, w9	// tmp111, MEM[base: j_13, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x2, x6]	// tmp111, *_35
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x4, x5, x4	// bits, bits, _38
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w3, [x0, -8]	//, MEM[base: j_13, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x4	// tmp114, bits
	clz	x8, x8	// tmp114, tmp114
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w3, w8	// tmp116, MEM[base: j_13, offset: 8B], tmp114
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x7, 4]	// tmp116, *_50
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	beq	.L44		//,
.L46:
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x5, [x0]	// bits, MEM[base: j_13, offset: 0B]
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x10, x0, 16	// tmp123, begin,
	ldp	w3, w6, [x0, 8]	//, MEM[base: j_13, offset: 12B], MEM[base: j_13, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x9, x5	// tmp109, bits
	clz	x9, x9	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x4, x5, #1	// _38, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w3, w9	// tmp111, MEM[base: j_13, offset: 8B], tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x4, x5, x4	// bits, bits, _38
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x2, x6, lsl 2]	// tmp111, *_35
	add	x7, x2, x6, lsl 2	// tmp115, out, MEM[base: j_13, offset: 12B],
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x5, [x0, 16]	// bits, MEM[base: j_13, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x4	// tmp114, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w3, [x0, 8]	//, MEM[base: j_13, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x8, x8	// tmp114, tmp114
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x4, x5, #1	// _38, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x9, x5	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w3, w8	// tmp116, MEM[base: j_13, offset: 8B], tmp114
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x4, x5, x4	// bits, bits, _38
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x5, [x10, 16]	// bits, MEM[base: j_13, offset: 0B]
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x7, 4]	// tmp116, *_50
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x9, x9	// tmp109, tmp109
	rbit	x8, x4	// tmp114, bits
	ldp	w3, w6, [x10, 8]	//, MEM[base: j_13, offset: 12B], MEM[base: j_13, offset: 8B]
	clz	x8, x8	// tmp114, tmp114
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x4, x5, #1	// _38, bits,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x10, 48	// begin, tmp123,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w3, w9	// tmp111, MEM[base: j_13, offset: 8B], tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x4, x5, x4	// bits, bits, _38
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x2, x6, lsl 2]	// tmp111, *_35
	add	x7, x2, x6, lsl 2	// tmp115, out, MEM[base: j_13, offset: 12B],
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x9, x5	// tmp109, bits
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w3, [x10, 8]	//, MEM[base: j_13, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x9, x9	// tmp109, tmp109
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x5, [x10, 32]	// bits, MEM[base: j_13, offset: 0B]
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w3, w8	// tmp116, MEM[base: j_13, offset: 8B], tmp114
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x7, 4]	// tmp116, *_50
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x4	// tmp114, bits
	clz	x8, x8	// tmp114, tmp114
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x4, x5, #1	// _38, bits,
	ldp	w3, w6, [x10, 24]	//, MEM[base: j_13, offset: 12B], MEM[base: j_13, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x4, x5, x4	// bits, bits, _38
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w3, w9	// tmp111, MEM[base: j_13, offset: 8B], tmp109
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x9, x5	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x2, x6, lsl 2]	// tmp111, *_35
	add	x7, x2, x6, lsl 2	// tmp115, out, MEM[base: j_13, offset: 12B],
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x9, x9	// tmp109, tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w3, [x10, 24]	//, MEM[base: j_13, offset: 8B]
	add	w3, w3, w8	// tmp116, MEM[base: j_13, offset: 8B], tmp114
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x7, 4]	// tmp116, *_50
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x4	// tmp114, bits
	ldp	w3, w6, [x10, 40]	//, MEM[base: j_13, offset: 12B], MEM[base: j_13, offset: 8B]
	clz	x8, x8	// tmp114, tmp114
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w3, w9	// tmp111, MEM[base: j_13, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x2, x6, lsl 2]	// tmp111, *_35
	add	x7, x2, x6, lsl 2	// tmp115, out, MEM[base: j_13, offset: 12B],
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w3, [x10, 40]	//, MEM[base: j_13, offset: 8B]
	add	w3, w3, w8	// tmp116, MEM[base: j_13, offset: 8B], tmp114
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x7, 4]	// tmp116, *_50
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	bne	.L46		//,
.L44:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2228:
	.size	_Z6unpackILj2EEvP6lead_sS1_Pj, .-_Z6unpackILj2EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj3EEvP6lead_sS1_Pj, %function
_Z6unpackILj3EEvP6lead_sS1_Pj:
.LFB2229:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L63		//,
	sub	x3, x1, x0	// tmp131, end, begin
	tbz	x3, 4, .L65	// tmp131,,
	ldp	w4, w6, [x0, 8]	//, MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0, -16]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x6, x6, 2	// _44, MEM[base: j_30, offset: 12B],
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x3	// tmp117, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x9, x3, #1	// _40, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x5, x5	// tmp117, tmp117
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	x7, x2, x6	// tmp122, out, _44
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w5	// tmp119, MEM[base: j_30, offset: 8B], tmp117
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x6]	// tmp119, *_43
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x9	// bits, bits, _40
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x9, x3	// tmp121, bits
	clz	x9, x9	// tmp121, tmp121
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x10, x3, #1	// _59, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w9	// tmp123, MEM[base: j_30, offset: 8B], tmp121
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x7, 4]	// tmp123, *_57
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x10	// bits, bits, _59
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp126, bits
	clz	x6, x6	// tmp126, tmp126
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp128, MEM[base: j_30, offset: 8B], tmp126
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp128, *_6
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	beq	.L63		//,
	.p2align 3
.L65:
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x8, x0, 16	// tmp135, begin,
	ldp	w4, w6, [x0, 8]	//, MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x3	// tmp117, bits
	clz	x5, x5	// tmp117, tmp117
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x9, x3, #1	// _40, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w5	// tmp119, MEM[base: j_30, offset: 8B], tmp117
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x9	// bits, bits, _40
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x6, lsl 2]	// tmp119, *_43
	add	x7, x2, x6, lsl 2	// tmp122, out, MEM[base: j_30, offset: 12B],
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x9, x3	// tmp121, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x10, x3, #1	// _59, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x10	// bits, bits, _59
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x9, x9	// tmp121, tmp121
	rbit	x6, x3	// tmp126, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w9	// tmp123, MEM[base: j_30, offset: 8B], tmp121
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp126, tmp126
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0, 16]	// bits, MEM[base: j_30, offset: 0B]
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x7, 4]	// tmp123, *_57
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 32	// begin, begin,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, -24]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x3	// tmp117, bits
	clz	x5, x5	// tmp117, tmp117
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x9, x3, #1	// _40, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp128, MEM[base: j_30, offset: 8B], tmp126
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp128, *_6
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x9	// bits, bits, _40
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	ldp	w4, w6, [x8, 8]	//, MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x9, x3	// tmp121, bits
	clz	x9, x9	// tmp121, tmp121
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x10, x3, #1	// _59, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w5	// tmp119, MEM[base: j_30, offset: 8B], tmp117
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x10	// bits, bits, _59
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x6, lsl 2]	// tmp119, *_43
	add	x7, x2, x6, lsl 2	// tmp122, out, MEM[base: j_30, offset: 12B],
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp126, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x8, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp126, tmp126
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w9	// tmp123, MEM[base: j_30, offset: 8B], tmp121
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x7, 4]	// tmp123, *_57
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x8, 8]	//, MEM[base: j_30, offset: 8B]
	add	w4, w4, w6	// tmp128, MEM[base: j_30, offset: 8B], tmp126
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp128, *_6
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	bne	.L65		//,
.L63:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2229:
	.size	_Z6unpackILj3EEvP6lead_sS1_Pj, .-_Z6unpackILj3EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj4EEvP6lead_sS1_Pj, %function
_Z6unpackILj4EEvP6lead_sS1_Pj:
.LFB2230:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L72		//,
	sub	x3, x1, x0	// tmp143, end, begin
	tbz	x3, 4, .L74	// tmp143,,
	ldp	w5, w9, [x0, 8]	//, MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0, -16]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x9, 2	// _44, MEM[base: j_30, offset: 12B],
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp125, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _40, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x7, x7	// tmp125, tmp125
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	x4, x2, x9	// tmp130, out, _44
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w7	// tmp127, MEM[base: j_30, offset: 8B], tmp125
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x2, x9]	// tmp127, *_43
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _40
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w7, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp129, bits
	clz	x6, x6	// tmp129, tmp129
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x10, x3, #1	// _59, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w7, w7, w6	// tmp131, MEM[base: j_30, offset: 8B], tmp129
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w7, [x4, 4]	// tmp131, *_57
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x10	// bits, bits, _59
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x10, x3	// tmp133, bits
	clz	x10, x10	// tmp133, tmp133
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x11, x3, #1	// _76, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w10	// tmp135, MEM[base: j_30, offset: 8B], tmp133
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 8]	// tmp135, *_73
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x11	// bits, bits, _76
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x9, x3	// tmp138, bits
	clz	x9, x9	// tmp138, tmp138
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w9	// tmp140, MEM[base: j_30, offset: 8B], tmp138
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 12]	// tmp140, *_6
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	beq	.L72		//,
	.p2align 3
.L74:
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x8, x0, 16	// tmp147, begin,
	ldp	w5, w9, [x0, 8]	//, MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp125, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _40, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x7, x7	// tmp125, tmp125
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _40
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w7	// tmp127, MEM[base: j_30, offset: 8B], tmp125
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x10, x3, #1	// _59, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x2, x9, lsl 2]	// tmp127, *_43
	add	x4, x2, x9, lsl 2	// tmp130, out, MEM[base: j_30, offset: 12B],
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp129, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x10	// bits, bits, _59
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w7, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x11, x3, #1	// _76, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp129, tmp129
	rbit	x10, x3	// tmp133, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x11	// bits, bits, _76
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w7, w7, w6	// tmp131, MEM[base: j_30, offset: 8B], tmp129
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x9, x3	// tmp138, bits
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0, 16]	// bits, MEM[base: j_30, offset: 0B]
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w7, [x4, 4]	// tmp131, *_57
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x10, x10	// tmp133, tmp133
	clz	x9, x9	// tmp138, tmp138
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp125, bits
	clz	x7, x7	// tmp125, tmp125
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 32	// begin, begin,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w10	// tmp135, MEM[base: j_30, offset: 8B], tmp133
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 8]	// tmp135, *_73
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _40, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -24]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _40
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp129, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x10, x3, #1	// _59, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w9	// tmp140, MEM[base: j_30, offset: 8B], tmp138
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 12]	// tmp140, *_6
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp129, tmp129
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x10	// bits, bits, _59
	ldp	w5, w9, [x8, 8]	//, MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x10, x3	// tmp133, bits
	clz	x10, x10	// tmp133, tmp133
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x11, x3, #1	// _76, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w7	// tmp127, MEM[base: j_30, offset: 8B], tmp125
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x11	// bits, bits, _76
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x2, x9, lsl 2]	// tmp127, *_43
	add	x4, x2, x9, lsl 2	// tmp130, out, MEM[base: j_30, offset: 12B],
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x9, x3	// tmp138, bits
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w7, [x8, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x9, x9	// tmp138, tmp138
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w7, w7, w6	// tmp131, MEM[base: j_30, offset: 8B], tmp129
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w7, [x4, 4]	// tmp131, *_57
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x8, 8]	//, MEM[base: j_30, offset: 8B]
	add	w6, w6, w10	// tmp135, MEM[base: j_30, offset: 8B], tmp133
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 8]	// tmp135, *_73
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x8, 8]	//, MEM[base: j_30, offset: 8B]
	add	w5, w5, w9	// tmp140, MEM[base: j_30, offset: 8B], tmp138
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 12]	// tmp140, *_6
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	bne	.L74		//,
.L72:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2230:
	.size	_Z6unpackILj4EEvP6lead_sS1_Pj, .-_Z6unpackILj4EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj5EEvP6lead_sS1_Pj, %function
_Z6unpackILj5EEvP6lead_sS1_Pj:
.LFB2231:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L81		//,
	sub	x3, x1, x0	// tmp155, end, begin
	tbz	x3, 4, .L83	// tmp155,,
	ldp	w5, w10, [x0, 8]	//, MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0, -16]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x10, x10, 2	// _44, MEM[base: j_30, offset: 12B],
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x3	// tmp133, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _40, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x8, x8	// tmp133, tmp133
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	x4, x2, x10	// tmp138, out, _44
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w8	// tmp135, MEM[base: j_30, offset: 8B], tmp133
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x2, x10]	// tmp135, *_43
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _40
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w8, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp137, bits
	clz	x7, x7	// tmp137, tmp137
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _59, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w8, w8, w7	// tmp139, MEM[base: j_30, offset: 8B], tmp137
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w8, [x4, 4]	// tmp139, *_57
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _59
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w7, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp141, bits
	clz	x6, x6	// tmp141, tmp141
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x11, x3, #1	// _76, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w7, w7, w6	// tmp143, MEM[base: j_30, offset: 8B], tmp141
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w7, [x4, 8]	// tmp143, *_73
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x11	// bits, bits, _76
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x11, x3	// tmp145, bits
	clz	x11, x11	// tmp145, tmp145
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x12, x3, #1	// _93, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w11	// tmp147, MEM[base: j_30, offset: 8B], tmp145
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 12]	// tmp147, *_90
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x12	// bits, bits, _93
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x10, x3	// tmp150, bits
	clz	x10, x10	// tmp150, tmp150
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w10	// tmp152, MEM[base: j_30, offset: 8B], tmp150
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 16]	// tmp152, *_6
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	beq	.L81		//,
	.p2align 3
.L83:
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x9, x0, 16	// tmp159, begin,
	ldp	w5, w10, [x0, 8]	//, MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _40, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x3	// tmp133, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _40
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _59, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x8, x8	// tmp133, tmp133
	rbit	x7, x3	// tmp137, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _59
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w8	// tmp135, MEM[base: j_30, offset: 8B], tmp133
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x11, x3, #1	// _76, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x2, x10, lsl 2]	// tmp135, *_43
	add	x4, x2, x10, lsl 2	// tmp138, out, MEM[base: j_30, offset: 12B],
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp141, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x11	// bits, bits, _76
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w8, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x12, x3, #1	// _93, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x7, x7	// tmp137, tmp137
	rbit	x11, x3	// tmp145, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x12	// bits, bits, _93
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w8, w8, w7	// tmp139, MEM[base: j_30, offset: 8B], tmp137
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x10, x3	// tmp150, bits
	clz	x6, x6	// tmp141, tmp141
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0, 16]	// bits, MEM[base: j_30, offset: 0B]
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w8, [x4, 4]	// tmp139, *_57
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x11, x11	// tmp145, tmp145
	clz	x10, x10	// tmp150, tmp150
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w7, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x3	// tmp133, bits
	clz	x8, x8	// tmp133, tmp133
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w7, w7, w6	// tmp143, MEM[base: j_30, offset: 8B], tmp141
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w7, [x4, 8]	// tmp143, *_73
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, 8]	//, MEM[base: j_30, offset: 8B]
	add	w6, w6, w11	// tmp147, MEM[base: j_30, offset: 8B], tmp145
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 12]	// tmp147, *_90
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _40, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _40
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp137, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _59, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w10	// tmp152, MEM[base: j_30, offset: 8B], tmp150
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 16]	// tmp152, *_6
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x7, x7	// tmp137, tmp137
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _59
	ldp	w5, w10, [x0, 24]	//, MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp141, bits
	clz	x6, x6	// tmp141, tmp141
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x11, x3, #1	// _76, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w8	// tmp135, MEM[base: j_30, offset: 8B], tmp133
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x11	// bits, bits, _76
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x2, x10, lsl 2]	// tmp135, *_43
	add	x4, x2, x10, lsl 2	// tmp138, out, MEM[base: j_30, offset: 12B],
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x11, x3	// tmp145, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x12, x3, #1	// _93, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w8, [x9, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x11, x11	// tmp145, tmp145
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x12	// bits, bits, _93
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 32	// begin, begin,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w8, w8, w7	// tmp139, MEM[base: j_30, offset: 8B], tmp137
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w8, [x4, 4]	// tmp139, *_57
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x10, x3	// tmp150, bits
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w7, [x9, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x10, x10	// tmp150, tmp150
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w7, w7, w6	// tmp143, MEM[base: j_30, offset: 8B], tmp141
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w7, [x4, 8]	// tmp143, *_73
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x9, 8]	//, MEM[base: j_30, offset: 8B]
	add	w6, w6, w11	// tmp147, MEM[base: j_30, offset: 8B], tmp145
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 12]	// tmp147, *_90
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x9, 8]	//, MEM[base: j_30, offset: 8B]
	add	w5, w5, w10	// tmp152, MEM[base: j_30, offset: 8B], tmp150
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 16]	// tmp152, *_6
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	bne	.L83		//,
.L81:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2231:
	.size	_Z6unpackILj5EEvP6lead_sS1_Pj, .-_Z6unpackILj5EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj6EEvP6lead_sS1_Pj, %function
_Z6unpackILj6EEvP6lead_sS1_Pj:
.LFB2232:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L90		//,
	.p2align 3
.L92:
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	ldp	w5, w4, [x0, 8]	//, MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp141, bits
	clz	x6, x6	// tmp141, tmp141
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w6	// tmp143, MEM[base: j_30, offset: 8B], tmp141
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _40, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x2, x4, lsl 2]	// tmp143, *_43
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _40
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	x4, x2, x4, lsl 2	// tmp146, out, MEM[base: j_30, offset: 12B],
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp145, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x7, x7	// tmp145, tmp145
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _59, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w7	// tmp147, MEM[base: j_30, offset: 8B], tmp145
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 4]	// tmp147, *_57
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _59
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp149, bits
	clz	x6, x6	// tmp149, tmp149
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x7, x3, #1	// _76, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w6	// tmp151, MEM[base: j_30, offset: 8B], tmp149
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 8]	// tmp151, *_73
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x7	// bits, bits, _76
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x3	// tmp153, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _93, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x8, x8	// tmp153, tmp153
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _93
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w8	// tmp155, MEM[base: j_30, offset: 8B], tmp153
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 12]	// tmp155, *_90
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _110, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp157, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _110
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x7, x7	// tmp157, tmp157
	rbit	x3, x3	// tmp162, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w7	// tmp159, MEM[base: j_30, offset: 8B], tmp157
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 16]	// tmp159, *_107
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x3, x3	// tmp162, tmp162
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w5, w3	// tmp164, MEM[base: j_30, offset: 8B], tmp162
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x4, 20]	// tmp164, *_6
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	bne	.L92		//,
.L90:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2232:
	.size	_Z6unpackILj6EEvP6lead_sS1_Pj, .-_Z6unpackILj6EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj7EEvP6lead_sS1_Pj, %function
_Z6unpackILj7EEvP6lead_sS1_Pj:
.LFB2233:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L94		//,
	.p2align 3
.L96:
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	ldp	w5, w4, [x0, 8]	//, MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp149, bits
	clz	x6, x6	// tmp149, tmp149
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w6	// tmp151, MEM[base: j_30, offset: 8B], tmp149
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _40, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x2, x4, lsl 2]	// tmp151, *_43
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _40
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	x4, x2, x4, lsl 2	// tmp154, out, MEM[base: j_30, offset: 12B],
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp153, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x7, x7	// tmp153, tmp153
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _59, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w7	// tmp155, MEM[base: j_30, offset: 8B], tmp153
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 4]	// tmp155, *_57
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _59
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x3	// tmp157, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x5, x5	// tmp157, tmp157
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x7, x3, #1	// _76, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w5	// tmp159, MEM[base: j_30, offset: 8B], tmp157
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 8]	// tmp159, *_73
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x7	// bits, bits, _76
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp161, bits
	clz	x7, x7	// tmp161, tmp161
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _93, bits,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _93
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w7	// tmp163, MEM[base: j_30, offset: 8B], tmp161
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 12]	// tmp163, *_90
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _110, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x3	// tmp165, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _110
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x8, x8	// tmp165, tmp165
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _127, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp169, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w8	// tmp167, MEM[base: j_30, offset: 8B], tmp165
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 16]	// tmp167, *_107
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _127
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x7, x7	// tmp169, tmp169
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x3, x3	// tmp174, bits
	clz	x3, x3	// tmp174, tmp174
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w7	// tmp171, MEM[base: j_30, offset: 8B], tmp169
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 20]	// tmp171, *_124
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w5, w3	// tmp176, MEM[base: j_30, offset: 8B], tmp174
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x4, 24]	// tmp176, *_6
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	bne	.L96		//,
.L94:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2233:
	.size	_Z6unpackILj7EEvP6lead_sS1_Pj, .-_Z6unpackILj7EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj8EEvP6lead_sS1_Pj, %function
_Z6unpackILj8EEvP6lead_sS1_Pj:
.LFB2234:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L98		//,
	.p2align 3
.L100:
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	ldp	w5, w4, [x0, 8]	//, MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp157, bits
	clz	x6, x6	// tmp157, tmp157
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w6	// tmp159, MEM[base: j_30, offset: 8B], tmp157
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _40, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x2, x4, lsl 2]	// tmp159, *_43
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _40
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	x4, x2, x4, lsl 2	// tmp162, out, MEM[base: j_30, offset: 12B],
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp161, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x7, x7	// tmp161, tmp161
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _59, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w7	// tmp163, MEM[base: j_30, offset: 8B], tmp161
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 4]	// tmp163, *_57
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _59
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x3	// tmp165, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x5, x5	// tmp165, tmp165
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x7, x3, #1	// _76, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w5	// tmp167, MEM[base: j_30, offset: 8B], tmp165
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 8]	// tmp167, *_73
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x7	// bits, bits, _76
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x3	// tmp169, bits
	clz	x8, x8	// tmp169, tmp169
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _93, bits,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _93
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w8	// tmp171, MEM[base: j_30, offset: 8B], tmp169
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 12]	// tmp171, *_90
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x7, x3, #1	// _110, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp173, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x7	// bits, bits, _110
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w7, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp173, tmp173
	rbit	x5, x3	// tmp177, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x8, x3, #1	// _127, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w7, w7, w6	// tmp175, MEM[base: j_30, offset: 8B], tmp173
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w7, [x4, 16]	// tmp175, *_107
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x5, x5	// tmp177, tmp177
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x8	// bits, bits, _127
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x3	// tmp181, bits
	clz	x8, x8	// tmp181, tmp181
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x7, x3, #1	// _144, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w5	// tmp179, MEM[base: j_30, offset: 8B], tmp177
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 20]	// tmp179, *_124
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x7	// bits, bits, _144
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x3, x3	// tmp186, bits
	clz	x3, x3	// tmp186, tmp186
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w8	// tmp183, MEM[base: j_30, offset: 8B], tmp181
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 24]	// tmp183, *_141
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w5, w3	// tmp188, MEM[base: j_30, offset: 8B], tmp186
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x4, 28]	// tmp188, *_6
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	bne	.L100		//,
.L98:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2234:
	.size	_Z6unpackILj8EEvP6lead_sS1_Pj, .-_Z6unpackILj8EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj9EEvP6lead_sS1_Pj, %function
_Z6unpackILj9EEvP6lead_sS1_Pj:
.LFB2235:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L102		//,
	.p2align 3
.L104:
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	ldp	w5, w4, [x0, 8]	//, MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp165, bits
	clz	x6, x6	// tmp165, tmp165
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w6	// tmp167, MEM[base: j_30, offset: 8B], tmp165
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _40, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x2, x4, lsl 2]	// tmp167, *_43
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _40
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	x4, x2, x4, lsl 2	// tmp170, out, MEM[base: j_30, offset: 12B],
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp169, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x7, x7	// tmp169, tmp169
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _59, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w7	// tmp171, MEM[base: j_30, offset: 8B], tmp169
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 4]	// tmp171, *_57
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _59
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp173, bits
	clz	x6, x6	// tmp173, tmp173
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x7, x3, #1	// _76, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w6	// tmp175, MEM[base: j_30, offset: 8B], tmp173
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 8]	// tmp175, *_73
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x7	// bits, bits, _76
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x3	// tmp177, bits
	clz	x8, x8	// tmp177, tmp177
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _93, bits,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _93
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w8	// tmp179, MEM[base: j_30, offset: 8B], tmp177
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 12]	// tmp179, *_90
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _110, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp181, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _110
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x7, x7	// tmp181, tmp181
	rbit	x6, x3	// tmp185, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x8, x3, #1	// _127, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w7	// tmp183, MEM[base: j_30, offset: 8B], tmp181
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 16]	// tmp183, *_107
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp185, tmp185
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x8	// bits, bits, _127
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w7, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x9, x3	// tmp189, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _144, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x9, x9	// tmp189, tmp189
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w7, w7, w6	// tmp187, MEM[base: j_30, offset: 8B], tmp185
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w7, [x4, 20]	// tmp187, *_124
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _144
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _161, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x3	// tmp193, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _161
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w9	// tmp191, MEM[base: j_30, offset: 8B], tmp189
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 24]	// tmp191, *_141
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x8, x8	// tmp193, tmp193
	rbit	x3, x3	// tmp198, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x3, x3	// tmp198, tmp198
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w8	// tmp195, MEM[base: j_30, offset: 8B], tmp193
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 28]	// tmp195, *_158
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w5, w3	// tmp200, MEM[base: j_30, offset: 8B], tmp198
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x4, 32]	// tmp200, *_6
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	bne	.L104		//,
.L102:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2235:
	.size	_Z6unpackILj9EEvP6lead_sS1_Pj, .-_Z6unpackILj9EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj10EEvP6lead_sS1_Pj, %function
_Z6unpackILj10EEvP6lead_sS1_Pj:
.LFB2236:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L106		//,
	.p2align 3
.L108:
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	ldp	w5, w4, [x0, 8]	//, MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp173, bits
	clz	x6, x6	// tmp173, tmp173
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w6	// tmp175, MEM[base: j_30, offset: 8B], tmp173
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _40, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x2, x4, lsl 2]	// tmp175, *_43
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _40
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	x4, x2, x4, lsl 2	// tmp178, out, MEM[base: j_30, offset: 12B],
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp177, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x7, x7	// tmp177, tmp177
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _59, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w7	// tmp179, MEM[base: j_30, offset: 8B], tmp177
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 4]	// tmp179, *_57
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _59
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x3	// tmp181, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x5, x5	// tmp181, tmp181
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x7, x3, #1	// _76, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w5	// tmp183, MEM[base: j_30, offset: 8B], tmp181
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 8]	// tmp183, *_73
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x7	// bits, bits, _76
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp185, bits
	clz	x7, x7	// tmp185, tmp185
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _93, bits,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _93
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w7	// tmp187, MEM[base: j_30, offset: 8B], tmp185
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 12]	// tmp187, *_90
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _110, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x3	// tmp189, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _110
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x8, x8	// tmp189, tmp189
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _127, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp193, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w8	// tmp191, MEM[base: j_30, offset: 8B], tmp189
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 16]	// tmp191, *_107
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _127
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x7, x7	// tmp193, tmp193
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x10, x3	// tmp197, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _144, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x10, x10	// tmp197, tmp197
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w7	// tmp195, MEM[base: j_30, offset: 8B], tmp193
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 20]	// tmp195, *_124
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _144
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w7, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _161, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x9, x3	// tmp201, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _161
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w7, w7, w10	// tmp199, MEM[base: j_30, offset: 8B], tmp197
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w7, [x4, 24]	// tmp199, *_141
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x9, x9	// tmp201, tmp201
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _178, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x3	// tmp205, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _178
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x8, x8	// tmp205, tmp205
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w9	// tmp203, MEM[base: j_30, offset: 8B], tmp201
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 28]	// tmp203, *_158
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x3, x3	// tmp210, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x3, x3	// tmp210, tmp210
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w8	// tmp207, MEM[base: j_30, offset: 8B], tmp205
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 32]	// tmp207, *_175
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w5, w3	// tmp212, MEM[base: j_30, offset: 8B], tmp210
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x4, 36]	// tmp212, *_6
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	bne	.L108		//,
.L106:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2236:
	.size	_Z6unpackILj10EEvP6lead_sS1_Pj, .-_Z6unpackILj10EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj11EEvP6lead_sS1_Pj, %function
_Z6unpackILj11EEvP6lead_sS1_Pj:
.LFB2237:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L110		//,
	.p2align 3
.L112:
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	ldp	w5, w4, [x0, 8]	//, MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp181, bits
	clz	x6, x6	// tmp181, tmp181
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w6	// tmp183, MEM[base: j_30, offset: 8B], tmp181
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _40, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x2, x4, lsl 2]	// tmp183, *_43
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _40
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	x4, x2, x4, lsl 2	// tmp186, out, MEM[base: j_30, offset: 12B],
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp185, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x7, x7	// tmp185, tmp185
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _59, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w7	// tmp187, MEM[base: j_30, offset: 8B], tmp185
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 4]	// tmp187, *_57
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _59
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x3	// tmp189, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x5, x5	// tmp189, tmp189
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x7, x3, #1	// _76, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w5	// tmp191, MEM[base: j_30, offset: 8B], tmp189
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 8]	// tmp191, *_73
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x7	// bits, bits, _76
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp193, bits
	clz	x7, x7	// tmp193, tmp193
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _93, bits,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _93
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w7	// tmp195, MEM[base: j_30, offset: 8B], tmp193
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 12]	// tmp195, *_90
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _110, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x3	// tmp197, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _110
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x8, x8	// tmp197, tmp197
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _127, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x9, x3	// tmp201, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w8	// tmp199, MEM[base: j_30, offset: 8B], tmp197
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 16]	// tmp199, *_107
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _127
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x9, x9	// tmp201, tmp201
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _144, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp205, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _144
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w9	// tmp203, MEM[base: j_30, offset: 8B], tmp201
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 20]	// tmp203, *_124
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x8, x3, #1	// _161, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp209, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x8	// bits, bits, _161
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w8, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x7, x7	// tmp205, tmp205
	clz	x6, x6	// tmp209, tmp209
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w8, w8, w7	// tmp207, MEM[base: j_30, offset: 8B], tmp205
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w8, [x4, 24]	// tmp207, *_141
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x3	// tmp213, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x9, x3, #1	// _178, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w7, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x5, x5	// tmp213, tmp213
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x9	// bits, bits, _178
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w7, w7, w6	// tmp211, MEM[base: j_30, offset: 8B], tmp209
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w7, [x4, 28]	// tmp211, *_158
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x9, x3	// tmp217, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x8, x3, #1	// _195, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x9, x9	// tmp217, tmp217
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x8	// bits, bits, _195
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w5	// tmp215, MEM[base: j_30, offset: 8B], tmp213
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 32]	// tmp215, *_175
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x3, x3	// tmp222, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x3, x3	// tmp222, tmp222
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w9	// tmp219, MEM[base: j_30, offset: 8B], tmp217
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 36]	// tmp219, *_192
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w5, w3	// tmp224, MEM[base: j_30, offset: 8B], tmp222
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x4, 40]	// tmp224, *_6
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	bne	.L112		//,
.L110:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2237:
	.size	_Z6unpackILj11EEvP6lead_sS1_Pj, .-_Z6unpackILj11EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj12EEvP6lead_sS1_Pj, %function
_Z6unpackILj12EEvP6lead_sS1_Pj:
.LFB2238:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L114		//,
	.p2align 3
.L116:
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	ldp	w5, w4, [x0, 8]	//, MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp189, bits
	clz	x6, x6	// tmp189, tmp189
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w6	// tmp191, MEM[base: j_30, offset: 8B], tmp189
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _40, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x2, x4, lsl 2]	// tmp191, *_43
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _40
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	x4, x2, x4, lsl 2	// tmp194, out, MEM[base: j_30, offset: 12B],
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp193, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x7, x7	// tmp193, tmp193
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _59, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w7	// tmp195, MEM[base: j_30, offset: 8B], tmp193
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 4]	// tmp195, *_57
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _59
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x3	// tmp197, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x5, x5	// tmp197, tmp197
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x7, x3, #1	// _76, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w5	// tmp199, MEM[base: j_30, offset: 8B], tmp197
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 8]	// tmp199, *_73
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x7	// bits, bits, _76
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x3	// tmp201, bits
	clz	x8, x8	// tmp201, tmp201
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _93, bits,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _93
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w8	// tmp203, MEM[base: j_30, offset: 8B], tmp201
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 12]	// tmp203, *_90
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x7, x3, #1	// _110, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp205, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x7	// bits, bits, _110
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w7, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp205, tmp205
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _127, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x9, x3	// tmp209, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w7, w7, w6	// tmp207, MEM[base: j_30, offset: 8B], tmp205
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w7, [x4, 16]	// tmp207, *_107
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _127
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x9, x9	// tmp209, tmp209
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _144, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x3	// tmp213, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _144
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w9	// tmp211, MEM[base: j_30, offset: 8B], tmp209
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 20]	// tmp211, *_124
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _161, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp217, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _161
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x8, x8	// tmp213, tmp213
	clz	x7, x7	// tmp217, tmp217
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w8	// tmp215, MEM[base: j_30, offset: 8B], tmp213
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 24]	// tmp215, *_141
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp221, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x9, x3, #1	// _178, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w8, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp221, tmp221
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x9	// bits, bits, _178
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w8, w8, w7	// tmp219, MEM[base: j_30, offset: 8B], tmp217
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w8, [x4, 28]	// tmp219, *_158
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x10, x3	// tmp225, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _195, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w7, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x10, x10	// tmp225, tmp225
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _195
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w7, w7, w6	// tmp223, MEM[base: j_30, offset: 8B], tmp221
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w7, [x4, 32]	// tmp223, *_175
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _212, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x9, x3	// tmp229, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _212
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x9, x9	// tmp229, tmp229
	rbit	x3, x3	// tmp234, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w10	// tmp227, MEM[base: j_30, offset: 8B], tmp225
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 36]	// tmp227, *_192
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x3, x3	// tmp234, tmp234
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
	add	w5, w5, w9	// tmp231, MEM[base: j_30, offset: 8B], tmp229
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 40]	// tmp231, *_209
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w5, w3	// tmp236, MEM[base: j_30, offset: 8B], tmp234
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x4, 44]	// tmp236, *_6
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	bne	.L116		//,
.L114:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2238:
	.size	_Z6unpackILj12EEvP6lead_sS1_Pj, .-_Z6unpackILj12EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj13EEvP6lead_sS1_Pj, %function
_Z6unpackILj13EEvP6lead_sS1_Pj:
.LFB2239:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L118		//,
	.p2align 3
.L120:
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	ldp	w5, w4, [x0, 8]	//, MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp197, bits
	clz	x6, x6	// tmp197, tmp197
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w6	// tmp199, MEM[base: j_30, offset: 8B], tmp197
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _40, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x2, x4, lsl 2]	// tmp199, *_43
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _40
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	x4, x2, x4, lsl 2	// tmp202, out, MEM[base: j_30, offset: 12B],
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp201, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x7, x7	// tmp201, tmp201
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _59, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w7	// tmp203, MEM[base: j_30, offset: 8B], tmp201
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 4]	// tmp203, *_57
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _59
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp205, bits
	clz	x6, x6	// tmp205, tmp205
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x7, x3, #1	// _76, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w6	// tmp207, MEM[base: j_30, offset: 8B], tmp205
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 8]	// tmp207, *_73
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x7	// bits, bits, _76
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x3	// tmp209, bits
	clz	x8, x8	// tmp209, tmp209
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _93, bits,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _93
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w8	// tmp211, MEM[base: j_30, offset: 8B], tmp209
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 12]	// tmp211, *_90
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _110, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp213, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _110
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x7, x7	// tmp213, tmp213
	rbit	x6, x3	// tmp217, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x8, x3, #1	// _127, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w7	// tmp215, MEM[base: j_30, offset: 8B], tmp213
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 16]	// tmp215, *_107
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp217, tmp217
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x8	// bits, bits, _127
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w7, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _144, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x9, x3	// tmp221, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _144
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w7, w7, w6	// tmp219, MEM[base: j_30, offset: 8B], tmp217
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w7, [x4, 20]	// tmp219, *_124
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x9, x9	// tmp221, tmp221
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _161, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x3	// tmp225, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _161
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x8, x8	// tmp225, tmp225
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w9	// tmp223, MEM[base: j_30, offset: 8B], tmp221
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 24]	// tmp223, *_141
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _178, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp229, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _178
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x7, x7	// tmp229, tmp229
	rbit	x11, x3	// tmp233, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w8	// tmp227, MEM[base: j_30, offset: 8B], tmp225
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 28]	// tmp227, *_158
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _195, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x11, x11	// tmp233, tmp233
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w8, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _195
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _212, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x10, x3	// tmp237, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w8, w8, w7	// tmp231, MEM[base: j_30, offset: 8B], tmp229
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w8, [x4, 32]	// tmp231, *_175
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _212
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x10, x10	// tmp237, tmp237
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w7, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _229, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x9, x3	// tmp241, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _229
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w7, w7, w11	// tmp235, MEM[base: j_30, offset: 8B], tmp233
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w7, [x4, 36]	// tmp235, *_192
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x9, x9	// tmp241, tmp241
	rbit	x3, x3	// tmp246, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x3, x3	// tmp246, tmp246
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w10	// tmp239, MEM[base: j_30, offset: 8B], tmp237
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 40]	// tmp239, *_209
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
	add	w5, w5, w9	// tmp243, MEM[base: j_30, offset: 8B], tmp241
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 44]	// tmp243, *_226
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w5, w3	// tmp248, MEM[base: j_30, offset: 8B], tmp246
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x4, 48]	// tmp248, *_6
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	bne	.L120		//,
.L118:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2239:
	.size	_Z6unpackILj13EEvP6lead_sS1_Pj, .-_Z6unpackILj13EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj14EEvP6lead_sS1_Pj, %function
_Z6unpackILj14EEvP6lead_sS1_Pj:
.LFB2240:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L122		//,
	.p2align 3
.L124:
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	ldp	w5, w4, [x0, 8]	//, MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp205, bits
	clz	x6, x6	// tmp205, tmp205
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w6	// tmp207, MEM[base: j_30, offset: 8B], tmp205
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _40, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x2, x4, lsl 2]	// tmp207, *_43
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _40
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	x4, x2, x4, lsl 2	// tmp210, out, MEM[base: j_30, offset: 12B],
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp209, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x7, x7	// tmp209, tmp209
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _59, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w7	// tmp211, MEM[base: j_30, offset: 8B], tmp209
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 4]	// tmp211, *_57
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _59
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp213, bits
	clz	x6, x6	// tmp213, tmp213
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x7, x3, #1	// _76, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w6	// tmp215, MEM[base: j_30, offset: 8B], tmp213
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 8]	// tmp215, *_73
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x7	// bits, bits, _76
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x3	// tmp217, bits
	clz	x8, x8	// tmp217, tmp217
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _93, bits,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _93
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w8	// tmp219, MEM[base: j_30, offset: 8B], tmp217
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 12]	// tmp219, *_90
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _110, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp221, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _110
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x7, x7	// tmp221, tmp221
	rbit	x6, x3	// tmp225, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x8, x3, #1	// _127, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w7	// tmp223, MEM[base: j_30, offset: 8B], tmp221
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 16]	// tmp223, *_107
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp225, tmp225
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x8	// bits, bits, _127
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w7, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _144, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x9, x3	// tmp229, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _144
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w7, w7, w6	// tmp227, MEM[base: j_30, offset: 8B], tmp225
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w7, [x4, 20]	// tmp227, *_124
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x9, x9	// tmp229, tmp229
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _161, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x10, x3	// tmp233, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _161
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x10, x10	// tmp233, tmp233
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w9	// tmp231, MEM[base: j_30, offset: 8B], tmp229
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 24]	// tmp231, *_141
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _178, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x3	// tmp237, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _178
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _195, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp241, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w10	// tmp235, MEM[base: j_30, offset: 8B], tmp233
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _195
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 28]	// tmp235, *_158
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x9, x3, #1	// _212, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp245, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x9	// bits, bits, _212
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w9, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x8, x8	// tmp237, tmp237
	clz	x7, x7	// tmp241, tmp241
	clz	x6, x6	// tmp245, tmp245
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w9, w9, w8	// tmp239, MEM[base: j_30, offset: 8B], tmp237
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w9, [x4, 32]	// tmp239, *_175
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x3	// tmp249, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x10, x3, #1	// _229, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w8, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x5, x5	// tmp249, tmp249
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x10	// bits, bits, _229
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w8, w8, w7	// tmp243, MEM[base: j_30, offset: 8B], tmp241
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w8, [x4, 36]	// tmp243, *_192
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x10, x3	// tmp253, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x9, x3, #1	// _246, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w7, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x10, x10	// tmp253, tmp253
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x9	// bits, bits, _246
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w7, w7, w6	// tmp247, MEM[base: j_30, offset: 8B], tmp245
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w7, [x4, 40]	// tmp247, *_209
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x3, x3	// tmp258, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x3, x3	// tmp258, tmp258
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w5	// tmp251, MEM[base: j_30, offset: 8B], tmp249
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 44]	// tmp251, *_226
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
	add	w5, w5, w10	// tmp255, MEM[base: j_30, offset: 8B], tmp253
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 48]	// tmp255, *_243
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w5, w3	// tmp260, MEM[base: j_30, offset: 8B], tmp258
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x4, 52]	// tmp260, *_6
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	bne	.L124		//,
.L122:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2240:
	.size	_Z6unpackILj14EEvP6lead_sS1_Pj, .-_Z6unpackILj14EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj15EEvP6lead_sS1_Pj, %function
_Z6unpackILj15EEvP6lead_sS1_Pj:
.LFB2241:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L126		//,
	.p2align 3
.L128:
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	ldp	w5, w4, [x0, 8]	//, MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp213, bits
	clz	x6, x6	// tmp213, tmp213
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w6	// tmp215, MEM[base: j_30, offset: 8B], tmp213
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _40, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x2, x4, lsl 2]	// tmp215, *_43
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _40
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	x4, x2, x4, lsl 2	// tmp218, out, MEM[base: j_30, offset: 12B],
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp217, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x7, x7	// tmp217, tmp217
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _59, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w7	// tmp219, MEM[base: j_30, offset: 8B], tmp217
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 4]	// tmp219, *_57
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _59
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x3	// tmp221, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x5, x5	// tmp221, tmp221
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x7, x3, #1	// _76, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w5	// tmp223, MEM[base: j_30, offset: 8B], tmp221
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 8]	// tmp223, *_73
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x7	// bits, bits, _76
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp225, bits
	clz	x7, x7	// tmp225, tmp225
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _93, bits,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _93
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w7	// tmp227, MEM[base: j_30, offset: 8B], tmp225
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 12]	// tmp227, *_90
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _110, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x3	// tmp229, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _110
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x8, x8	// tmp229, tmp229
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _127, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp233, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w8	// tmp231, MEM[base: j_30, offset: 8B], tmp229
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 16]	// tmp231, *_107
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _127
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x7, x7	// tmp233, tmp233
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _144, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x11, x3	// tmp237, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _144
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w7	// tmp235, MEM[base: j_30, offset: 8B], tmp233
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 20]	// tmp235, *_124
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x11, x11	// tmp237, tmp237
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _161, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w7, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x10, x3	// tmp241, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _161
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x10, x10	// tmp241, tmp241
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w7, w7, w11	// tmp239, MEM[base: j_30, offset: 8B], tmp237
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w7, [x4, 24]	// tmp239, *_141
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _178, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x9, x3	// tmp245, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _178
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _195, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x3	// tmp249, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w10	// tmp243, MEM[base: j_30, offset: 8B], tmp241
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _195
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 28]	// tmp243, *_158
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _212, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp253, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _212
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x9, x9	// tmp245, tmp245
	clz	x8, x8	// tmp249, tmp249
	clz	x7, x7	// tmp253, tmp253
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w9	// tmp247, MEM[base: j_30, offset: 8B], tmp245
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 32]	// tmp247, *_175
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp257, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x10, x3, #1	// _229, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w9, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp257, tmp257
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x10	// bits, bits, _229
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w9, w9, w8	// tmp251, MEM[base: j_30, offset: 8B], tmp249
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w9, [x4, 36]	// tmp251, *_192
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x11, x3	// tmp261, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _246, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w8, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x11, x11	// tmp261, tmp261
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _246
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w8, w8, w7	// tmp255, MEM[base: j_30, offset: 8B], tmp253
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w8, [x4, 40]	// tmp255, *_209
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _263, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x10, x3	// tmp265, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w7, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _263
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x10, x10	// tmp265, tmp265
	rbit	x3, x3	// tmp270, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w7, w7, w6	// tmp259, MEM[base: j_30, offset: 8B], tmp257
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w7, [x4, 44]	// tmp259, *_226
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x3, x3	// tmp270, tmp270
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
	add	w6, w6, w11	// tmp263, MEM[base: j_30, offset: 8B], tmp261
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 48]	// tmp263, *_243
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
	add	w5, w5, w10	// tmp267, MEM[base: j_30, offset: 8B], tmp265
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 52]	// tmp267, *_260
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w5, w3	// tmp272, MEM[base: j_30, offset: 8B], tmp270
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x4, 56]	// tmp272, *_6
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	bne	.L128		//,
.L126:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2241:
	.size	_Z6unpackILj15EEvP6lead_sS1_Pj, .-_Z6unpackILj15EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj16EEvP6lead_sS1_Pj, %function
_Z6unpackILj16EEvP6lead_sS1_Pj:
.LFB2242:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L130		//,
	.p2align 3
.L132:
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	ldp	w5, w4, [x0, 8]	//, MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp221, bits
	clz	x6, x6	// tmp221, tmp221
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w6	// tmp223, MEM[base: j_30, offset: 8B], tmp221
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _40, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x2, x4, lsl 2]	// tmp223, *_43
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _40
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	x4, x2, x4, lsl 2	// tmp226, out, MEM[base: j_30, offset: 12B],
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp225, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x7, x7	// tmp225, tmp225
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _59, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w7	// tmp227, MEM[base: j_30, offset: 8B], tmp225
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 4]	// tmp227, *_57
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _59
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x3	// tmp229, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x5, x5	// tmp229, tmp229
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x7, x3, #1	// _76, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w5	// tmp231, MEM[base: j_30, offset: 8B], tmp229
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 8]	// tmp231, *_73
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x7	// bits, bits, _76
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp233, bits
	clz	x7, x7	// tmp233, tmp233
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _93, bits,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _93
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w7	// tmp235, MEM[base: j_30, offset: 8B], tmp233
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 12]	// tmp235, *_90
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _110, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x9, x3	// tmp237, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _110
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x9, x9	// tmp237, tmp237
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _127, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x3	// tmp241, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w9	// tmp239, MEM[base: j_30, offset: 8B], tmp237
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 16]	// tmp239, *_107
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _127
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x8, x8	// tmp241, tmp241
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _144, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp245, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _144
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w8	// tmp243, MEM[base: j_30, offset: 8B], tmp241
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 20]	// tmp243, *_124
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x7, x7	// tmp245, tmp245
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _161, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w8, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x10, x3	// tmp249, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _161
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x10, x10	// tmp249, tmp249
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w8, w8, w7	// tmp247, MEM[base: j_30, offset: 8B], tmp245
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w8, [x4, 24]	// tmp247, *_141
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _178, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x3	// tmp253, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w7, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _178
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _195, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x9, x3	// tmp257, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w7, w7, w10	// tmp251, MEM[base: j_30, offset: 8B], tmp249
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _195
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w7, [x4, 28]	// tmp251, *_158
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _212, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x3	// tmp261, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _212
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x5, x5	// tmp253, tmp253
	clz	x9, x9	// tmp257, tmp257
	clz	x8, x8	// tmp261, tmp261
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w5	// tmp255, MEM[base: j_30, offset: 8B], tmp253
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 32]	// tmp255, *_175
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp265, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x10, x3, #1	// _229, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x7, x7	// tmp265, tmp265
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x10	// bits, bits, _229
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w9	// tmp259, MEM[base: j_30, offset: 8B], tmp257
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 36]	// tmp259, *_192
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x12, x3	// tmp269, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _246, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w9, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x12, x12	// tmp269, tmp269
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _246
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w9, w9, w8	// tmp263, MEM[base: j_30, offset: 8B], tmp261
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w9, [x4, 40]	// tmp263, *_209
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _263, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x11, x3	// tmp273, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w8, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _263
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x11, x11	// tmp273, tmp273
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _280, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w8, w8, w7	// tmp267, MEM[base: j_30, offset: 8B], tmp265
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w8, [x4, 44]	// tmp267, *_226
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x10, x3	// tmp277, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _280
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w7, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x10, x10	// tmp277, tmp277
	rbit	x3, x3	// tmp282, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w7, w7, w12	// tmp271, MEM[base: j_30, offset: 8B], tmp269
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w7, [x4, 48]	// tmp271, *_243
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x3, x3	// tmp282, tmp282
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
	add	w6, w6, w11	// tmp275, MEM[base: j_30, offset: 8B], tmp273
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 52]	// tmp275, *_260
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
	add	w5, w5, w10	// tmp279, MEM[base: j_30, offset: 8B], tmp277
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 56]	// tmp279, *_277
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w5, w3	// tmp284, MEM[base: j_30, offset: 8B], tmp282
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x4, 60]	// tmp284, *_6
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	bne	.L132		//,
.L130:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2242:
	.size	_Z6unpackILj16EEvP6lead_sS1_Pj, .-_Z6unpackILj16EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj17EEvP6lead_sS1_Pj, %function
_Z6unpackILj17EEvP6lead_sS1_Pj:
.LFB2243:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L134		//,
	.p2align 3
.L136:
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	ldp	w5, w4, [x0, 8]	//, MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp229, bits
	clz	x6, x6	// tmp229, tmp229
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w6	// tmp231, MEM[base: j_30, offset: 8B], tmp229
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _40, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x2, x4, lsl 2]	// tmp231, *_43
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _40
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	x4, x2, x4, lsl 2	// tmp234, out, MEM[base: j_30, offset: 12B],
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp233, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x7, x7	// tmp233, tmp233
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _59, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w7	// tmp235, MEM[base: j_30, offset: 8B], tmp233
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 4]	// tmp235, *_57
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _59
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x3	// tmp237, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x5, x5	// tmp237, tmp237
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x7, x3, #1	// _76, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w5	// tmp239, MEM[base: j_30, offset: 8B], tmp237
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 8]	// tmp239, *_73
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x7	// bits, bits, _76
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp241, bits
	clz	x7, x7	// tmp241, tmp241
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _93, bits,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _93
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w7	// tmp243, MEM[base: j_30, offset: 8B], tmp241
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 12]	// tmp243, *_90
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _110, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x9, x3	// tmp245, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _110
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x9, x9	// tmp245, tmp245
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _127, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x3	// tmp249, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w9	// tmp247, MEM[base: j_30, offset: 8B], tmp245
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 16]	// tmp247, *_107
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _127
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x8, x8	// tmp249, tmp249
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _144, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp253, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _144
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w8	// tmp251, MEM[base: j_30, offset: 8B], tmp249
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 20]	// tmp251, *_124
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x7, x7	// tmp253, tmp253
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _161, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w8, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x10, x3	// tmp257, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _161
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x10, x10	// tmp257, tmp257
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w8, w8, w7	// tmp255, MEM[base: j_30, offset: 8B], tmp253
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w8, [x4, 24]	// tmp255, *_141
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _178, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x3	// tmp261, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w7, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _178
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _195, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x11, x3	// tmp265, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w7, w7, w10	// tmp259, MEM[base: j_30, offset: 8B], tmp257
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _195
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w7, [x4, 28]	// tmp259, *_158
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _212, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x9, x3	// tmp269, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _212
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x5, x5	// tmp261, tmp261
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x7, x3, #1	// _229, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x3	// tmp273, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w6, w6, w5	// tmp263, MEM[base: j_30, offset: 8B], tmp261
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 32]	// tmp263, *_175
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x7	// bits, bits, _229
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x11, x11	// tmp265, tmp265
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x6, x3, #1	// _246, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp277, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x6	// bits, bits, _246
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w5, w5, w11	// tmp267, MEM[base: j_30, offset: 8B], tmp265
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 36]	// tmp267, *_192
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x10, x3, #1	// _263, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp281, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x10	// bits, bits, _263
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w10, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x9, x9	// tmp269, tmp269
	clz	x8, x8	// tmp273, tmp273
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w10, w10, w9	// tmp271, MEM[base: j_30, offset: 8B], tmp269
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w10, [x4, 40]	// tmp271, *_209
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x7, x7	// tmp277, tmp277
	clz	x6, x6	// tmp281, tmp281
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w9, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x3	// tmp285, bits
	clz	x5, x5	// tmp285, tmp285
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x11, x3, #1	// _280, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w9, w9, w8	// tmp275, MEM[base: j_30, offset: 8B], tmp273
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w9, [x4, 44]	// tmp275, *_226
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x11	// bits, bits, _280
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w8, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x11, x3	// tmp289, bits
	clz	x11, x11	// tmp289, tmp289
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x10, x3, #1	// _297, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w8, w8, w7	// tmp279, MEM[base: j_30, offset: 8B], tmp277
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w8, [x4, 48]	// tmp279, *_243
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x10	// bits, bits, _297
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w7, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x3, x3	// tmp294, bits
	clz	x3, x3	// tmp294, tmp294
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w7, w7, w6	// tmp283, MEM[base: j_30, offset: 8B], tmp281
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w7, [x4, 52]	// tmp283, *_260
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w6, [x0, -8]	//, MEM[base: j_30, offset: 8B]
	add	w6, w6, w5	// tmp287, MEM[base: j_30, offset: 8B], tmp285
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w6, [x4, 56]	// tmp287, *_277
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
	add	w5, w5, w11	// tmp291, MEM[base: j_30, offset: 8B], tmp289
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w5, [x4, 60]	// tmp291, *_294
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w5, [x0, -8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w3, w5, w3	// tmp296, MEM[base: j_30, offset: 8B], tmp294
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w3, [x4, 64]	// tmp296, *_6
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	bne	.L136		//,
.L134:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2243:
	.size	_Z6unpackILj17EEvP6lead_sS1_Pj, .-_Z6unpackILj17EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj18EEvP6lead_sS1_Pj, %function
_Z6unpackILj18EEvP6lead_sS1_Pj:
.LFB2244:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L138		//,
	add	x10, x2, 72	// tmp112, out,
	.p2align 3
.L141:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.461, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.461
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L140		//,
	cmp	x4, 1	// tmp117,
	beq	.L165		//,
	cmp	x4, 2	// tmp117,
	beq	.L166		//,
	cmp	x4, 3	// tmp117,
	beq	.L167		//,
	cmp	x4, 4	// tmp117,
	beq	.L168		//,
	cmp	x4, 5	// tmp117,
	beq	.L169		//,
	cmp	x4, 6	// tmp117,
	beq	.L170		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.461, ivtmp.461,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L170:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L169:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L168:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L167:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L166:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L165:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.461
	beq	.L179		//,
.L140:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.461
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.461, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.461
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L140		//,
.L179:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L141		//,
.L138:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2244:
	.size	_Z6unpackILj18EEvP6lead_sS1_Pj, .-_Z6unpackILj18EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj19EEvP6lead_sS1_Pj, %function
_Z6unpackILj19EEvP6lead_sS1_Pj:
.LFB2245:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L180		//,
	add	x10, x2, 76	// tmp112, out,
	.p2align 3
.L183:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.473, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.473
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L182		//,
	cmp	x4, 1	// tmp117,
	beq	.L207		//,
	cmp	x4, 2	// tmp117,
	beq	.L208		//,
	cmp	x4, 3	// tmp117,
	beq	.L209		//,
	cmp	x4, 4	// tmp117,
	beq	.L210		//,
	cmp	x4, 5	// tmp117,
	beq	.L211		//,
	cmp	x4, 6	// tmp117,
	beq	.L212		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.473, ivtmp.473,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L212:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L211:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L210:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L209:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L208:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L207:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.473
	beq	.L221		//,
.L182:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.473
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.473, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.473
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L182		//,
.L221:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L183		//,
.L180:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2245:
	.size	_Z6unpackILj19EEvP6lead_sS1_Pj, .-_Z6unpackILj19EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj20EEvP6lead_sS1_Pj, %function
_Z6unpackILj20EEvP6lead_sS1_Pj:
.LFB2246:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L222		//,
	add	x10, x2, 80	// tmp112, out,
	.p2align 3
.L225:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.485, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.485
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L224		//,
	cmp	x4, 1	// tmp117,
	beq	.L249		//,
	cmp	x4, 2	// tmp117,
	beq	.L250		//,
	cmp	x4, 3	// tmp117,
	beq	.L251		//,
	cmp	x4, 4	// tmp117,
	beq	.L252		//,
	cmp	x4, 5	// tmp117,
	beq	.L253		//,
	cmp	x4, 6	// tmp117,
	beq	.L254		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.485, ivtmp.485,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L254:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L253:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L252:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L251:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L250:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L249:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.485
	beq	.L263		//,
.L224:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.485
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.485, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.485
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L224		//,
.L263:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L225		//,
.L222:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2246:
	.size	_Z6unpackILj20EEvP6lead_sS1_Pj, .-_Z6unpackILj20EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj21EEvP6lead_sS1_Pj, %function
_Z6unpackILj21EEvP6lead_sS1_Pj:
.LFB2247:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L264		//,
	add	x10, x2, 84	// tmp112, out,
	.p2align 3
.L267:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.497, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.497
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L266		//,
	cmp	x4, 1	// tmp117,
	beq	.L291		//,
	cmp	x4, 2	// tmp117,
	beq	.L292		//,
	cmp	x4, 3	// tmp117,
	beq	.L293		//,
	cmp	x4, 4	// tmp117,
	beq	.L294		//,
	cmp	x4, 5	// tmp117,
	beq	.L295		//,
	cmp	x4, 6	// tmp117,
	beq	.L296		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.497, ivtmp.497,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L296:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L295:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L294:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L293:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L292:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L291:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.497
	beq	.L305		//,
.L266:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.497
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.497, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.497
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L266		//,
.L305:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L267		//,
.L264:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2247:
	.size	_Z6unpackILj21EEvP6lead_sS1_Pj, .-_Z6unpackILj21EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj22EEvP6lead_sS1_Pj, %function
_Z6unpackILj22EEvP6lead_sS1_Pj:
.LFB2248:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L306		//,
	add	x10, x2, 88	// tmp112, out,
	.p2align 3
.L309:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.509, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.509
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L308		//,
	cmp	x4, 1	// tmp117,
	beq	.L333		//,
	cmp	x4, 2	// tmp117,
	beq	.L334		//,
	cmp	x4, 3	// tmp117,
	beq	.L335		//,
	cmp	x4, 4	// tmp117,
	beq	.L336		//,
	cmp	x4, 5	// tmp117,
	beq	.L337		//,
	cmp	x4, 6	// tmp117,
	beq	.L338		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.509, ivtmp.509,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L338:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L337:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L336:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L335:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L334:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L333:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.509
	beq	.L347		//,
.L308:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.509
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.509, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.509
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L308		//,
.L347:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L309		//,
.L306:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2248:
	.size	_Z6unpackILj22EEvP6lead_sS1_Pj, .-_Z6unpackILj22EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj23EEvP6lead_sS1_Pj, %function
_Z6unpackILj23EEvP6lead_sS1_Pj:
.LFB2249:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L348		//,
	add	x10, x2, 92	// tmp112, out,
	.p2align 3
.L351:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.521, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.521
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L350		//,
	cmp	x4, 1	// tmp117,
	beq	.L375		//,
	cmp	x4, 2	// tmp117,
	beq	.L376		//,
	cmp	x4, 3	// tmp117,
	beq	.L377		//,
	cmp	x4, 4	// tmp117,
	beq	.L378		//,
	cmp	x4, 5	// tmp117,
	beq	.L379		//,
	cmp	x4, 6	// tmp117,
	beq	.L380		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.521, ivtmp.521,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L380:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L379:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L378:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L377:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L376:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L375:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.521
	beq	.L389		//,
.L350:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.521
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.521, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.521
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L350		//,
.L389:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L351		//,
.L348:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2249:
	.size	_Z6unpackILj23EEvP6lead_sS1_Pj, .-_Z6unpackILj23EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj24EEvP6lead_sS1_Pj, %function
_Z6unpackILj24EEvP6lead_sS1_Pj:
.LFB2250:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L390		//,
	add	x10, x2, 96	// tmp112, out,
	.p2align 3
.L393:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.533, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.533
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L392		//,
	cmp	x4, 1	// tmp117,
	beq	.L417		//,
	cmp	x4, 2	// tmp117,
	beq	.L418		//,
	cmp	x4, 3	// tmp117,
	beq	.L419		//,
	cmp	x4, 4	// tmp117,
	beq	.L420		//,
	cmp	x4, 5	// tmp117,
	beq	.L421		//,
	cmp	x4, 6	// tmp117,
	beq	.L422		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.533, ivtmp.533,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L422:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L421:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L420:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L419:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L418:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L417:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.533
	beq	.L431		//,
.L392:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.533
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.533, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.533
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L392		//,
.L431:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L393		//,
.L390:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2250:
	.size	_Z6unpackILj24EEvP6lead_sS1_Pj, .-_Z6unpackILj24EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj25EEvP6lead_sS1_Pj, %function
_Z6unpackILj25EEvP6lead_sS1_Pj:
.LFB2251:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L432		//,
	add	x10, x2, 100	// tmp112, out,
	.p2align 3
.L435:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.545, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.545
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L434		//,
	cmp	x4, 1	// tmp117,
	beq	.L459		//,
	cmp	x4, 2	// tmp117,
	beq	.L460		//,
	cmp	x4, 3	// tmp117,
	beq	.L461		//,
	cmp	x4, 4	// tmp117,
	beq	.L462		//,
	cmp	x4, 5	// tmp117,
	beq	.L463		//,
	cmp	x4, 6	// tmp117,
	beq	.L464		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.545, ivtmp.545,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L464:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L463:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L462:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L461:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L460:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L459:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.545
	beq	.L473		//,
.L434:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.545
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.545, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.545
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L434		//,
.L473:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L435		//,
.L432:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2251:
	.size	_Z6unpackILj25EEvP6lead_sS1_Pj, .-_Z6unpackILj25EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj26EEvP6lead_sS1_Pj, %function
_Z6unpackILj26EEvP6lead_sS1_Pj:
.LFB2252:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L474		//,
	add	x10, x2, 104	// tmp112, out,
	.p2align 3
.L477:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.557, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.557
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L476		//,
	cmp	x4, 1	// tmp117,
	beq	.L501		//,
	cmp	x4, 2	// tmp117,
	beq	.L502		//,
	cmp	x4, 3	// tmp117,
	beq	.L503		//,
	cmp	x4, 4	// tmp117,
	beq	.L504		//,
	cmp	x4, 5	// tmp117,
	beq	.L505		//,
	cmp	x4, 6	// tmp117,
	beq	.L506		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.557, ivtmp.557,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L506:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L505:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L504:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L503:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L502:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L501:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.557
	beq	.L515		//,
.L476:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.557
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.557, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.557
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L476		//,
.L515:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L477		//,
.L474:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2252:
	.size	_Z6unpackILj26EEvP6lead_sS1_Pj, .-_Z6unpackILj26EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj27EEvP6lead_sS1_Pj, %function
_Z6unpackILj27EEvP6lead_sS1_Pj:
.LFB2253:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L516		//,
	add	x10, x2, 108	// tmp112, out,
	.p2align 3
.L519:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.569, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.569
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L518		//,
	cmp	x4, 1	// tmp117,
	beq	.L543		//,
	cmp	x4, 2	// tmp117,
	beq	.L544		//,
	cmp	x4, 3	// tmp117,
	beq	.L545		//,
	cmp	x4, 4	// tmp117,
	beq	.L546		//,
	cmp	x4, 5	// tmp117,
	beq	.L547		//,
	cmp	x4, 6	// tmp117,
	beq	.L548		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.569, ivtmp.569,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L548:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L547:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L546:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L545:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L544:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L543:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.569
	beq	.L557		//,
.L518:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.569
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.569, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.569
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L518		//,
.L557:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L519		//,
.L516:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2253:
	.size	_Z6unpackILj27EEvP6lead_sS1_Pj, .-_Z6unpackILj27EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj28EEvP6lead_sS1_Pj, %function
_Z6unpackILj28EEvP6lead_sS1_Pj:
.LFB2254:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L558		//,
	add	x10, x2, 112	// tmp112, out,
	.p2align 3
.L561:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.581, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.581
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L560		//,
	cmp	x4, 1	// tmp117,
	beq	.L585		//,
	cmp	x4, 2	// tmp117,
	beq	.L586		//,
	cmp	x4, 3	// tmp117,
	beq	.L587		//,
	cmp	x4, 4	// tmp117,
	beq	.L588		//,
	cmp	x4, 5	// tmp117,
	beq	.L589		//,
	cmp	x4, 6	// tmp117,
	beq	.L590		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.581, ivtmp.581,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L590:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L589:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L588:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L587:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L586:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L585:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.581
	beq	.L599		//,
	.p2align 3
.L560:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.581
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.581, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.581
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L560		//,
.L599:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L561		//,
.L558:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2254:
	.size	_Z6unpackILj28EEvP6lead_sS1_Pj, .-_Z6unpackILj28EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj29EEvP6lead_sS1_Pj, %function
_Z6unpackILj29EEvP6lead_sS1_Pj:
.LFB2255:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L600		//,
	add	x10, x2, 116	// tmp112, out,
	.p2align 3
.L603:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.593, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.593
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L602		//,
	cmp	x4, 1	// tmp117,
	beq	.L627		//,
	cmp	x4, 2	// tmp117,
	beq	.L628		//,
	cmp	x4, 3	// tmp117,
	beq	.L629		//,
	cmp	x4, 4	// tmp117,
	beq	.L630		//,
	cmp	x4, 5	// tmp117,
	beq	.L631		//,
	cmp	x4, 6	// tmp117,
	beq	.L632		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.593, ivtmp.593,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L632:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L631:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L630:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L629:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L628:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L627:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.593
	beq	.L641		//,
	.p2align 3
.L602:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.593
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.593, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.593
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L602		//,
.L641:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L603		//,
.L600:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2255:
	.size	_Z6unpackILj29EEvP6lead_sS1_Pj, .-_Z6unpackILj29EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj30EEvP6lead_sS1_Pj, %function
_Z6unpackILj30EEvP6lead_sS1_Pj:
.LFB2256:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L642		//,
	add	x10, x2, 120	// tmp112, out,
	.p2align 3
.L645:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.605, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.605
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L644		//,
	cmp	x4, 1	// tmp117,
	beq	.L669		//,
	cmp	x4, 2	// tmp117,
	beq	.L670		//,
	cmp	x4, 3	// tmp117,
	beq	.L671		//,
	cmp	x4, 4	// tmp117,
	beq	.L672		//,
	cmp	x4, 5	// tmp117,
	beq	.L673		//,
	cmp	x4, 6	// tmp117,
	beq	.L674		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.605, ivtmp.605,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L674:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L673:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L672:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L671:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L670:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L669:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.605
	beq	.L683		//,
	.p2align 3
.L644:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.605
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.605, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.605
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L644		//,
.L683:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L645		//,
.L642:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2256:
	.size	_Z6unpackILj30EEvP6lead_sS1_Pj, .-_Z6unpackILj30EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj31EEvP6lead_sS1_Pj, %function
_Z6unpackILj31EEvP6lead_sS1_Pj:
.LFB2257:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L684		//,
	add	x10, x2, 124	// tmp112, out,
	.p2align 3
.L687:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.617, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.617
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L686		//,
	cmp	x4, 1	// tmp117,
	beq	.L711		//,
	cmp	x4, 2	// tmp117,
	beq	.L712		//,
	cmp	x4, 3	// tmp117,
	beq	.L713		//,
	cmp	x4, 4	// tmp117,
	beq	.L714		//,
	cmp	x4, 5	// tmp117,
	beq	.L715		//,
	cmp	x4, 6	// tmp117,
	beq	.L716		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.617, ivtmp.617,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L716:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L715:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L714:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L713:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L712:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L711:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.617
	beq	.L725		//,
	.p2align 3
.L686:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.617
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.617, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.617
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L686		//,
.L725:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L687		//,
.L684:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2257:
	.size	_Z6unpackILj31EEvP6lead_sS1_Pj, .-_Z6unpackILj31EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj32EEvP6lead_sS1_Pj, %function
_Z6unpackILj32EEvP6lead_sS1_Pj:
.LFB2258:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L726		//,
	add	x10, x2, 128	// tmp112, out,
	.p2align 3
.L729:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.629, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.629
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L728		//,
	cmp	x4, 1	// tmp117,
	beq	.L753		//,
	cmp	x4, 2	// tmp117,
	beq	.L754		//,
	cmp	x4, 3	// tmp117,
	beq	.L755		//,
	cmp	x4, 4	// tmp117,
	beq	.L756		//,
	cmp	x4, 5	// tmp117,
	beq	.L757		//,
	cmp	x4, 6	// tmp117,
	beq	.L758		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.629, ivtmp.629,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L758:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L757:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L756:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L755:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L754:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L753:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.629
	beq	.L767		//,
	.p2align 3
.L728:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.629
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.629, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.629
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L728		//,
.L767:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L729		//,
.L726:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2258:
	.size	_Z6unpackILj32EEvP6lead_sS1_Pj, .-_Z6unpackILj32EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj33EEvP6lead_sS1_Pj, %function
_Z6unpackILj33EEvP6lead_sS1_Pj:
.LFB2259:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L768		//,
	add	x10, x2, 132	// tmp112, out,
	.p2align 3
.L771:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.641, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.641
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L770		//,
	cmp	x4, 1	// tmp117,
	beq	.L795		//,
	cmp	x4, 2	// tmp117,
	beq	.L796		//,
	cmp	x4, 3	// tmp117,
	beq	.L797		//,
	cmp	x4, 4	// tmp117,
	beq	.L798		//,
	cmp	x4, 5	// tmp117,
	beq	.L799		//,
	cmp	x4, 6	// tmp117,
	beq	.L800		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.641, ivtmp.641,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L800:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L799:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L798:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L797:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L796:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L795:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.641
	beq	.L809		//,
	.p2align 3
.L770:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.641
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.641, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.641
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L770		//,
.L809:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L771		//,
.L768:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2259:
	.size	_Z6unpackILj33EEvP6lead_sS1_Pj, .-_Z6unpackILj33EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj34EEvP6lead_sS1_Pj, %function
_Z6unpackILj34EEvP6lead_sS1_Pj:
.LFB2260:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L810		//,
	add	x10, x2, 136	// tmp112, out,
	.p2align 3
.L813:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.653, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.653
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L812		//,
	cmp	x4, 1	// tmp117,
	beq	.L837		//,
	cmp	x4, 2	// tmp117,
	beq	.L838		//,
	cmp	x4, 3	// tmp117,
	beq	.L839		//,
	cmp	x4, 4	// tmp117,
	beq	.L840		//,
	cmp	x4, 5	// tmp117,
	beq	.L841		//,
	cmp	x4, 6	// tmp117,
	beq	.L842		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.653, ivtmp.653,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L842:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L841:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L840:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L839:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L838:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L837:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.653
	beq	.L851		//,
	.p2align 3
.L812:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.653
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.653, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.653
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L812		//,
.L851:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L813		//,
.L810:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2260:
	.size	_Z6unpackILj34EEvP6lead_sS1_Pj, .-_Z6unpackILj34EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj35EEvP6lead_sS1_Pj, %function
_Z6unpackILj35EEvP6lead_sS1_Pj:
.LFB2261:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L852		//,
	add	x10, x2, 140	// tmp112, out,
	.p2align 3
.L855:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.665, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.665
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L854		//,
	cmp	x4, 1	// tmp117,
	beq	.L879		//,
	cmp	x4, 2	// tmp117,
	beq	.L880		//,
	cmp	x4, 3	// tmp117,
	beq	.L881		//,
	cmp	x4, 4	// tmp117,
	beq	.L882		//,
	cmp	x4, 5	// tmp117,
	beq	.L883		//,
	cmp	x4, 6	// tmp117,
	beq	.L884		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.665, ivtmp.665,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L884:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L883:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L882:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L881:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L880:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L879:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.665
	beq	.L893		//,
	.p2align 3
.L854:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.665
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.665, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.665
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L854		//,
.L893:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L855		//,
.L852:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2261:
	.size	_Z6unpackILj35EEvP6lead_sS1_Pj, .-_Z6unpackILj35EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj36EEvP6lead_sS1_Pj, %function
_Z6unpackILj36EEvP6lead_sS1_Pj:
.LFB2262:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L894		//,
	add	x10, x2, 144	// tmp112, out,
	.p2align 3
.L897:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.677, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.677
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L896		//,
	cmp	x4, 1	// tmp117,
	beq	.L921		//,
	cmp	x4, 2	// tmp117,
	beq	.L922		//,
	cmp	x4, 3	// tmp117,
	beq	.L923		//,
	cmp	x4, 4	// tmp117,
	beq	.L924		//,
	cmp	x4, 5	// tmp117,
	beq	.L925		//,
	cmp	x4, 6	// tmp117,
	beq	.L926		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.677, ivtmp.677,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L926:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L925:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L924:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L923:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L922:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L921:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.677
	beq	.L935		//,
	.p2align 3
.L896:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.677
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.677, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.677
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L896		//,
.L935:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L897		//,
.L894:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2262:
	.size	_Z6unpackILj36EEvP6lead_sS1_Pj, .-_Z6unpackILj36EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj37EEvP6lead_sS1_Pj, %function
_Z6unpackILj37EEvP6lead_sS1_Pj:
.LFB2263:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L936		//,
	add	x10, x2, 148	// tmp112, out,
	.p2align 3
.L939:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.689, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.689
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L938		//,
	cmp	x4, 1	// tmp117,
	beq	.L963		//,
	cmp	x4, 2	// tmp117,
	beq	.L964		//,
	cmp	x4, 3	// tmp117,
	beq	.L965		//,
	cmp	x4, 4	// tmp117,
	beq	.L966		//,
	cmp	x4, 5	// tmp117,
	beq	.L967		//,
	cmp	x4, 6	// tmp117,
	beq	.L968		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.689, ivtmp.689,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L968:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L967:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L966:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L965:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L964:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L963:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.689
	beq	.L977		//,
	.p2align 3
.L938:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.689
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.689, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.689
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L938		//,
.L977:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L939		//,
.L936:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2263:
	.size	_Z6unpackILj37EEvP6lead_sS1_Pj, .-_Z6unpackILj37EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj38EEvP6lead_sS1_Pj, %function
_Z6unpackILj38EEvP6lead_sS1_Pj:
.LFB2264:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L978		//,
	add	x10, x2, 152	// tmp112, out,
	.p2align 3
.L981:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.701, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.701
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L980		//,
	cmp	x4, 1	// tmp117,
	beq	.L1005		//,
	cmp	x4, 2	// tmp117,
	beq	.L1006		//,
	cmp	x4, 3	// tmp117,
	beq	.L1007		//,
	cmp	x4, 4	// tmp117,
	beq	.L1008		//,
	cmp	x4, 5	// tmp117,
	beq	.L1009		//,
	cmp	x4, 6	// tmp117,
	beq	.L1010		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.701, ivtmp.701,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L1010:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1009:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1008:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1007:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1006:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1005:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.701
	beq	.L1019		//,
	.p2align 3
.L980:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.701
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.701, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.701
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L980		//,
.L1019:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L981		//,
.L978:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2264:
	.size	_Z6unpackILj38EEvP6lead_sS1_Pj, .-_Z6unpackILj38EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj39EEvP6lead_sS1_Pj, %function
_Z6unpackILj39EEvP6lead_sS1_Pj:
.LFB2265:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L1020		//,
	add	x10, x2, 156	// tmp112, out,
	.p2align 3
.L1023:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.713, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.713
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L1022		//,
	cmp	x4, 1	// tmp117,
	beq	.L1047		//,
	cmp	x4, 2	// tmp117,
	beq	.L1048		//,
	cmp	x4, 3	// tmp117,
	beq	.L1049		//,
	cmp	x4, 4	// tmp117,
	beq	.L1050		//,
	cmp	x4, 5	// tmp117,
	beq	.L1051		//,
	cmp	x4, 6	// tmp117,
	beq	.L1052		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.713, ivtmp.713,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L1052:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1051:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1050:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1049:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1048:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1047:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.713
	beq	.L1061		//,
	.p2align 3
.L1022:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.713
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.713, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.713
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L1022		//,
.L1061:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L1023		//,
.L1020:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2265:
	.size	_Z6unpackILj39EEvP6lead_sS1_Pj, .-_Z6unpackILj39EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj40EEvP6lead_sS1_Pj, %function
_Z6unpackILj40EEvP6lead_sS1_Pj:
.LFB2266:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L1062		//,
	add	x10, x2, 160	// tmp112, out,
	.p2align 3
.L1065:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.725, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.725
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L1064		//,
	cmp	x4, 1	// tmp117,
	beq	.L1089		//,
	cmp	x4, 2	// tmp117,
	beq	.L1090		//,
	cmp	x4, 3	// tmp117,
	beq	.L1091		//,
	cmp	x4, 4	// tmp117,
	beq	.L1092		//,
	cmp	x4, 5	// tmp117,
	beq	.L1093		//,
	cmp	x4, 6	// tmp117,
	beq	.L1094		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.725, ivtmp.725,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L1094:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1093:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1092:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1091:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1090:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1089:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.725
	beq	.L1103		//,
	.p2align 3
.L1064:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.725
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.725, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.725
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L1064		//,
.L1103:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L1065		//,
.L1062:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2266:
	.size	_Z6unpackILj40EEvP6lead_sS1_Pj, .-_Z6unpackILj40EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj41EEvP6lead_sS1_Pj, %function
_Z6unpackILj41EEvP6lead_sS1_Pj:
.LFB2267:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L1104		//,
	add	x10, x2, 164	// tmp112, out,
	.p2align 3
.L1107:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.737, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.737
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L1106		//,
	cmp	x4, 1	// tmp117,
	beq	.L1131		//,
	cmp	x4, 2	// tmp117,
	beq	.L1132		//,
	cmp	x4, 3	// tmp117,
	beq	.L1133		//,
	cmp	x4, 4	// tmp117,
	beq	.L1134		//,
	cmp	x4, 5	// tmp117,
	beq	.L1135		//,
	cmp	x4, 6	// tmp117,
	beq	.L1136		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.737, ivtmp.737,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L1136:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1135:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1134:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1133:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1132:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1131:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.737
	beq	.L1145		//,
	.p2align 3
.L1106:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.737
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.737, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.737
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L1106		//,
.L1145:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L1107		//,
.L1104:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2267:
	.size	_Z6unpackILj41EEvP6lead_sS1_Pj, .-_Z6unpackILj41EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj42EEvP6lead_sS1_Pj, %function
_Z6unpackILj42EEvP6lead_sS1_Pj:
.LFB2268:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L1146		//,
	add	x10, x2, 168	// tmp112, out,
	.p2align 3
.L1149:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.749, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.749
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L1148		//,
	cmp	x4, 1	// tmp117,
	beq	.L1173		//,
	cmp	x4, 2	// tmp117,
	beq	.L1174		//,
	cmp	x4, 3	// tmp117,
	beq	.L1175		//,
	cmp	x4, 4	// tmp117,
	beq	.L1176		//,
	cmp	x4, 5	// tmp117,
	beq	.L1177		//,
	cmp	x4, 6	// tmp117,
	beq	.L1178		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.749, ivtmp.749,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L1178:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1177:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1176:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1175:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1174:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1173:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.749
	beq	.L1187		//,
	.p2align 3
.L1148:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.749
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.749, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.749
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L1148		//,
.L1187:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L1149		//,
.L1146:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2268:
	.size	_Z6unpackILj42EEvP6lead_sS1_Pj, .-_Z6unpackILj42EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj43EEvP6lead_sS1_Pj, %function
_Z6unpackILj43EEvP6lead_sS1_Pj:
.LFB2269:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L1188		//,
	add	x10, x2, 172	// tmp112, out,
	.p2align 3
.L1191:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.761, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.761
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L1190		//,
	cmp	x4, 1	// tmp117,
	beq	.L1215		//,
	cmp	x4, 2	// tmp117,
	beq	.L1216		//,
	cmp	x4, 3	// tmp117,
	beq	.L1217		//,
	cmp	x4, 4	// tmp117,
	beq	.L1218		//,
	cmp	x4, 5	// tmp117,
	beq	.L1219		//,
	cmp	x4, 6	// tmp117,
	beq	.L1220		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.761, ivtmp.761,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L1220:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1219:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1218:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1217:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1216:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1215:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.761
	beq	.L1229		//,
	.p2align 3
.L1190:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.761
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.761, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.761
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L1190		//,
.L1229:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L1191		//,
.L1188:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2269:
	.size	_Z6unpackILj43EEvP6lead_sS1_Pj, .-_Z6unpackILj43EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj44EEvP6lead_sS1_Pj, %function
_Z6unpackILj44EEvP6lead_sS1_Pj:
.LFB2270:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L1230		//,
	add	x10, x2, 176	// tmp112, out,
	.p2align 3
.L1233:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.773, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.773
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L1232		//,
	cmp	x4, 1	// tmp117,
	beq	.L1257		//,
	cmp	x4, 2	// tmp117,
	beq	.L1258		//,
	cmp	x4, 3	// tmp117,
	beq	.L1259		//,
	cmp	x4, 4	// tmp117,
	beq	.L1260		//,
	cmp	x4, 5	// tmp117,
	beq	.L1261		//,
	cmp	x4, 6	// tmp117,
	beq	.L1262		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.773, ivtmp.773,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L1262:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1261:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1260:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1259:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1258:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1257:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.773
	beq	.L1271		//,
	.p2align 3
.L1232:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.773
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.773, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.773
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L1232		//,
.L1271:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L1233		//,
.L1230:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2270:
	.size	_Z6unpackILj44EEvP6lead_sS1_Pj, .-_Z6unpackILj44EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj45EEvP6lead_sS1_Pj, %function
_Z6unpackILj45EEvP6lead_sS1_Pj:
.LFB2271:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L1272		//,
	add	x10, x2, 180	// tmp112, out,
	.p2align 3
.L1275:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.785, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.785
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L1274		//,
	cmp	x4, 1	// tmp117,
	beq	.L1299		//,
	cmp	x4, 2	// tmp117,
	beq	.L1300		//,
	cmp	x4, 3	// tmp117,
	beq	.L1301		//,
	cmp	x4, 4	// tmp117,
	beq	.L1302		//,
	cmp	x4, 5	// tmp117,
	beq	.L1303		//,
	cmp	x4, 6	// tmp117,
	beq	.L1304		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.785, ivtmp.785,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L1304:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1303:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1302:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1301:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1300:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1299:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.785
	beq	.L1313		//,
	.p2align 3
.L1274:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.785
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.785, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.785
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L1274		//,
.L1313:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L1275		//,
.L1272:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2271:
	.size	_Z6unpackILj45EEvP6lead_sS1_Pj, .-_Z6unpackILj45EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj46EEvP6lead_sS1_Pj, %function
_Z6unpackILj46EEvP6lead_sS1_Pj:
.LFB2272:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L1314		//,
	add	x10, x2, 184	// tmp112, out,
	.p2align 3
.L1317:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.797, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.797
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L1316		//,
	cmp	x4, 1	// tmp117,
	beq	.L1341		//,
	cmp	x4, 2	// tmp117,
	beq	.L1342		//,
	cmp	x4, 3	// tmp117,
	beq	.L1343		//,
	cmp	x4, 4	// tmp117,
	beq	.L1344		//,
	cmp	x4, 5	// tmp117,
	beq	.L1345		//,
	cmp	x4, 6	// tmp117,
	beq	.L1346		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.797, ivtmp.797,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L1346:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1345:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1344:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1343:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1342:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1341:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.797
	beq	.L1355		//,
	.p2align 3
.L1316:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.797
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.797, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.797
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L1316		//,
.L1355:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L1317		//,
.L1314:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2272:
	.size	_Z6unpackILj46EEvP6lead_sS1_Pj, .-_Z6unpackILj46EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj47EEvP6lead_sS1_Pj, %function
_Z6unpackILj47EEvP6lead_sS1_Pj:
.LFB2273:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L1356		//,
	add	x10, x2, 188	// tmp112, out,
	.p2align 3
.L1359:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.809, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.809
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L1358		//,
	cmp	x4, 1	// tmp117,
	beq	.L1383		//,
	cmp	x4, 2	// tmp117,
	beq	.L1384		//,
	cmp	x4, 3	// tmp117,
	beq	.L1385		//,
	cmp	x4, 4	// tmp117,
	beq	.L1386		//,
	cmp	x4, 5	// tmp117,
	beq	.L1387		//,
	cmp	x4, 6	// tmp117,
	beq	.L1388		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.809, ivtmp.809,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L1388:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1387:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1386:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1385:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1384:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1383:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.809
	beq	.L1397		//,
	.p2align 3
.L1358:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.809
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.809, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.809
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L1358		//,
.L1397:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L1359		//,
.L1356:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2273:
	.size	_Z6unpackILj47EEvP6lead_sS1_Pj, .-_Z6unpackILj47EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj48EEvP6lead_sS1_Pj, %function
_Z6unpackILj48EEvP6lead_sS1_Pj:
.LFB2274:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L1398		//,
	add	x10, x2, 192	// tmp112, out,
	.p2align 3
.L1401:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.821, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.821
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L1400		//,
	cmp	x4, 1	// tmp117,
	beq	.L1425		//,
	cmp	x4, 2	// tmp117,
	beq	.L1426		//,
	cmp	x4, 3	// tmp117,
	beq	.L1427		//,
	cmp	x4, 4	// tmp117,
	beq	.L1428		//,
	cmp	x4, 5	// tmp117,
	beq	.L1429		//,
	cmp	x4, 6	// tmp117,
	beq	.L1430		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.821, ivtmp.821,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L1430:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1429:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1428:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1427:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1426:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1425:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.821
	beq	.L1439		//,
	.p2align 3
.L1400:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.821
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.821, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.821
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L1400		//,
.L1439:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L1401		//,
.L1398:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2274:
	.size	_Z6unpackILj48EEvP6lead_sS1_Pj, .-_Z6unpackILj48EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj49EEvP6lead_sS1_Pj, %function
_Z6unpackILj49EEvP6lead_sS1_Pj:
.LFB2275:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L1440		//,
	add	x10, x2, 196	// tmp112, out,
	.p2align 3
.L1443:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.833, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.833
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L1442		//,
	cmp	x4, 1	// tmp117,
	beq	.L1467		//,
	cmp	x4, 2	// tmp117,
	beq	.L1468		//,
	cmp	x4, 3	// tmp117,
	beq	.L1469		//,
	cmp	x4, 4	// tmp117,
	beq	.L1470		//,
	cmp	x4, 5	// tmp117,
	beq	.L1471		//,
	cmp	x4, 6	// tmp117,
	beq	.L1472		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.833, ivtmp.833,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L1472:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1471:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1470:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1469:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1468:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1467:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.833
	beq	.L1481		//,
	.p2align 3
.L1442:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.833
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.833, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.833
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L1442		//,
.L1481:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L1443		//,
.L1440:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2275:
	.size	_Z6unpackILj49EEvP6lead_sS1_Pj, .-_Z6unpackILj49EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj50EEvP6lead_sS1_Pj, %function
_Z6unpackILj50EEvP6lead_sS1_Pj:
.LFB2276:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L1482		//,
	add	x10, x2, 200	// tmp112, out,
	.p2align 3
.L1485:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.845, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.845
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L1484		//,
	cmp	x4, 1	// tmp117,
	beq	.L1509		//,
	cmp	x4, 2	// tmp117,
	beq	.L1510		//,
	cmp	x4, 3	// tmp117,
	beq	.L1511		//,
	cmp	x4, 4	// tmp117,
	beq	.L1512		//,
	cmp	x4, 5	// tmp117,
	beq	.L1513		//,
	cmp	x4, 6	// tmp117,
	beq	.L1514		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.845, ivtmp.845,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L1514:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1513:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1512:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1511:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1510:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1509:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.845
	beq	.L1523		//,
	.p2align 3
.L1484:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.845
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.845, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.845
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L1484		//,
.L1523:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L1485		//,
.L1482:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2276:
	.size	_Z6unpackILj50EEvP6lead_sS1_Pj, .-_Z6unpackILj50EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj51EEvP6lead_sS1_Pj, %function
_Z6unpackILj51EEvP6lead_sS1_Pj:
.LFB2277:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L1524		//,
	add	x10, x2, 204	// tmp112, out,
	.p2align 3
.L1527:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.857, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.857
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L1526		//,
	cmp	x4, 1	// tmp117,
	beq	.L1551		//,
	cmp	x4, 2	// tmp117,
	beq	.L1552		//,
	cmp	x4, 3	// tmp117,
	beq	.L1553		//,
	cmp	x4, 4	// tmp117,
	beq	.L1554		//,
	cmp	x4, 5	// tmp117,
	beq	.L1555		//,
	cmp	x4, 6	// tmp117,
	beq	.L1556		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.857, ivtmp.857,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L1556:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1555:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1554:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1553:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1552:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1551:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.857
	beq	.L1565		//,
	.p2align 3
.L1526:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.857
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.857, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.857
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L1526		//,
.L1565:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L1527		//,
.L1524:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2277:
	.size	_Z6unpackILj51EEvP6lead_sS1_Pj, .-_Z6unpackILj51EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj52EEvP6lead_sS1_Pj, %function
_Z6unpackILj52EEvP6lead_sS1_Pj:
.LFB2278:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L1566		//,
	add	x10, x2, 208	// tmp112, out,
	.p2align 3
.L1569:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.869, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.869
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L1568		//,
	cmp	x4, 1	// tmp117,
	beq	.L1593		//,
	cmp	x4, 2	// tmp117,
	beq	.L1594		//,
	cmp	x4, 3	// tmp117,
	beq	.L1595		//,
	cmp	x4, 4	// tmp117,
	beq	.L1596		//,
	cmp	x4, 5	// tmp117,
	beq	.L1597		//,
	cmp	x4, 6	// tmp117,
	beq	.L1598		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.869, ivtmp.869,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L1598:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1597:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1596:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1595:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1594:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1593:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.869
	beq	.L1607		//,
	.p2align 3
.L1568:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.869
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.869, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.869
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L1568		//,
.L1607:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L1569		//,
.L1566:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2278:
	.size	_Z6unpackILj52EEvP6lead_sS1_Pj, .-_Z6unpackILj52EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj53EEvP6lead_sS1_Pj, %function
_Z6unpackILj53EEvP6lead_sS1_Pj:
.LFB2279:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L1608		//,
	add	x10, x2, 212	// tmp112, out,
	.p2align 3
.L1611:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.881, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.881
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L1610		//,
	cmp	x4, 1	// tmp117,
	beq	.L1635		//,
	cmp	x4, 2	// tmp117,
	beq	.L1636		//,
	cmp	x4, 3	// tmp117,
	beq	.L1637		//,
	cmp	x4, 4	// tmp117,
	beq	.L1638		//,
	cmp	x4, 5	// tmp117,
	beq	.L1639		//,
	cmp	x4, 6	// tmp117,
	beq	.L1640		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.881, ivtmp.881,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L1640:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1639:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1638:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1637:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1636:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1635:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.881
	beq	.L1649		//,
	.p2align 3
.L1610:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.881
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.881, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.881
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L1610		//,
.L1649:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L1611		//,
.L1608:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2279:
	.size	_Z6unpackILj53EEvP6lead_sS1_Pj, .-_Z6unpackILj53EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj54EEvP6lead_sS1_Pj, %function
_Z6unpackILj54EEvP6lead_sS1_Pj:
.LFB2280:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L1650		//,
	add	x10, x2, 216	// tmp112, out,
	.p2align 3
.L1653:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.893, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.893
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L1652		//,
	cmp	x4, 1	// tmp117,
	beq	.L1677		//,
	cmp	x4, 2	// tmp117,
	beq	.L1678		//,
	cmp	x4, 3	// tmp117,
	beq	.L1679		//,
	cmp	x4, 4	// tmp117,
	beq	.L1680		//,
	cmp	x4, 5	// tmp117,
	beq	.L1681		//,
	cmp	x4, 6	// tmp117,
	beq	.L1682		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.893, ivtmp.893,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L1682:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1681:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1680:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1679:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1678:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1677:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.893
	beq	.L1691		//,
	.p2align 3
.L1652:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.893
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.893, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.893
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L1652		//,
.L1691:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L1653		//,
.L1650:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2280:
	.size	_Z6unpackILj54EEvP6lead_sS1_Pj, .-_Z6unpackILj54EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj55EEvP6lead_sS1_Pj, %function
_Z6unpackILj55EEvP6lead_sS1_Pj:
.LFB2281:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L1692		//,
	add	x10, x2, 220	// tmp112, out,
	.p2align 3
.L1695:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.905, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.905
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L1694		//,
	cmp	x4, 1	// tmp117,
	beq	.L1719		//,
	cmp	x4, 2	// tmp117,
	beq	.L1720		//,
	cmp	x4, 3	// tmp117,
	beq	.L1721		//,
	cmp	x4, 4	// tmp117,
	beq	.L1722		//,
	cmp	x4, 5	// tmp117,
	beq	.L1723		//,
	cmp	x4, 6	// tmp117,
	beq	.L1724		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.905, ivtmp.905,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L1724:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1723:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1722:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1721:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1720:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1719:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.905
	beq	.L1733		//,
	.p2align 3
.L1694:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.905
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.905, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.905
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L1694		//,
.L1733:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L1695		//,
.L1692:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2281:
	.size	_Z6unpackILj55EEvP6lead_sS1_Pj, .-_Z6unpackILj55EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj56EEvP6lead_sS1_Pj, %function
_Z6unpackILj56EEvP6lead_sS1_Pj:
.LFB2282:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L1734		//,
	add	x10, x2, 224	// tmp112, out,
	.p2align 3
.L1737:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.917, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.917
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L1736		//,
	cmp	x4, 1	// tmp117,
	beq	.L1761		//,
	cmp	x4, 2	// tmp117,
	beq	.L1762		//,
	cmp	x4, 3	// tmp117,
	beq	.L1763		//,
	cmp	x4, 4	// tmp117,
	beq	.L1764		//,
	cmp	x4, 5	// tmp117,
	beq	.L1765		//,
	cmp	x4, 6	// tmp117,
	beq	.L1766		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.917, ivtmp.917,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L1766:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1765:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1764:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1763:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1762:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1761:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.917
	beq	.L1775		//,
	.p2align 3
.L1736:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.917
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.917, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.917
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L1736		//,
.L1775:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L1737		//,
.L1734:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2282:
	.size	_Z6unpackILj56EEvP6lead_sS1_Pj, .-_Z6unpackILj56EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj57EEvP6lead_sS1_Pj, %function
_Z6unpackILj57EEvP6lead_sS1_Pj:
.LFB2283:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L1776		//,
	add	x10, x2, 228	// tmp112, out,
	.p2align 3
.L1779:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.929, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.929
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L1778		//,
	cmp	x4, 1	// tmp117,
	beq	.L1803		//,
	cmp	x4, 2	// tmp117,
	beq	.L1804		//,
	cmp	x4, 3	// tmp117,
	beq	.L1805		//,
	cmp	x4, 4	// tmp117,
	beq	.L1806		//,
	cmp	x4, 5	// tmp117,
	beq	.L1807		//,
	cmp	x4, 6	// tmp117,
	beq	.L1808		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.929, ivtmp.929,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L1808:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1807:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1806:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1805:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1804:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1803:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.929
	beq	.L1817		//,
	.p2align 3
.L1778:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.929
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.929, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.929
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L1778		//,
.L1817:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L1779		//,
.L1776:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2283:
	.size	_Z6unpackILj57EEvP6lead_sS1_Pj, .-_Z6unpackILj57EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj58EEvP6lead_sS1_Pj, %function
_Z6unpackILj58EEvP6lead_sS1_Pj:
.LFB2284:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L1818		//,
	add	x10, x2, 232	// tmp112, out,
	.p2align 3
.L1821:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.941, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.941
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L1820		//,
	cmp	x4, 1	// tmp117,
	beq	.L1845		//,
	cmp	x4, 2	// tmp117,
	beq	.L1846		//,
	cmp	x4, 3	// tmp117,
	beq	.L1847		//,
	cmp	x4, 4	// tmp117,
	beq	.L1848		//,
	cmp	x4, 5	// tmp117,
	beq	.L1849		//,
	cmp	x4, 6	// tmp117,
	beq	.L1850		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.941, ivtmp.941,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L1850:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1849:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1848:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1847:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1846:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1845:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.941
	beq	.L1859		//,
	.p2align 3
.L1820:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.941
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.941, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.941
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L1820		//,
.L1859:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L1821		//,
.L1818:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2284:
	.size	_Z6unpackILj58EEvP6lead_sS1_Pj, .-_Z6unpackILj58EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj59EEvP6lead_sS1_Pj, %function
_Z6unpackILj59EEvP6lead_sS1_Pj:
.LFB2285:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L1860		//,
	add	x10, x2, 236	// tmp112, out,
	.p2align 3
.L1863:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.953, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.953
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L1862		//,
	cmp	x4, 1	// tmp117,
	beq	.L1887		//,
	cmp	x4, 2	// tmp117,
	beq	.L1888		//,
	cmp	x4, 3	// tmp117,
	beq	.L1889		//,
	cmp	x4, 4	// tmp117,
	beq	.L1890		//,
	cmp	x4, 5	// tmp117,
	beq	.L1891		//,
	cmp	x4, 6	// tmp117,
	beq	.L1892		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.953, ivtmp.953,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L1892:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1891:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1890:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1889:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1888:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1887:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.953
	beq	.L1901		//,
	.p2align 3
.L1862:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.953
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.953, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.953
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L1862		//,
.L1901:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L1863		//,
.L1860:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2285:
	.size	_Z6unpackILj59EEvP6lead_sS1_Pj, .-_Z6unpackILj59EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj60EEvP6lead_sS1_Pj, %function
_Z6unpackILj60EEvP6lead_sS1_Pj:
.LFB2286:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L1902		//,
	add	x10, x2, 240	// tmp112, out,
	.p2align 3
.L1905:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.965, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.965
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L1904		//,
	cmp	x4, 1	// tmp117,
	beq	.L1929		//,
	cmp	x4, 2	// tmp117,
	beq	.L1930		//,
	cmp	x4, 3	// tmp117,
	beq	.L1931		//,
	cmp	x4, 4	// tmp117,
	beq	.L1932		//,
	cmp	x4, 5	// tmp117,
	beq	.L1933		//,
	cmp	x4, 6	// tmp117,
	beq	.L1934		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.965, ivtmp.965,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L1934:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1933:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1932:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1931:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1930:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1929:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.965
	beq	.L1943		//,
	.p2align 3
.L1904:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.965
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.965, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.965
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L1904		//,
.L1943:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L1905		//,
.L1902:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2286:
	.size	_Z6unpackILj60EEvP6lead_sS1_Pj, .-_Z6unpackILj60EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj61EEvP6lead_sS1_Pj, %function
_Z6unpackILj61EEvP6lead_sS1_Pj:
.LFB2287:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L1944		//,
	add	x10, x2, 244	// tmp112, out,
	.p2align 3
.L1947:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.977, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.977
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L1946		//,
	cmp	x4, 1	// tmp117,
	beq	.L1971		//,
	cmp	x4, 2	// tmp117,
	beq	.L1972		//,
	cmp	x4, 3	// tmp117,
	beq	.L1973		//,
	cmp	x4, 4	// tmp117,
	beq	.L1974		//,
	cmp	x4, 5	// tmp117,
	beq	.L1975		//,
	cmp	x4, 6	// tmp117,
	beq	.L1976		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.977, ivtmp.977,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L1976:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1975:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1974:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1973:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1972:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L1971:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.977
	beq	.L1985		//,
	.p2align 3
.L1946:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.977
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.977, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.977
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L1946		//,
.L1985:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L1947		//,
.L1944:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2287:
	.size	_Z6unpackILj61EEvP6lead_sS1_Pj, .-_Z6unpackILj61EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj62EEvP6lead_sS1_Pj, %function
_Z6unpackILj62EEvP6lead_sS1_Pj:
.LFB2288:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L1986		//,
	add	x10, x2, 248	// tmp112, out,
	.p2align 3
.L1989:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.989, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.989
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L1988		//,
	cmp	x4, 1	// tmp117,
	beq	.L2013		//,
	cmp	x4, 2	// tmp117,
	beq	.L2014		//,
	cmp	x4, 3	// tmp117,
	beq	.L2015		//,
	cmp	x4, 4	// tmp117,
	beq	.L2016		//,
	cmp	x4, 5	// tmp117,
	beq	.L2017		//,
	cmp	x4, 6	// tmp117,
	beq	.L2018		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.989, ivtmp.989,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L2018:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L2017:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L2016:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L2015:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L2014:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L2013:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.989
	beq	.L2027		//,
	.p2align 3
.L1988:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.989
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.989, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.989
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L1988		//,
.L2027:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L1989		//,
.L1986:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2288:
	.size	_Z6unpackILj62EEvP6lead_sS1_Pj, .-_Z6unpackILj62EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj63EEvP6lead_sS1_Pj, %function
_Z6unpackILj63EEvP6lead_sS1_Pj:
.LFB2289:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L2028		//,
	add	x10, x2, 252	// tmp112, out,
	.p2align 3
.L2031:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.1001, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.1001
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L2030		//,
	cmp	x4, 1	// tmp117,
	beq	.L2055		//,
	cmp	x4, 2	// tmp117,
	beq	.L2056		//,
	cmp	x4, 3	// tmp117,
	beq	.L2057		//,
	cmp	x4, 4	// tmp117,
	beq	.L2058		//,
	cmp	x4, 5	// tmp117,
	beq	.L2059		//,
	cmp	x4, 6	// tmp117,
	beq	.L2060		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.1001, ivtmp.1001,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L2060:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L2059:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L2058:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L2057:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L2056:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L2055:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.1001
	beq	.L2069		//,
	.p2align 3
.L2030:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.1001
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.1001, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.1001
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L2030		//,
.L2069:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L2031		//,
.L2028:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2289:
	.size	_Z6unpackILj63EEvP6lead_sS1_Pj, .-_Z6unpackILj63EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z6unpackILj64EEvP6lead_sS1_Pj, %function
_Z6unpackILj64EEvP6lead_sS1_Pj:
.LFB2290:
	.cfi_startproc
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x0, x1	// begin, end
	beq	.L2070		//,
	add	x10, x2, 256	// tmp112, out,
	.p2align 3
.L2073:
	ldr	w7, [x0, 12]	// MEM[base: j_30, offset: 12B], MEM[base: j_30, offset: 12B]
// bitmapdecoding.cpp:360:     uint64_t bits = j->word;
	ldr	x3, [x0]	// bits, MEM[base: j_30, offset: 0B]
	lsl	x9, x7, 2	// _49, MEM[base: j_30, offset: 12B],
	add	x8, x2, x9	// ivtmp.1013, out, _49
	add	x9, x10, x9	// _42, tmp112, _49
	sub	x4, x9, x8	// tmp114, _42, ivtmp.1013
	sub	x4, x4, #4	// tmp115, tmp114,
	lsr	x4, x4, 2	// tmp113, tmp115,
	add	x4, x4, 1	// tmp116, tmp113,
	ands	x4, x4, 7	// tmp117, tmp116,
	beq	.L2072		//,
	cmp	x4, 1	// tmp117,
	beq	.L2097		//,
	cmp	x4, 2	// tmp117,
	beq	.L2098		//,
	cmp	x4, 3	// tmp117,
	beq	.L2099		//,
	cmp	x4, 4	// tmp117,
	beq	.L2100		//,
	cmp	x4, 5	// tmp117,
	beq	.L2101		//,
	cmp	x4, 6	// tmp117,
	beq	.L2102		//,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
	add	x8, x8, 4	// ivtmp.1013, ivtmp.1013,
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x2, x7, lsl 2]	// tmp110, MEM[base: _47, offset: 0B]
.L2102:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L2101:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L2100:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L2099:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L2098:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
.L2097:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.1013
	beq	.L2111		//,
	.p2align 3
.L2072:
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	mov	x7, x8	// tmp118, ivtmp.1013
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7], 4	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x8, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
	add	x8, x7, 28	// ivtmp.1013, tmp118,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 4]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	cmp	x9, x8	// _42, ivtmp.1013
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 8]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 12]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 16]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 20]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x3	// tmp109, bits
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _8, bits,
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	ldr	w4, [x0, 8]	//, MEM[base: j_30, offset: 8B]
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp109, tmp109
// bitmapdecoding.cpp:364:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _8
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	add	w4, w4, w6	// tmp110, MEM[base: j_30, offset: 8B], tmp109
// bitmapdecoding.cpp:363:       o[i] = j->idx + trailingzeroes(bits);
	str	w4, [x7, 24]	// tmp110, MEM[base: _47, offset: 0B]
// bitmapdecoding.cpp:362:     for (uint32_t i = 0; i < width; i++) {
	bne	.L2072		//,
.L2111:
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	add	x0, x0, 16	// begin, begin,
// bitmapdecoding.cpp:359:   for (lead_t *j = begin; j != end; j++) {
	cmp	x1, x0	// end, begin
	bne	.L2073		//,
.L2070:
// bitmapdecoding.cpp:367: }
	ret	
	.cfi_endproc
.LFE2290:
	.size	_Z6unpackILj64EEvP6lead_sS1_Pj, .-_Z6unpackILj64EEvP6lead_sS1_Pj
	.align	2
	.p2align 3,,7
	.type	_Z14faster_decoderPjRjjm.part.15, %function
_Z14faster_decoderPjRjjm.part.15:
.LFB3038:
	.cfi_startproc
// bitmapdecoding.cpp:123:     uint32_t next_base = base + cnt;
	ldr	w6, [x1]	//, *base_4(D)
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp254, bits
	clz	x7, x7	// tmp254, tmp254
// bitmapdecoding.cpp:125:     bits = bits & (bits - 1);
	sub	x4, x3, #1	// _15, bits,
// bitmapdecoding.cpp:124:     base_ptr[base + 0] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w7, w2, w7	// tmp257, idx, tmp254
// bitmapdecoding.cpp:125:     bits = bits & (bits - 1);
	and	x4, x3, x4	// bits, bits, _15
// bitmapdecoding.cpp:127:     bits = bits & (bits - 1);
	sub	x5, x4, #1	// _25, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x4	// tmp258, bits
// bitmapdecoding.cpp:124:     base_ptr[base + 0] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w7, [x0, w6, uxtw 2]	// tmp257, *_12
// bitmapdecoding.cpp:127:     bits = bits & (bits - 1);
	and	x4, x4, x5	// bits, bits, _25
// bitmapdecoding.cpp:129:     bits = bits & (bits - 1);
	sub	x9, x4, #1	// _35, bits,
// bitmapdecoding.cpp:44:   return __builtin_popcountll(input_num);
	fmov	d0, x3	// tmp354, bits
// bitmapdecoding.cpp:126:     base_ptr[base + 1] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	ldr	w7, [x1]	//, *base_4(D)
// bitmapdecoding.cpp:129:     bits = bits & (bits - 1);
	and	x3, x4, x9	// bits, bits, _35
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x4	// tmp264, bits
	clz	x8, x8	// tmp258, tmp258
// bitmapdecoding.cpp:126:     base_ptr[base + 1] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w7, w7, 1	// tmp261, *base_4(D),
// bitmapdecoding.cpp:131:     bits = bits & (bits - 1);
	sub	x4, x3, #1	// _45, bits,
// bitmapdecoding.cpp:126:     base_ptr[base + 1] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w8, w2, w8	// tmp263, idx, tmp258
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x11, x3	// tmp270, bits
// bitmapdecoding.cpp:131:     bits = bits & (bits - 1);
	and	x3, x3, x4	// bits, bits, _45
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x5, x5	// tmp264, tmp264
// bitmapdecoding.cpp:126:     base_ptr[base + 1] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w8, [x0, x7, lsl 2]	// tmp263, *_23
// bitmapdecoding.cpp:133:     bits = bits & (bits - 1);
	sub	x4, x3, #1	// _55, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x10, x3	// tmp276, bits
// bitmapdecoding.cpp:133:     bits = bits & (bits - 1);
	and	x3, x3, x4	// bits, bits, _55
// bitmapdecoding.cpp:128:     base_ptr[base + 2] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	ldr	w4, [x1]	//, *base_4(D)
// bitmapdecoding.cpp:128:     base_ptr[base + 2] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w5, w2, w5	// tmp269, idx, tmp264
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x11, x11	// tmp270, tmp270
	clz	x10, x10	// tmp276, tmp276
// bitmapdecoding.cpp:128:     base_ptr[base + 2] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w4, w4, 2	// tmp267, *base_4(D),
// bitmapdecoding.cpp:130:     base_ptr[base + 3] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w11, w2, w11	// tmp275, idx, tmp270
// bitmapdecoding.cpp:132:     base_ptr[base + 4] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w10, w2, w10	// tmp281, idx, tmp276
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x9, x3	// tmp282, bits
	clz	x9, x9	// tmp282, tmp282
// bitmapdecoding.cpp:44:   return __builtin_popcountll(input_num);
	cnt	v0.8b, v0.8b	// tmp251, tmp354
// bitmapdecoding.cpp:128:     base_ptr[base + 2] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w5, [x0, x4, lsl 2]	// tmp269, *_33
// bitmapdecoding.cpp:134:     base_ptr[base + 5] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w9, w2, w9	// tmp287, idx, tmp282
// bitmapdecoding.cpp:135:     bits = bits & (bits - 1);
	sub	x7, x3, #1	// _65, bits,
// bitmapdecoding.cpp:130:     base_ptr[base + 3] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	ldr	w5, [x1]	//, *base_4(D)
// bitmapdecoding.cpp:135:     bits = bits & (bits - 1);
	and	x3, x3, x7	// bits, bits, _65
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x3	// tmp288, bits
// bitmapdecoding.cpp:44:   return __builtin_popcountll(input_num);
	addv	b0, v0.8b	// tmp253, tmp251
// bitmapdecoding.cpp:130:     base_ptr[base + 3] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w5, w5, 3	// tmp273, *base_4(D),
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x8, x8	// tmp288, tmp288
// bitmapdecoding.cpp:136:     base_ptr[base + 6] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w8, w2, w8	// tmp293, idx, tmp288
// bitmapdecoding.cpp:137:     bits = bits & (bits - 1);
	sub	x7, x3, #1	// _75, bits,
// bitmapdecoding.cpp:137:     bits = bits & (bits - 1);
	and	x3, x3, x7	// bits, bits, _75
// bitmapdecoding.cpp:130:     base_ptr[base + 3] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w11, [x0, x5, lsl 2]	// tmp275, *_43
// bitmapdecoding.cpp:44:   return __builtin_popcountll(input_num);
	umov	w4, v0.b[0]	// tmp252, tmp253,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp294, bits
// bitmapdecoding.cpp:132:     base_ptr[base + 4] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	ldr	w5, [x1]	//, *base_4(D)
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x7, x7	// tmp294, tmp294
// bitmapdecoding.cpp:138:     base_ptr[base + 7] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w7, w2, w7	// tmp299, idx, tmp294
// bitmapdecoding.cpp:132:     base_ptr[base + 4] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w5, w5, 4	// tmp279, *base_4(D),
// bitmapdecoding.cpp:44:   return __builtin_popcountll(input_num);
	and	x4, x4, 255	// tmp249, tmp252
// bitmapdecoding.cpp:123:     uint32_t next_base = base + cnt;
	add	w6, w6, w4	// next_base, _5, tmp249
// bitmapdecoding.cpp:140:     if (cnt > 8) {
	cmp	w4, 8	// tmp249,
// bitmapdecoding.cpp:132:     base_ptr[base + 4] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w10, [x0, x5, lsl 2]	// tmp281, *_53
// bitmapdecoding.cpp:134:     base_ptr[base + 5] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	ldr	w5, [x1]	//, *base_4(D)
// bitmapdecoding.cpp:134:     base_ptr[base + 5] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w5, w5, 5	// tmp285, *base_4(D),
// bitmapdecoding.cpp:134:     base_ptr[base + 5] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w9, [x0, x5, lsl 2]	// tmp287, *_63
// bitmapdecoding.cpp:136:     base_ptr[base + 6] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	ldr	w5, [x1]	//, *base_4(D)
// bitmapdecoding.cpp:136:     base_ptr[base + 6] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w5, w5, 6	// tmp291, *base_4(D),
// bitmapdecoding.cpp:136:     base_ptr[base + 6] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w8, [x0, x5, lsl 2]	// tmp293, *_73
// bitmapdecoding.cpp:138:     base_ptr[base + 7] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	ldr	w5, [x1]	//, *base_4(D)
// bitmapdecoding.cpp:138:     base_ptr[base + 7] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w5, w5, 7	// tmp297, *base_4(D),
// bitmapdecoding.cpp:138:     base_ptr[base + 7] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w7, [x0, x5, lsl 2]	// tmp299, *_83
// bitmapdecoding.cpp:140:     if (cnt > 8) {
	ble	.L2114		//,
// bitmapdecoding.cpp:141:       base_ptr[base + 8] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	ldr	w5, [x1]	//, *base_4(D)
// bitmapdecoding.cpp:139:     bits = bits & (bits - 1);
	sub	x7, x3, #1	// _85, bits,
// bitmapdecoding.cpp:139:     bits = bits & (bits - 1);
	and	x3, x3, x7	// bits, bits, _85
// bitmapdecoding.cpp:158:     if (cnt > 16) {
	cmp	w4, 16	// tmp249,
// bitmapdecoding.cpp:141:       base_ptr[base + 8] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w5, w5, 8	// tmp303, *base_4(D),
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x3	// tmp300, bits
	clz	x8, x8	// tmp300, tmp300
// bitmapdecoding.cpp:142:       bits = bits & (bits - 1);
	sub	x7, x3, #1	// _95, bits,
// bitmapdecoding.cpp:141:       base_ptr[base + 8] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w8, w2, w8	// tmp305, idx, tmp300
// bitmapdecoding.cpp:142:       bits = bits & (bits - 1);
	and	x3, x3, x7	// bits, bits, _95
// bitmapdecoding.cpp:141:       base_ptr[base + 8] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w8, [x0, x5, lsl 2]	// tmp305, *_93
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp306, bits
	clz	x7, x7	// tmp306, tmp306
// bitmapdecoding.cpp:144:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _105, bits,
// bitmapdecoding.cpp:143:       base_ptr[base + 9] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	ldr	w4, [x1]	//, *base_4(D)
// bitmapdecoding.cpp:143:       base_ptr[base + 9] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w7, w2, w7	// tmp311, idx, tmp306
// bitmapdecoding.cpp:144:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _105
// bitmapdecoding.cpp:143:       base_ptr[base + 9] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w4, w4, 9	// tmp309, *base_4(D),
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x3	// tmp312, bits
	clz	x5, x5	// tmp312, tmp312
// bitmapdecoding.cpp:146:       bits = bits & (bits - 1);
	sub	x8, x3, #1	// _115, bits,
// bitmapdecoding.cpp:145:       base_ptr[base + 10] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w5, w2, w5	// tmp317, idx, tmp312
// bitmapdecoding.cpp:146:       bits = bits & (bits - 1);
	and	x3, x3, x8	// bits, bits, _115
// bitmapdecoding.cpp:143:       base_ptr[base + 9] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w7, [x0, x4, lsl 2]	// tmp311, *_103
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x10, x3	// tmp318, bits
	clz	x10, x10	// tmp318, tmp318
// bitmapdecoding.cpp:148:       bits = bits & (bits - 1);
	sub	x8, x3, #1	// _125, bits,
// bitmapdecoding.cpp:145:       base_ptr[base + 10] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	ldr	w4, [x1]	//, *base_4(D)
// bitmapdecoding.cpp:147:       base_ptr[base + 11] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w10, w2, w10	// tmp323, idx, tmp318
// bitmapdecoding.cpp:148:       bits = bits & (bits - 1);
	and	x3, x3, x8	// bits, bits, _125
// bitmapdecoding.cpp:145:       base_ptr[base + 10] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w4, w4, 10	// tmp315, *base_4(D),
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x9, x3	// tmp324, bits
	clz	x9, x9	// tmp324, tmp324
// bitmapdecoding.cpp:150:       bits = bits & (bits - 1);
	sub	x7, x3, #1	// _135, bits,
// bitmapdecoding.cpp:149:       base_ptr[base + 12] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w9, w2, w9	// tmp329, idx, tmp324
// bitmapdecoding.cpp:150:       bits = bits & (bits - 1);
	and	x3, x3, x7	// bits, bits, _135
// bitmapdecoding.cpp:145:       base_ptr[base + 10] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w5, [x0, x4, lsl 2]	// tmp317, *_113
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x3	// tmp330, bits
	clz	x8, x8	// tmp330, tmp330
// bitmapdecoding.cpp:152:       bits = bits & (bits - 1);
	sub	x7, x3, #1	// _145, bits,
// bitmapdecoding.cpp:147:       base_ptr[base + 11] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	ldr	w4, [x1]	//, *base_4(D)
// bitmapdecoding.cpp:151:       base_ptr[base + 13] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w8, w2, w8	// tmp335, idx, tmp330
// bitmapdecoding.cpp:152:       bits = bits & (bits - 1);
	and	x3, x3, x7	// bits, bits, _145
// bitmapdecoding.cpp:147:       base_ptr[base + 11] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w4, w4, 11	// tmp321, *base_4(D),
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x7, x3	// tmp336, bits
	clz	x7, x7	// tmp336, tmp336
// bitmapdecoding.cpp:154:       bits = bits & (bits - 1);
	sub	x5, x3, #1	// _155, bits,
// bitmapdecoding.cpp:153:       base_ptr[base + 14] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w7, w2, w7	// tmp341, idx, tmp336
// bitmapdecoding.cpp:154:       bits = bits & (bits - 1);
	and	x3, x3, x5	// bits, bits, _155
// bitmapdecoding.cpp:147:       base_ptr[base + 11] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w10, [x0, x4, lsl 2]	// tmp323, *_123
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x3	// tmp342, bits
	clz	x5, x5	// tmp342, tmp342
// bitmapdecoding.cpp:156:       bits = bits & (bits - 1);
	sub	x11, x3, #1	// _165, bits,
// bitmapdecoding.cpp:149:       base_ptr[base + 12] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	ldr	w4, [x1]	//, *base_4(D)
// bitmapdecoding.cpp:155:       base_ptr[base + 15] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w5, w2, w5	// tmp347, idx, tmp342
// bitmapdecoding.cpp:156:       bits = bits & (bits - 1);
	and	x3, x3, x11	// bits, bits, _165
// bitmapdecoding.cpp:149:       base_ptr[base + 12] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w4, w4, 12	// tmp327, *base_4(D),
// bitmapdecoding.cpp:149:       base_ptr[base + 12] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w9, [x0, x4, lsl 2]	// tmp329, *_133
// bitmapdecoding.cpp:151:       base_ptr[base + 13] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	ldr	w4, [x1]	//, *base_4(D)
// bitmapdecoding.cpp:151:       base_ptr[base + 13] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w4, w4, 13	// tmp333, *base_4(D),
// bitmapdecoding.cpp:151:       base_ptr[base + 13] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w8, [x0, x4, lsl 2]	// tmp335, *_143
// bitmapdecoding.cpp:153:       base_ptr[base + 14] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	ldr	w4, [x1]	//, *base_4(D)
// bitmapdecoding.cpp:153:       base_ptr[base + 14] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w4, w4, 14	// tmp339, *base_4(D),
// bitmapdecoding.cpp:153:       base_ptr[base + 14] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w7, [x0, x4, lsl 2]	// tmp341, *_153
// bitmapdecoding.cpp:155:       base_ptr[base + 15] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	ldr	w4, [x1]	//, *base_4(D)
// bitmapdecoding.cpp:155:       base_ptr[base + 15] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w4, w4, 15	// tmp345, *base_4(D),
// bitmapdecoding.cpp:155:       base_ptr[base + 15] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w5, [x0, x4, lsl 2]	// tmp347, *_163
// bitmapdecoding.cpp:158:     if (cnt > 16) {
	ble	.L2114		//,
// bitmapdecoding.cpp:159:       base += 16;
	ldr	w4, [x1]	//, *base_4(D)
	add	w4, w4, 16	// _180, *base_4(D),
	str	w4, [x1]	// _180, *base_4(D)
	.p2align 3
.L2115:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x3	// tmp349, bits
	clz	x5, x5	// tmp349, tmp349
// bitmapdecoding.cpp:161:         base_ptr[base] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w5, w2, w5	// tmp352, idx, tmp349
// bitmapdecoding.cpp:161:         base_ptr[base] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w5, [x0, w4, uxtw 2]	// tmp352, *_175
// bitmapdecoding.cpp:162:         bits = bits & (bits - 1);
	sub	x4, x3, #1	// _177, bits,
// bitmapdecoding.cpp:164:       } while (bits != 0);
	ands	x3, x3, x4	// bits, bits, _177
// bitmapdecoding.cpp:163:         base++;
	ldr	w4, [x1]	//, *base_4(D)
	add	w4, w4, 1	// _180, *base_4(D),
	str	w4, [x1]	// _180, *base_4(D)
// bitmapdecoding.cpp:164:       } while (bits != 0);
	bne	.L2115		//,
.L2114:
// bitmapdecoding.cpp:166:     base = next_base;
	str	w6, [x1]	// next_base, *base_4(D)
// bitmapdecoding.cpp:168: }
	ret	
	.cfi_endproc
.LFE3038:
	.size	_Z14faster_decoderPjRjjm.part.15, .-_Z14faster_decoderPjRjjm.part.15
	.align	2
	.p2align 3,,7
	.type	_Z4unitIXadL_ZL12fast_decoderPjRjjmEEEbv, %function
_Z4unitIXadL_ZL12fast_decoderPjRjjmEEEbv:
.LFB2322:
	.cfi_startproc
	sub	sp, sp, #576	//,,
	.cfi_def_cfa_offset 576
	mov	w13, 0	// prephitmp_84,
// bitmapdecoding.cpp:264:   for (size_t i = 0; i < 64; i++) {
	mov	x14, 0	// i,
// bitmapdecoding.cpp:266:     x <<= i;
	mov	x15, 1	// tmp128,
// bitmapdecoding.cpp:261: template <void (*F)(uint32_t *, uint32_t &, uint32_t, uint64_t)> bool unit() {
	stp	x29, x30, [sp]	//,,
	.cfi_offset 29, -576
	.cfi_offset 30, -568
	mov	x29, sp	//,
	stp	x19, x20, [sp, 16]	//,,
	.cfi_offset 19, -560
	.cfi_offset 20, -552
	add	x19, sp, 64	// tmp169,,
.L2130:
// bitmapdecoding.cpp:266:     x <<= i;
	lsl	x12, x15, x14	// ivtmp.1041, tmp128, i
	add	x0, sp, 320	// tmp171,,
	mov	w2, 0	//,
	mov	x3, x12	//, ivtmp.1041
	add	x1, sp, 60	// tmp170,,
// bitmapdecoding.cpp:267:     uint32_t matches = 0;
	str	wzr, [sp, 60]	//, matches
	bl	_Z14faster_decoderPjRjjm.part.15		//
// bitmapdecoding.cpp:269:     uint32_t refmatches = 0;
	mov	w0, 0	// refmatches,
	b	.L2122		//
	.p2align 2
.L2146:
	rbit	x13, x12	// prephitmp_84, ivtmp.1041
	clz	x13, x13	// prephitmp_84, prephitmp_84
.L2122:
// bitmapdecoding.cpp:87:     base_ptr[base] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w13, [x19, w0, uxtw 2]	// prephitmp_84, *_53
// bitmapdecoding.cpp:88:     bits = bits & (bits - 1);
	sub	x1, x12, #1	// _55, ivtmp.1041,
// bitmapdecoding.cpp:89:     base++;
	add	w0, w0, 1	// refmatches, refmatches,
// bitmapdecoding.cpp:86:   while (bits != 0) {
	ands	x12, x12, x1	// ivtmp.1041, ivtmp.1041, _55
	bne	.L2146		//,
// bitmapdecoding.cpp:271:     if (refmatches != matches) {
	ldr	w1, [sp, 60]	//, matches
// bitmapdecoding.cpp:271:     if (refmatches != matches) {
	cmp	w1, w0	// matches.99_2, refmatches
	bne	.L2126		//,
// bitmapdecoding.cpp:275:     for (size_t k = 0; k < matches; k++)
	uxtw	x2, w0	// _95, refmatches
	cbz	w0, .L2125	// refmatches,
// bitmapdecoding.cpp:276:       if (decoded[k] != refdecoded[k]) {
	ldr	w0, [sp, 64]	//, refdecoded
	ldr	w1, [sp, 320]	//, decoded
	cmp	w1, w0	// decoded, refdecoded
	bne	.L2126		//,
	sub	x2, x2, #1	// _77, _95,
	b	.L2127		//
	.p2align 2
.L2128:
// bitmapdecoding.cpp:276:       if (decoded[k] != refdecoded[k]) {
	ldr	w1, [x0, 4]	//, MEM[symbol: decoded, index: ivtmp.1041_97, step: 4, offset: 4B]
// bitmapdecoding.cpp:276:       if (decoded[k] != refdecoded[k]) {
	ldr	w0, [x19, x12, lsl 2]	//, MEM[symbol: refdecoded, index: ivtmp.1041_91, step: 4, offset: 0B]
	cmp	w1, w0	// _4, MEM[symbol: refdecoded, index: ivtmp.1041_91, step: 4, offset: 0B]
	bne	.L2126		//,
.L2127:
// bitmapdecoding.cpp:276:       if (decoded[k] != refdecoded[k]) {
	add	x0, sp, 320	// tmp172,,
// bitmapdecoding.cpp:275:     for (size_t k = 0; k < matches; k++)
	cmp	x2, x12	// _77, ivtmp.1041
// bitmapdecoding.cpp:276:       if (decoded[k] != refdecoded[k]) {
	add	x0, x0, x12, lsl 2	// tmp140, tmp172, ivtmp.1041,
	add	x12, x12, 1	// ivtmp.1041, ivtmp.1041,
// bitmapdecoding.cpp:275:     for (size_t k = 0; k < matches; k++)
	bne	.L2128		//,
.L2125:
// bitmapdecoding.cpp:264:   for (size_t i = 0; i < 64; i++) {
	add	x14, x14, 1	// i, i,
// bitmapdecoding.cpp:264:   for (size_t i = 0; i < 64; i++) {
	cmp	x14, 64	// i,
	beq	.L2135		//,
	lsl	x13, x15, x14	// tmp145, tmp128, i
	rbit	x13, x13	// prephitmp_84, tmp145
	clz	x13, x13	// prephitmp_84, prephitmp_84
	b	.L2130		//
	.p2align 2
.L2126:
// bitmapdecoding.cpp:272:       printf("bug\n");
	adrp	x0, .LC0	// tmp136,
	add	x0, x0, :lo12:.LC0	//, tmp136,
	bl	puts		//
// bitmapdecoding.cpp:273:       return false;
	mov	w0, 0	// _16,
.L2124:
// bitmapdecoding.cpp:302: }
	ldp	x29, x30, [sp]	//,,
	ldp	x19, x20, [sp, 16]	//,,
	add	sp, sp, 576	//,,
	.cfi_remember_state
	.cfi_restore 29
	.cfi_restore 30
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
	ret	
.L2135:
	.cfi_restore_state
	mov	x20, 16960	// ivtmp_101,
	str	x21, [sp, 32]	//,
	.cfi_offset 21, -544
	movk	x20, 0xf, lsl 16	// ivtmp_101,,
.L2129:
// bitmapdecoding.cpp:282:     uint64_t x = rand();
	bl	rand		//
// bitmapdecoding.cpp:283:     x <<= 32;
	lsl	x21, x0, 32	// x,,
// bitmapdecoding.cpp:284:     x |= rand();
	bl	rand		//
// bitmapdecoding.cpp:285:     uint32_t matches = 0;
	str	wzr, [sp, 60]	//, matches
// bitmapdecoding.cpp:284:     x |= rand();
	sxtw	x0, w0	// _35,
// bitmapdecoding.cpp:284:     x |= rand();
	orr	x21, x0, x21	// k, _35, x
// bitmapdecoding.cpp:121:   if (bits != 0u) {
	cbz	x21, .L2131	// k,
	add	x0, sp, 320	// tmp174,,
	mov	x3, x21	//, k
	mov	w2, 0	//,
	add	x1, sp, 60	// tmp173,,
	bl	_Z14faster_decoderPjRjjm.part.15		//
	mov	w0, 0	// refmatches,
.L2132:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x1, x21	// tmp151, k
	clz	x1, x1	// tmp151, tmp151
// bitmapdecoding.cpp:87:     base_ptr[base] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w1, [x19, w0, uxtw 2]	// tmp151, *_64
// bitmapdecoding.cpp:88:     bits = bits & (bits - 1);
	sub	x1, x21, #1	// _65, k,
// bitmapdecoding.cpp:89:     base++;
	add	w0, w0, 1	//, refmatches,
// bitmapdecoding.cpp:86:   while (bits != 0) {
	ands	x21, x21, x1	// k, k, _65
	bne	.L2132		//,
// bitmapdecoding.cpp:289:     if (refmatches != matches) {
	ldr	w1, [sp, 60]	//, matches
	cmp	w1, w0	// matches, refmatches
	bne	.L2134		//,
.L2133:
// bitmapdecoding.cpp:293:     for (size_t k = 0; k < matches; k++) {
	cmp	x0, x21	// refmatches, k
	bls	.L2131		//,
// bitmapdecoding.cpp:294:       if (decoded[k] != refdecoded[k]) {
	add	x1, sp, 320	// tmp175,,
	ldr	w2, [x1, x21, lsl 2]	//, MEM[symbol: decoded, index: k_15, step: 4, offset: 0B]
	ldr	w1, [x19, x21, lsl 2]	//, MEM[symbol: refdecoded, index: k_15, step: 4, offset: 0B]
// bitmapdecoding.cpp:293:     for (size_t k = 0; k < matches; k++) {
	add	x21, x21, 1	// k, k,
// bitmapdecoding.cpp:294:       if (decoded[k] != refdecoded[k]) {
	cmp	w2, w1	// MEM[symbol: decoded, index: k_15, step: 4, offset: 0B], MEM[symbol: refdecoded, index: k_15, step: 4, offset: 0B]
	beq	.L2133		//,
.L2134:
// bitmapdecoding.cpp:290:       printf("bug\n");
	adrp	x0, .LC0	// tmp157,
	add	x0, x0, :lo12:.LC0	//, tmp157,
	bl	puts		//
// bitmapdecoding.cpp:291:       return false;
	mov	w0, 0	// _16,
	ldr	x21, [sp, 32]	//,
	.cfi_remember_state
	.cfi_restore 21
	b	.L2124		//
.L2131:
	.cfi_restore_state
// bitmapdecoding.cpp:281:   for (size_t i = 0; i < 1000000; i++) {
	subs	x20, x20, #1	// ivtmp_101, ivtmp_101,
	bne	.L2129		//,
// bitmapdecoding.cpp:300:   printf("Tests passed.\n");
	adrp	x0, .LC1	// tmp164,
	add	x0, x0, :lo12:.LC1	//, tmp164,
	bl	puts		//
// bitmapdecoding.cpp:301:   return true;
	mov	w0, 1	// _16,
	ldr	x21, [sp, 32]	//,
	.cfi_restore 21
	b	.L2124		//
	.cfi_endproc
.LFE2322:
	.size	_Z4unitIXadL_ZL12fast_decoderPjRjjmEEEbv, .-_Z4unitIXadL_ZL12fast_decoderPjRjjmEEEbv
	.align	2
	.p2align 3,,7
	.global	_Z12compute_minsSt6vectorIS_IySaIyEESaIS1_EE
	.type	_Z12compute_minsSt6vectorIS_IySaIyEESaIS1_EE, %function
_Z12compute_minsSt6vectorIS_IySaIyEESaIS1_EE:
.LFB1926:
	.cfi_startproc
	stp	x29, x30, [sp, -64]!	//,,,
	.cfi_def_cfa_offset 64
	.cfi_offset 29, -64
	.cfi_offset 30, -56
	mov	x29, sp	//,
	stp	x19, x20, [sp, 16]	//,,
	stp	x21, x22, [sp, 32]	//,,
	.cfi_offset 19, -48
	.cfi_offset 20, -40
	.cfi_offset 21, -32
	.cfi_offset 22, -24
	mov	x22, x8	// <retval>,
// linux-perf-events.h:96:   if (allresults.size() == 0)
	ldp	x20, x21, [x0]	// pretmp_83, pretmp_85, MEM[(struct vector * *)allresults_10(D)]
// linux-perf-events.h:96:   if (allresults.size() == 0)
	cmp	x20, x21	// pretmp_83, pretmp_85
	beq	.L2165		//,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:460: 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
	ldr	x1, [x20]	// pretmp_4, MEM[(long long unsigned int * *)_17]
	str	x23, [sp, 48]	//,
	.cfi_offset 23, -16
	mov	x23, x0	// allresults, allresults
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:460: 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
	ldr	x0, [x20, 8]	// prephitmp_21, MEM[(long long unsigned int * *)_17 + 8B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x19, x0, x1	// _79, prephitmp_21, pretmp_4
	asr	x2, x19, 3	// tmp117, _79,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	cbz	x2, .L2166	// tmp117,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	mov	x0, 2305843009213693951	// tmp118,
	cmp	x2, x0	// tmp117, tmp118
	bhi	.L2167		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x19	//, _79
	bl	_Znwm		//
	mov	x3, x0	// _59,
	mov	x2, x19	// _58, _79
	ldp	x1, x0, [x20]	// pretmp_4, prephitmp_21, MEM[(long long unsigned int * *)_17]
	ldp	x20, x21, [x23]	// pretmp_83, pretmp_85, MEM[(struct vector * *)allresults_10(D)]
	sub	x19, x0, x1	// _79, prephitmp_21, pretmp_4
.L2151:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	add	x23, x3, x2	// _51, _59, _58
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	cmp	x0, x1	// prephitmp_21, pretmp_4
	beq	.L2153		//,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:368: 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
	mov	x0, x3	//, _59
	mov	x2, x19	//, _79
	bl	memmove		//
	mov	x3, x0	// _59,
.L2153:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x9, x21, x20	// tmp120, pretmp_85, pretmp_83
	mov	x0, -6148914691236517206	// tmp123,
	movk	x0, 0xaaab, lsl 0	// tmp123,,
// linux-perf-events.h:101:   for (size_t k = 1; k < allresults.size(); k++) {
	mov	x7, 1	// k,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	asr	x9, x9, 3	// tmp121, tmp120,
	add	x6, x20, 24	// ivtmp.1079, pretmp_83,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:369: 	  return __result + _Num;
	add	x8, x3, x19	// _57, _59, _79
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	asr	x4, x19, 3	// _37, _79,
	mul	x9, x9, x0	// _72, tmp121, tmp123
// linux-perf-events.h:101:   for (size_t k = 1; k < allresults.size(); k++) {
	cmp	x9, x7	// _72,
	bls	.L2157		//,
	.p2align 3
.L2156:
// linux-perf-events.h:102:     for (size_t z = 0; z < answer.size(); z++) {
	cbz	x4, .L2160	// _37,
// linux-perf-events.h:103:       if (allresults[k][z] < answer[z])
	ldr	x5, [x6]	// _23, MEM[base: _27, offset: 0B]
// linux-perf-events.h:102:     for (size_t z = 0; z < answer.size(); z++) {
	mov	x0, 0	// z,
	.p2align 3
.L2159:
// linux-perf-events.h:103:       if (allresults[k][z] < answer[z])
	ldr	x1, [x5, x0, lsl 3]	// _1, MEM[base: _23, index: z_78, step: 8, offset: 0]
// linux-perf-events.h:103:       if (allresults[k][z] < answer[z])
	ldr	x2, [x3, x0, lsl 3]	// MEM[base: iftmp.4_60, index: z_78, step: 8, offset: 0], MEM[base: iftmp.4_60, index: z_78, step: 8, offset: 0]
	cmp	x1, x2	// _1, MEM[base: iftmp.4_60, index: z_78, step: 8, offset: 0]
	bcs	.L2158		//,
// linux-perf-events.h:104:         answer[z] = allresults[k][z];
	str	x1, [x3, x0, lsl 3]	// _1, MEM[base: iftmp.4_60, index: z_78, step: 8, offset: 0]
.L2158:
// linux-perf-events.h:102:     for (size_t z = 0; z < answer.size(); z++) {
	add	x0, x0, 1	// z, z,
// linux-perf-events.h:102:     for (size_t z = 0; z < answer.size(); z++) {
	cmp	x0, x4	// z, _37
	bne	.L2159		//,
.L2160:
// linux-perf-events.h:101:   for (size_t k = 1; k < allresults.size(); k++) {
	add	x7, x7, 1	// k, k,
	add	x6, x6, 24	// ivtmp.1079, ivtmp.1079,
// linux-perf-events.h:101:   for (size_t k = 1; k < allresults.size(); k++) {
	cmp	x7, x9	// k, _72
	bne	.L2156		//,
.L2157:
// /usr/local/include/c++/8.3.0/bits/move.h:194:       __a = _GLIBCXX_MOVE(__b);
	stp	x3, x8, [x22]	// _59, _57, MEM[(long long unsigned int * &)_11(D)]
// linux-perf-events.h:108: }
	mov	x0, x22	//, <retval>
// /usr/local/include/c++/8.3.0/bits/move.h:194:       __a = _GLIBCXX_MOVE(__b);
	str	x23, [x22, 16]	// _51, MEM[(long long unsigned int * &)_11(D) + 16]
// linux-perf-events.h:108: }
	ldp	x19, x20, [sp, 16]	//,,
	ldp	x21, x22, [sp, 32]	//,,
	ldr	x23, [sp, 48]	//,
	.cfi_restore 23
	ldp	x29, x30, [sp], 64	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 21
	.cfi_restore 22
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
	ret	
	.p2align 2
.L2165:
	.cfi_def_cfa_offset 64
	.cfi_offset 19, -48
	.cfi_offset 20, -40
	.cfi_offset 21, -32
	.cfi_offset 22, -24
	.cfi_offset 29, -64
	.cfi_offset 30, -56
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:96: 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [x8]	//,, MEM[(struct _Vector_impl *)_11(D)]._M_start
// linux-perf-events.h:108: }
	mov	x0, x22	//, <retval>
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:96: 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
	str	xzr, [x8, 16]	//, MEM[(struct _Vector_impl *)_11(D)]._M_end_of_storage
// linux-perf-events.h:108: }
	ldp	x19, x20, [sp, 16]	//,,
	ldp	x21, x22, [sp, 32]	//,,
	ldp	x29, x30, [sp], 64	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 21
	.cfi_restore 22
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
	ret	
.L2166:
	.cfi_def_cfa_offset 64
	.cfi_offset 19, -48
	.cfi_offset 20, -40
	.cfi_offset 21, -32
	.cfi_offset 22, -24
	.cfi_offset 23, -16
	.cfi_offset 29, -64
	.cfi_offset 30, -56
	mov	x2, x19	// _58, _79
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x3, 0	// _59,
	b	.L2151		//
.L2167:
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:102: 	  std::__throw_bad_alloc();
	bl	_ZSt17__throw_bad_allocv		//
	.cfi_endproc
.LFE1926:
	.size	_Z12compute_minsSt6vectorIS_IySaIyEESaIS1_EE, .-_Z12compute_minsSt6vectorIS_IySaIyEESaIS1_EE
	.align	2
	.p2align 3,,7
	.global	_Z16compute_averagesSt6vectorIS_IySaIyEESaIS1_EE
	.type	_Z16compute_averagesSt6vectorIS_IySaIyEESaIS1_EE, %function
_Z16compute_averagesSt6vectorIS_IySaIyEESaIS1_EE:
.LFB1927:
	.cfi_startproc
	stp	x29, x30, [sp, -48]!	//,,,
	.cfi_def_cfa_offset 48
	.cfi_offset 29, -48
	.cfi_offset 30, -40
	mov	x29, sp	//,
	stp	x21, x22, [sp, 32]	//,,
	.cfi_offset 21, -16
	.cfi_offset 22, -8
	mov	x21, x0	// allresults, allresults
// linux-perf-events.h:112:   if (allresults.size() == 0)
	ldp	x3, x0, [x0]	// prephitmp_8, _30, MEM[(struct vector * *)allresults_15(D)]
// linux-perf-events.h:111: compute_averages(std::vector<std::vector<unsigned long long>> allresults) {
	stp	x19, x20, [sp, 16]	//,,
	.cfi_offset 19, -32
	.cfi_offset 20, -24
// linux-perf-events.h:111: compute_averages(std::vector<std::vector<unsigned long long>> allresults) {
	mov	x20, x8	// <retval>,
// linux-perf-events.h:112:   if (allresults.size() == 0)
	cmp	x3, x0	// prephitmp_8, _30
	beq	.L2190		//,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldp	x1, x22, [x3]	// MEM[(long long unsigned int * *)_29], MEM[(long long unsigned int * *)_29 + 8B], MEM[(long long unsigned int * *)_29]
	sub	x22, x22, x1	// _21, MEM[(long long unsigned int * *)_29 + 8B], MEM[(long long unsigned int * *)_29]
	asr	x19, x22, 3	// prephitmp_123, _21,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	cbz	x19, .L2171	// prephitmp_123,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	mov	x0, 2305843009213693951	// tmp132,
	cmp	x19, x0	// prephitmp_123, tmp132
	bhi	.L2191		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x22	//, _21
	bl	_Znwm		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	add	x22, x0, x22	// _41, iftmp.12_44, _21
	mov	x1, 0	// ivtmp.1097,
	.p2align 3
.L2173:
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:754: 	*__first = __tmp;
	str	xzr, [x0, x1, lsl 3]	//, MEM[base: _75, index: ivtmp.1097_53, step: 8, offset: 0B]
	add	x1, x1, 1	// ivtmp.1097, ivtmp.1097,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:753: 	   __niter > 0; --__niter, (void) ++__first)
	cmp	x19, x1	// prephitmp_123, ivtmp.1097
	bne	.L2173		//,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldp	x3, x4, [x21]	// prephitmp_8, MEM[(struct vector * *)allresults_15(D) + 8B], MEM[(struct vector * *)allresults_15(D)]
	mov	x1, -6148914691236517206	// tmp139,
	movk	x1, 0xaaab, lsl 0	// tmp139,,
	lsl	x19, x19, 3	// _77, prephitmp_123,
	add	x6, x0, x19	// __first, iftmp.12_44, _77
	asr	x19, x19, 3	// prephitmp_123, _77,
	sub	x4, x4, x3	// tmp135, MEM[(struct vector * *)allresults_15(D) + 8B], prephitmp_8
	asr	x4, x4, 3	// tmp137, tmp135,
	mul	x4, x4, x1	// _39, tmp137, tmp139
// linux-perf-events.h:117:   for (size_t k = 0; k < allresults.size(); k++) {
	cbz	x4, .L2175	// _39,
// linux-perf-events.h:117:   for (size_t k = 0; k < allresults.size(); k++) {
	mov	x5, 0	// k,
	.p2align 3
.L2178:
// linux-perf-events.h:118:     for (size_t z = 0; z < answer.size(); z++) {
	cbz	x19, .L2181	// prephitmp_123,
// linux-perf-events.h:119:       answer[z] += allresults[k][z];
	ldr	x2, [x3]	// _36, MEM[base: _54, offset: 0B]
// linux-perf-events.h:118:     for (size_t z = 0; z < answer.size(); z++) {
	mov	x1, 0	// z,
	.p2align 3
.L2180:
// linux-perf-events.h:119:       answer[z] += allresults[k][z];
	ldr	d1, [x2, x1, lsl 3]	// MEM[base: _36, index: z_17, step: 8, offset: 0], MEM[base: _36, index: z_17, step: 8, offset: 0]
	ldr	d0, [x0, x1, lsl 3]	// MEM[base: iftmp.12_27, index: z_17, step: 8, offset: 0], MEM[base: iftmp.12_27, index: z_17, step: 8, offset: 0]
	ucvtf	d1, d1	// tmp140, MEM[base: _36, index: z_17, step: 8, offset: 0]
	fadd	d0, d0, d1	// tmp142, MEM[base: iftmp.12_27, index: z_17, step: 8, offset: 0], tmp140
	str	d0, [x0, x1, lsl 3]	// tmp142, MEM[base: iftmp.12_27, index: z_17, step: 8, offset: 0]
// linux-perf-events.h:118:     for (size_t z = 0; z < answer.size(); z++) {
	add	x1, x1, 1	// z, z,
// linux-perf-events.h:118:     for (size_t z = 0; z < answer.size(); z++) {
	cmp	x1, x19	// z, prephitmp_123
	bne	.L2180		//,
.L2181:
// linux-perf-events.h:117:   for (size_t k = 0; k < allresults.size(); k++) {
	add	x5, x5, 1	// k, k,
	add	x3, x3, 24	// ivtmp.1095, ivtmp.1095,
// linux-perf-events.h:117:   for (size_t k = 0; k < allresults.size(); k++) {
	cmp	x5, x4	// k, _39
	bne	.L2178		//,
.L2175:
// linux-perf-events.h:123:   for (size_t z = 0; z < answer.size(); z++) {
	cbz	x19, .L2183	// prephitmp_123,
	ucvtf	d1, x4	// _121, _39
	add	x19, x0, x19, lsl 3	// _69, iftmp.12_44, prephitmp_123,
	mov	x1, x0	// ivtmp.1085, iftmp.12_44
	.p2align 3
.L2182:
// linux-perf-events.h:124:     answer[z] /= allresults.size();
	ldr	d0, [x1]	// MEM[base: _100, offset: 0], MEM[base: _100, offset: 0]
	fdiv	d0, d0, d1	// tmp145, MEM[base: _100, offset: 0], _121
	str	d0, [x1], 8	// tmp145, MEM[base: _100, offset: 0]
// linux-perf-events.h:123:   for (size_t z = 0; z < answer.size(); z++) {
	cmp	x19, x1	// _69, ivtmp.1085
	bne	.L2182		//,
.L2183:
// /usr/local/include/c++/8.3.0/bits/move.h:194:       __a = _GLIBCXX_MOVE(__b);
	stp	x0, x6, [x20]	// iftmp.12_44, __first, MEM[(double * &)_16(D)]
// linux-perf-events.h:127: }
	mov	x0, x20	//, <retval>
// /usr/local/include/c++/8.3.0/bits/move.h:194:       __a = _GLIBCXX_MOVE(__b);
	str	x22, [x20, 16]	// _41, MEM[(double * &)_16(D) + 16]
// linux-perf-events.h:127: }
	ldp	x19, x20, [sp, 16]	//,,
	ldp	x21, x22, [sp, 32]	//,,
	ldp	x29, x30, [sp], 48	//,,,
	.cfi_remember_state
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 21
	.cfi_restore 22
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
	ret	
	.p2align 2
.L2190:
	.cfi_restore_state
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:96: 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [x8]	//,, MEM[(struct _Vector_impl *)_16(D)]._M_start
// linux-perf-events.h:127: }
	mov	x0, x20	//, <retval>
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:96: 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
	str	xzr, [x8, 16]	//, MEM[(struct _Vector_impl *)_16(D)]._M_end_of_storage
// linux-perf-events.h:127: }
	ldp	x19, x20, [sp, 16]	//,,
	ldp	x21, x22, [sp, 32]	//,,
	ldp	x29, x30, [sp], 48	//,,,
	.cfi_remember_state
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 21
	.cfi_restore 22
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
	ret	
.L2171:
	.cfi_restore_state
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x4, x0, x3	// tmp148, _30, prephitmp_8
	mov	x1, -6148914691236517206	// tmp151,
	movk	x1, 0xaaab, lsl 0	// tmp151,,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x6, 0	// __first,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	asr	x4, x4, 3	// tmp149, tmp148,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x0, 0	// iftmp.12_44,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	mul	x4, x4, x1	// _39, tmp149, tmp151
// linux-perf-events.h:117:   for (size_t k = 0; k < allresults.size(); k++) {
	cbz	x4, .L2183	// _39,
// linux-perf-events.h:117:   for (size_t k = 0; k < allresults.size(); k++) {
	mov	x5, 0	// k,
	b	.L2178		//
.L2191:
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:102: 	  std::__throw_bad_alloc();
	bl	_ZSt17__throw_bad_allocv		//
	.cfi_endproc
.LFE1927:
	.size	_Z16compute_averagesSt6vectorIS_IySaIyEESaIS1_EE, .-_Z16compute_averagesSt6vectorIS_IySaIyEESaIS1_EE
	.align	2
	.p2align 3,,7
	.global	_Z14load_text_filePKcPm
	.type	_Z14load_text_filePKcPm, %function
_Z14load_text_filePKcPm:
.LFB1935:
	.cfi_startproc
	.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
	.cfi_lsda 0x1b,.LLSDA1935
	stp	x29, x30, [sp, -48]!	//,,,
	.cfi_def_cfa_offset 48
	.cfi_offset 29, -48
	.cfi_offset 30, -40
	mov	x29, sp	//,
	stp	x19, x20, [sp, 16]	//,,
	.cfi_offset 19, -32
	.cfi_offset 20, -24
	mov	x20, x1	// len, len
// bitmapdecoding.cpp:49:   std::FILE *fp = std::fopen(filename, "rb");
	adrp	x1, .LC2	// tmp122,
	add	x1, x1, :lo12:.LC2	//, tmp122,
// bitmapdecoding.cpp:48: char *load_text_file(const char *filename, size_t *len) {
	stp	x21, x22, [sp, 32]	//,,
	.cfi_offset 21, -16
	.cfi_offset 22, -8
// bitmapdecoding.cpp:48: char *load_text_file(const char *filename, size_t *len) {
	mov	x21, x0	// filename, filename
.LEHB0:
// bitmapdecoding.cpp:49:   std::FILE *fp = std::fopen(filename, "rb");
	bl	fopen		//
// bitmapdecoding.cpp:50:   if (fp != nullptr) {
	cbz	x0, .L2193	// _9,
// bitmapdecoding.cpp:51:     std::fseek(fp, 0, SEEK_END);
	mov	w2, 2	//,
	mov	x1, 0	//,
	mov	x19, x0	// _9,
	bl	fseek		//
// bitmapdecoding.cpp:52:     *len = std::ftell(fp);
	mov	x0, x19	//, _9
	bl	ftell		//
// bitmapdecoding.cpp:52:     *len = std::ftell(fp);
	str	x0, [x20]	//, *len_13(D)
// bitmapdecoding.cpp:53:     std::rewind(fp);
	mov	x0, x19	//, _9
	bl	rewind		//
// bitmapdecoding.cpp:54:     char *data = new char[*len];
	ldr	x0, [x20]	//, *len_13(D)
	bl	_Znam		//
	mov	x21, x0	// <retval>,
// bitmapdecoding.cpp:55:     size_t readb = std::fread(data, 1, *len, fp);
	ldr	x2, [x20]	//, *len_13(D)
	mov	x3, x19	//, _9
	mov	x1, 1	//,
	bl	fread		//
	mov	x22, x0	// _20,
// bitmapdecoding.cpp:56:     std::fclose(fp);
	mov	x0, x19	//, _9
	bl	fclose		//
// bitmapdecoding.cpp:57:     if (readb != *len) {
	ldr	x0, [x20]	// *len_13(D), *len_13(D)
	cmp	x0, x22	// *len_13(D), _20
	bne	.L2204		//,
.L2192:
// bitmapdecoding.cpp:65: }
	mov	x0, x21	//, <retval>
	ldp	x19, x20, [sp, 16]	//,,
	ldp	x21, x22, [sp, 32]	//,,
	ldp	x29, x30, [sp], 48	//,,,
	.cfi_remember_state
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 21
	.cfi_restore 22
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
	ret	
	.p2align 2
.L2193:
	.cfi_restore_state
// /usr/local/include/c++/8.3.0/ostream:561: 	__ostream_insert(__out, __s,
	adrp	x20, _ZSt4cout	// tmp166,
	add	x19, x20, :lo12:_ZSt4cout	// tmp165, tmp166,
	adrp	x1, .LC4	// tmp135,
	mov	x0, x19	//, tmp165
	mov	x2, 11	//,
	add	x1, x1, :lo12:.LC4	//, tmp135,
	bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l		//
// /usr/local/include/c++/8.3.0/ostream:558:       if (!__s)
	cbz	x21, .L2205	// filename,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:322: 	return __builtin_strlen(__s);
	mov	x0, x21	//, filename
	bl	strlen		//
// /usr/local/include/c++/8.3.0/ostream:561: 	__ostream_insert(__out, __s,
	mov	x1, x21	//, filename
	mov	x2, x0	//,
	mov	x0, x19	//, tmp165
	bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l		//
.L2196:
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	ldr	x0, [x20, #:lo12:_ZSt4cout]	// cout._vptr.basic_ostream, cout._vptr.basic_ostream
	ldr	x0, [x0, -24]	// MEM[(long int *)_31 + -24B], MEM[(long int *)_31 + -24B]
	add	x0, x19, x0	// tmp153, tmp165, MEM[(long int *)_31 + -24B]
	ldr	x20, [x0, 240]	// _35, MEM[(const struct __ctype_type * *)_34 + 240B]
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:49:       if (!__f)
	cbz	x20, .L2206	// _35,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:874: 	if (_M_widen_ok)
	ldrb	w0, [x20, 56]	// MEM[(const struct ctype *)_35]._M_widen_ok, MEM[(const struct ctype *)_35]._M_widen_ok
	cbz	w0, .L2198	// MEM[(const struct ctype *)_35]._M_widen_ok,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:875: 	  return _M_widen[static_cast<unsigned char>(__c)];
	ldrb	w1, [x20, 67]	// _50, MEM[(const struct ctype *)_35]._M_widen
.L2199:
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	mov	x0, x19	//, tmp165
// bitmapdecoding.cpp:63:     return nullptr;
	mov	x21, 0	// <retval>,
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	bl	_ZNSo3putEc		//
// /usr/local/include/c++/8.3.0/ostream:613:     { return __os.flush(); }
	bl	_ZNSo5flushEv		//
	b	.L2192		//
	.p2align 2
.L2198:
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:876: 	this->_M_widen_init();
	mov	x0, x20	//, _35
	bl	_ZNKSt5ctypeIcE13_M_widen_initEv		//
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	ldr	x2, [x20]	// MEM[(const struct ctype *)_35].D.31376._vptr.facet, MEM[(const struct ctype *)_35].D.31376._vptr.facet
	adrp	x0, _ZNKSt5ctypeIcE8do_widenEc	// tmp159,
	add	x0, x0, :lo12:_ZNKSt5ctypeIcE8do_widenEc	// tmp158, tmp159,
	mov	w1, 10	// _50,
	ldr	x2, [x2, 48]	// _54, MEM[(int (*) () *)_53 + 48B]
	cmp	x2, x0	// _54, tmp158
	beq	.L2199		//,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	mov	x0, x20	//, _35
	blr	x2		// _54
	and	w1, w0, 255	// _50,
	b	.L2199		//
	.p2align 2
.L2205:
// /usr/local/include/c++/8.3.0/ostream:559: 	__out.setstate(ios_base::badbit);
	ldr	x0, [x20, #:lo12:_ZSt4cout]	// cout._vptr.basic_ostream, cout._vptr.basic_ostream
	ldr	x1, [x0, -24]	// MEM[(long int *)_41 + -24B], MEM[(long int *)_41 + -24B]
	add	x1, x19, x1	// _44, tmp165, MEM[(long int *)_41 + -24B]
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:158:       { this->clear(this->rdstate() | __state); }
	mov	x0, x1	//, _44
// /usr/local/include/c++/8.3.0/bits/ios_base.h:170:   { return _Ios_Iostate(static_cast<int>(__a) | static_cast<int>(__b)); }
	ldr	w1, [x1, 32]	//, MEM[(_Ios_Iostate *)_44 + 32B]
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:158:       { this->clear(this->rdstate() | __state); }
	orr	w1, w1, 1	//, MEM[(_Ios_Iostate *)_44 + 32B],
	bl	_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate		//
.LEHE0:
	b	.L2196		//
.L2204:
// bitmapdecoding.cpp:58:       throw std::runtime_error("could not read the data");
	mov	x0, 16	//,
	bl	__cxa_allocate_exception		//
	adrp	x1, .LC3	// tmp129,
	mov	x19, x0	// _23,
	add	x1, x1, :lo12:.LC3	//, tmp129,
.LEHB1:
	bl	_ZNSt13runtime_errorC1EPKc		//
.LEHE1:
// bitmapdecoding.cpp:58:       throw std::runtime_error("could not read the data");
	adrp	x2, _ZNSt13runtime_errorD1Ev	// tmp131,
	adrp	x1, _ZTISt13runtime_error	// tmp133,
	mov	x0, x19	//, _23
	add	x2, x2, :lo12:_ZNSt13runtime_errorD1Ev	//, tmp131,
	add	x1, x1, :lo12:_ZTISt13runtime_error	//, tmp133,
.LEHB2:
	bl	__cxa_throw		//
.L2206:
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:50: 	__throw_bad_cast();
	bl	_ZSt16__throw_bad_castv		//
.L2202:
	mov	x20, x0	// tmp164,
// bitmapdecoding.cpp:58:       throw std::runtime_error("could not read the data");
	mov	x0, x19	//, _23
	bl	__cxa_free_exception		//
	mov	x0, x20	//, tmp164
	bl	_Unwind_Resume		//
.LEHE2:
	.cfi_endproc
.LFE1935:
	.global	__gxx_personality_v0
	.section	.gcc_except_table,"a",@progbits
.LLSDA1935:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE1935-.LLSDACSB1935
.LLSDACSB1935:
	.uleb128 .LEHB0-.LFB1935
	.uleb128 .LEHE0-.LEHB0
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB1-.LFB1935
	.uleb128 .LEHE1-.LEHB1
	.uleb128 .L2202-.LFB1935
	.uleb128 0
	.uleb128 .LEHB2-.LFB1935
	.uleb128 .LEHE2-.LEHB2
	.uleb128 0
	.uleb128 0
.LLSDACSE1935:
	.text
	.size	_Z14load_text_filePKcPm, .-_Z14load_text_filePKcPm
	.align	2
	.p2align 3,,7
	.global	_Z12build_bitmapPKccPm
	.type	_Z12build_bitmapPKccPm, %function
_Z12build_bitmapPKccPm:
.LFB1936:
	.cfi_startproc
	stp	x29, x30, [sp, -64]!	//,,,
	.cfi_def_cfa_offset 64
	.cfi_offset 29, -64
	.cfi_offset 30, -56
	mov	x29, sp	//,
	stp	x19, x20, [sp, 16]	//,,
	.cfi_offset 19, -48
	.cfi_offset 20, -40
	mov	x20, x2	// wordcount, wordcount
	stp	x21, x22, [sp, 32]	//,,
	.cfi_offset 21, -32
	.cfi_offset 22, -24
// bitmapdecoding.cpp:67: uint64_t *build_bitmap(const char *filename, char target, size_t *wordcount) {
	and	w22, w1, 255	// target, target
// bitmapdecoding.cpp:69:   char *filedata = load_text_file(filename, &len);
	add	x1, sp, 56	//,,
	bl	_Z14load_text_filePKcPm		//
// bitmapdecoding.cpp:70:   if (filedata == nullptr)
	cbz	x0, .L2212	// _23,
	mov	x21, x0	// _23,
// bitmapdecoding.cpp:72:   *wordcount = len / 64;
	ldr	x0, [sp, 56]	// len, len
	lsr	x0, x0, 6	// _2, len,
// bitmapdecoding.cpp:72:   *wordcount = len / 64;
	str	x0, [x20]	// _2, *wordcount_24(D)
// bitmapdecoding.cpp:73:   uint64_t *data = new uint64_t[*wordcount];
	lsl	x0, x0, 3	//, _2,
	bl	_Znam		//
// bitmapdecoding.cpp:74:   memset(data, 0, *wordcount * sizeof(uint64_t));
	ldr	x20, [x20]	// _3, *wordcount_24(D)
// bitmapdecoding.cpp:73:   uint64_t *data = new uint64_t[*wordcount];
	mov	x19, x0	// <retval>,
// bitmapdecoding.cpp:74:   memset(data, 0, *wordcount * sizeof(uint64_t));
	mov	w1, 0	//,
	lsl	x2, x20, 3	//, _3,
	bl	memset		//
// bitmapdecoding.cpp:75:   for (size_t i = 0; i < *wordcount * 64; i++) {
	lsl	x4, x20, 6	// _39, _3,
// bitmapdecoding.cpp:75:   for (size_t i = 0; i < *wordcount * 64; i++) {
	cbz	x4, .L2209	// _39,
// bitmapdecoding.cpp:75:   for (size_t i = 0; i < *wordcount * 64; i++) {
	mov	x0, 0	// i,
// bitmapdecoding.cpp:77:       data[i / 64] |= (UINT64_C(1) << (i % 64));
	mov	x5, 1	// tmp133,
	.p2align 3
.L2211:
// bitmapdecoding.cpp:76:     if ((filedata[i] == target) || ((unsigned char)filedata[i] < 0x20)) {
	ldrb	w1, [x21, x0]	// _7, MEM[base: _23, index: i_42, offset: 0B]
// bitmapdecoding.cpp:77:       data[i / 64] |= (UINT64_C(1) << (i % 64));
	lsr	x2, x0, 6	// tmp125, i,
// bitmapdecoding.cpp:77:       data[i / 64] |= (UINT64_C(1) << (i % 64));
	lsl	x3, x5, x0	// tmp128, tmp133, i
// bitmapdecoding.cpp:75:   for (size_t i = 0; i < *wordcount * 64; i++) {
	add	x0, x0, 1	// i, i,
// bitmapdecoding.cpp:76:     if ((filedata[i] == target) || ((unsigned char)filedata[i] < 0x20)) {
	cmp	w1, w22	// _7, target
	ccmp	w1, 31, 0, ne	// _7,,,
	bhi	.L2210		//,
// bitmapdecoding.cpp:77:       data[i / 64] |= (UINT64_C(1) << (i % 64));
	ldr	x1, [x19, x2, lsl 3]	// *_9, *_9
	orr	x1, x1, x3	// tmp130, *_9, tmp128
	str	x1, [x19, x2, lsl 3]	// tmp130, *_9
.L2210:
// bitmapdecoding.cpp:75:   for (size_t i = 0; i < *wordcount * 64; i++) {
	cmp	x0, x4	// i, _39
	bne	.L2211		//,
.L2209:
// bitmapdecoding.cpp:80:   delete[] filedata;
	mov	x0, x21	//, _23
	bl	_ZdaPv		//
// bitmapdecoding.cpp:82: }
	mov	x0, x19	//, <retval>
	ldp	x19, x20, [sp, 16]	//,,
	ldp	x21, x22, [sp, 32]	//,,
	ldp	x29, x30, [sp], 64	//,,,
	.cfi_remember_state
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 21
	.cfi_restore 22
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
	ret	
	.p2align 2
.L2212:
	.cfi_restore_state
// bitmapdecoding.cpp:71:     return nullptr;
	mov	x19, 0	// <retval>,
// bitmapdecoding.cpp:82: }
	mov	x0, x19	//, <retval>
	ldp	x19, x20, [sp, 16]	//,,
	ldp	x21, x22, [sp, 32]	//,,
	ldp	x29, x30, [sp], 64	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 21
	.cfi_restore 22
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE1936:
	.size	_Z12build_bitmapPKccPm, .-_Z12build_bitmapPKccPm
	.align	2
	.p2align 3,,7
	.global	_Z13basic_decoderPjRjjm
	.type	_Z13basic_decoderPjRjjm, %function
_Z13basic_decoderPjRjjm:
.LFB1937:
	.cfi_startproc
// bitmapdecoding.cpp:86:   while (bits != 0) {
	cbz	x3, .L2221	// bits,
	ldr	w4, [x1]	//, *base_15(D)
	.p2align 3
.L2224:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x3	// tmp102, bits
	clz	x5, x5	// tmp102, tmp102
// bitmapdecoding.cpp:87:     base_ptr[base] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w5, w2, w5	// tmp105, idx, tmp102
// bitmapdecoding.cpp:87:     base_ptr[base] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w5, [x0, w4, uxtw 2]	// tmp105, *_5
// bitmapdecoding.cpp:88:     bits = bits & (bits - 1);
	sub	x4, x3, #1	// _7, bits,
// bitmapdecoding.cpp:86:   while (bits != 0) {
	ands	x3, x3, x4	// bits, bits, _7
// bitmapdecoding.cpp:89:     base++;
	ldr	w4, [x1]	//, *base_15(D)
	add	w4, w4, 1	// _9, *base_15(D),
	str	w4, [x1]	// _9, *base_15(D)
// bitmapdecoding.cpp:86:   while (bits != 0) {
	bne	.L2224		//,
.L2221:
// bitmapdecoding.cpp:91: }
	ret	
	.cfi_endproc
.LFE1937:
	.size	_Z13basic_decoderPjRjjm, .-_Z13basic_decoderPjRjjm
	.align	2
	.p2align 3,,7
	.global	_Z16simdjson_decoderPjRjjm
	.type	_Z16simdjson_decoderPjRjjm, %function
_Z16simdjson_decoderPjRjjm:
.LFB1938:
	.cfi_startproc
// bitmapdecoding.cpp:44:   return __builtin_popcountll(input_num);
	fmov	d0, x3	// tmp220, bits
// bitmapdecoding.cpp:96:   uint32_t next_base = base + cnt;
	ldr	w4, [x1]	//, *base_73(D)
// bitmapdecoding.cpp:44:   return __builtin_popcountll(input_num);
	cnt	v0.8b, v0.8b	// tmp170, tmp220
	addv	b0, v0.8b	// tmp172, tmp170
	umov	w7, v0.b[0]	// tmp171, tmp172,
// bitmapdecoding.cpp:96:   uint32_t next_base = base + cnt;
	add	w7, w4, w7, uxtb	// next_base, _66, tmp171
// bitmapdecoding.cpp:97:   while (bits != 0u) {
	cbz	x3, .L2230	// bits,
	.p2align 3
.L2229:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x3	// tmp173, bits
	clz	x5, x5	// tmp173, tmp173
// bitmapdecoding.cpp:98:     base_ptr[base + 0] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w5, w2, w5	// tmp176, idx, tmp173
// bitmapdecoding.cpp:98:     base_ptr[base + 0] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w5, [x0, w4, uxtw 2]	// tmp176, *_6
// bitmapdecoding.cpp:99:     bits = bits & (bits - 1);
	sub	x4, x3, #1	// _8, bits,
// bitmapdecoding.cpp:100:     base_ptr[base + 1] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	ldr	w5, [x1]	//, *base_73(D)
// bitmapdecoding.cpp:99:     bits = bits & (bits - 1);
	and	x3, x4, x3	// bits, _8, bits
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x3	// tmp177, bits
// bitmapdecoding.cpp:101:     bits = bits & (bits - 1);
	sub	x4, x3, #1	// _16, bits,
// bitmapdecoding.cpp:100:     base_ptr[base + 1] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w5, w5, 1	// tmp180, *base_73(D),
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x8, x8	// tmp177, tmp177
// bitmapdecoding.cpp:100:     base_ptr[base + 1] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w8, w2, w8	// tmp182, idx, tmp177
// bitmapdecoding.cpp:101:     bits = bits & (bits - 1);
	and	x4, x4, x3	// bits, _16, bits
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x4	// tmp183, bits
// bitmapdecoding.cpp:103:     bits = bits & (bits - 1);
	sub	x3, x4, #1	// _24, bits,
// bitmapdecoding.cpp:100:     base_ptr[base + 1] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w8, [x0, x5, lsl 2]	// tmp182, *_14
// bitmapdecoding.cpp:103:     bits = bits & (bits - 1);
	and	x4, x3, x4	// bits, _24, bits
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp183, tmp183
// bitmapdecoding.cpp:105:     bits = bits & (bits - 1);
	sub	x3, x4, #1	// _32, bits,
// bitmapdecoding.cpp:102:     base_ptr[base + 2] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	ldr	w5, [x1]	//, *base_73(D)
// bitmapdecoding.cpp:102:     base_ptr[base + 2] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w6, w2, w6	// tmp188, idx, tmp183
// bitmapdecoding.cpp:105:     bits = bits & (bits - 1);
	and	x3, x3, x4	// bits, _32, bits
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x11, x4	// tmp189, bits
// bitmapdecoding.cpp:102:     base_ptr[base + 2] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w5, w5, 2	// tmp186, *base_73(D),
// bitmapdecoding.cpp:107:     bits = bits & (bits - 1);
	sub	x4, x3, #1	// _40, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x9, x3	// tmp195, bits
// bitmapdecoding.cpp:107:     bits = bits & (bits - 1);
	and	x3, x4, x3	// bits, _40, bits
// bitmapdecoding.cpp:109:     bits = bits & (bits - 1);
	sub	x4, x3, #1	// _48, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x8, x3	// tmp201, bits
// bitmapdecoding.cpp:102:     base_ptr[base + 2] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w6, [x0, x5, lsl 2]	// tmp188, *_22
// bitmapdecoding.cpp:109:     bits = bits & (bits - 1);
	and	x4, x4, x3	// bits, _48, bits
// bitmapdecoding.cpp:111:     bits = bits & (bits - 1);
	sub	x3, x4, #1	// _56, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x11, x11	// tmp189, tmp189
// bitmapdecoding.cpp:104:     base_ptr[base + 3] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	ldr	w10, [x1]	//, *base_73(D)
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x6, x4	// tmp207, bits
// bitmapdecoding.cpp:104:     base_ptr[base + 3] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w11, w2, w11	// tmp194, idx, tmp189
// bitmapdecoding.cpp:111:     bits = bits & (bits - 1);
	and	x4, x3, x4	// bits, _56, bits
// bitmapdecoding.cpp:104:     base_ptr[base + 3] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w10, w10, 3	// tmp192, *base_73(D),
// bitmapdecoding.cpp:113:     bits = bits & (bits - 1);
	sub	x3, x4, #1	// _64, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x4	// tmp213, bits
// bitmapdecoding.cpp:97:   while (bits != 0u) {
	ands	x3, x3, x4	// bits, _64, bits
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x9, x9	// tmp195, tmp195
	clz	x8, x8	// tmp201, tmp201
// bitmapdecoding.cpp:104:     base_ptr[base + 3] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w11, [x0, x10, lsl 2]	// tmp194, *_30
// bitmapdecoding.cpp:106:     base_ptr[base + 4] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w9, w2, w9	// tmp200, idx, tmp195
// bitmapdecoding.cpp:108:     base_ptr[base + 5] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w8, w2, w8	// tmp206, idx, tmp201
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x6, x6	// tmp207, tmp207
// bitmapdecoding.cpp:106:     base_ptr[base + 4] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	ldr	w4, [x1]	//, *base_73(D)
// bitmapdecoding.cpp:110:     base_ptr[base + 6] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w6, w2, w6	// tmp212, idx, tmp207
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x5, x5	// tmp213, tmp213
// bitmapdecoding.cpp:106:     base_ptr[base + 4] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w4, w4, 4	// tmp198, *base_73(D),
// bitmapdecoding.cpp:112:     base_ptr[base + 7] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w5, w2, w5	// tmp218, idx, tmp213
// bitmapdecoding.cpp:106:     base_ptr[base + 4] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w9, [x0, x4, lsl 2]	// tmp200, *_38
// bitmapdecoding.cpp:108:     base_ptr[base + 5] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	ldr	w4, [x1]	//, *base_73(D)
// bitmapdecoding.cpp:108:     base_ptr[base + 5] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w4, w4, 5	// tmp204, *base_73(D),
// bitmapdecoding.cpp:108:     base_ptr[base + 5] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w8, [x0, x4, lsl 2]	// tmp206, *_46
// bitmapdecoding.cpp:110:     base_ptr[base + 6] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	ldr	w4, [x1]	//, *base_73(D)
// bitmapdecoding.cpp:110:     base_ptr[base + 6] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w4, w4, 6	// tmp210, *base_73(D),
// bitmapdecoding.cpp:110:     base_ptr[base + 6] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w6, [x0, x4, lsl 2]	// tmp212, *_54
// bitmapdecoding.cpp:112:     base_ptr[base + 7] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	ldr	w4, [x1]	//, *base_73(D)
// bitmapdecoding.cpp:112:     base_ptr[base + 7] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w4, w4, 7	// tmp216, *base_73(D),
// bitmapdecoding.cpp:112:     base_ptr[base + 7] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w5, [x0, x4, lsl 2]	// tmp218, *_62
// bitmapdecoding.cpp:114:     base += 8;
	ldr	w4, [x1]	//, *base_73(D)
	add	w4, w4, 8	// _66, *base_73(D),
	str	w4, [x1]	// _66, *base_73(D)
// bitmapdecoding.cpp:97:   while (bits != 0u) {
	bne	.L2229		//,
.L2230:
// bitmapdecoding.cpp:116:   base = next_base;
	str	w7, [x1]	// next_base, *base_73(D)
// bitmapdecoding.cpp:117: }
	ret	
	.cfi_endproc
.LFE1938:
	.size	_Z16simdjson_decoderPjRjjm, .-_Z16simdjson_decoderPjRjjm
	.align	2
	.p2align 3,,7
	.global	_Z14faster_decoderPjRjjm
	.type	_Z14faster_decoderPjRjjm, %function
_Z14faster_decoderPjRjjm:
.LFB1939:
	.cfi_startproc
// bitmapdecoding.cpp:121:   if (bits != 0u) {
	cbz	x3, .L2236	// bits,
	b	_Z14faster_decoderPjRjjm.part.15		//
	.p2align 2
.L2236:
// bitmapdecoding.cpp:168: }
	ret	
	.cfi_endproc
.LFE1939:
	.size	_Z14faster_decoderPjRjjm, .-_Z14faster_decoderPjRjjm
	.align	2
	.p2align 3,,7
	.global	_Z8init_bufP5buf_sm
	.type	_Z8init_bufP5buf_sm, %function
_Z8init_bufP5buf_sm:
.LFB1944:
	.cfi_startproc
	stp	x29, x30, [sp, -48]!	//,,,
	.cfi_def_cfa_offset 48
	.cfi_offset 29, -48
	.cfi_offset 30, -40
	mov	x29, sp	//,
	stp	x21, x22, [sp, 32]	//,,
	.cfi_offset 21, -16
	.cfi_offset 22, -8
	mov	x21, x0	// b, b
	mov	x22, x1	// capacity, capacity
// bitmapdecoding.cpp:334:   b->buffer = new lead_t *[65];
	mov	x0, 520	//,
// bitmapdecoding.cpp:333:   b->matches = 0;
	str	wzr, [x21]	//, b_13(D)->matches
// bitmapdecoding.cpp:334:   b->buffer = new lead_t *[65];
	bl	_Znam		//
// bitmapdecoding.cpp:334:   b->buffer = new lead_t *[65];
	str	x0, [x21, 8]	//, b_13(D)->buffer
// bitmapdecoding.cpp:335:   b->initbuffer = new lead_t *[65];
	mov	x0, 520	//,
	bl	_Znam		//
// bitmapdecoding.cpp:335:   b->initbuffer = new lead_t *[65];
	str	x0, [x21, 16]	//, b_13(D)->initbuffer
	stp	x19, x20, [sp, 16]	//,,
	.cfi_offset 20, -24
	.cfi_offset 19, -32
// bitmapdecoding.cpp:337:     b->buffer[i] = new lead_t[capacity];
	mov	x0, 576460752303423487	// tmp109,
	cmp	x22, x0	// capacity, tmp109
	bhi	.L2245		//,
// bitmapdecoding.cpp:337:     b->buffer[i] = new lead_t[capacity];
	ldr	x19, [x21, 8]	// _30, b_13(D)->buffer
// bitmapdecoding.cpp:337:     b->buffer[i] = new lead_t[capacity];
	lsl	x22, x22, 4	// iftmp.16_29, capacity,
	mov	x0, x22	//, iftmp.16_29
	bl	_Znam		//
// bitmapdecoding.cpp:338:     b->initbuffer[i] = b->buffer[i];
	ldr	x20, [x21, 8]	// _5, b_13(D)->buffer
// bitmapdecoding.cpp:337:     b->buffer[i] = new lead_t[capacity];
	str	x0, [x19, 8]	//, MEM[(struct lead_t * *)_30 + 8B]
// bitmapdecoding.cpp:338:     b->initbuffer[i] = b->buffer[i];
	ldr	x0, [x21, 16]	// b_13(D)->initbuffer, b_13(D)->initbuffer
	mov	x19, 16	// ivtmp.1115,
// bitmapdecoding.cpp:338:     b->initbuffer[i] = b->buffer[i];
	ldr	x1, [x20, 8]	// _46, MEM[(struct lead_t * *)_42 + 8B]
// bitmapdecoding.cpp:338:     b->initbuffer[i] = b->buffer[i];
	str	x1, [x0, 8]	// _46, MEM[(struct lead_t * *)_44 + 8B]
	.p2align 3
.L2242:
// bitmapdecoding.cpp:337:     b->buffer[i] = new lead_t[capacity];
	mov	x0, x22	//, iftmp.16_29
	bl	_Znam		//
// bitmapdecoding.cpp:337:     b->buffer[i] = new lead_t[capacity];
	str	x0, [x20, x19]	//, *_4
// bitmapdecoding.cpp:338:     b->initbuffer[i] = b->buffer[i];
	ldp	x20, x0, [x21, 8]	// _5, b_13(D)->initbuffer, b_13(D)->buffer
// bitmapdecoding.cpp:338:     b->initbuffer[i] = b->buffer[i];
	ldr	x1, [x20, x19]	// _9, *_6
// bitmapdecoding.cpp:338:     b->initbuffer[i] = b->buffer[i];
	str	x1, [x0, x19]	// _9, *_8
	add	x19, x19, 8	// ivtmp.1115, ivtmp.1115,
// bitmapdecoding.cpp:336:   for (int i = 1; i <= 64; i++) {
	cmp	x19, 520	// ivtmp.1115,
	bne	.L2242		//,
	ldp	x19, x20, [sp, 16]	//,,
	.cfi_remember_state
	.cfi_restore 20
	.cfi_restore 19
// bitmapdecoding.cpp:340: }
	ldp	x21, x22, [sp, 32]	//,,
	ldp	x29, x30, [sp], 48	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 21
	.cfi_restore 22
	.cfi_def_cfa_offset 0
	ret	
.L2245:
	.cfi_restore_state
// bitmapdecoding.cpp:337:     b->buffer[i] = new lead_t[capacity];
	bl	__cxa_throw_bad_array_new_length		//
	.cfi_endproc
.LFE1944:
	.size	_Z8init_bufP5buf_sm, .-_Z8init_bufP5buf_sm
	.align	2
	.p2align 3,,7
	.global	_Z9reset_bufP5buf_s
	.type	_Z9reset_bufP5buf_s, %function
_Z9reset_bufP5buf_s:
.LFB1945:
	.cfi_startproc
// bitmapdecoding.cpp:344:     b->buffer[i] = b->initbuffer[i];
	ldp	x3, x2, [x0, 8]	// _5, _1, b_11(D)->buffer
// bitmapdecoding.cpp:344:     b->buffer[i] = b->initbuffer[i];
	mov	x1, 8	// ivtmp.1129,
// bitmapdecoding.cpp:342:   b->matches = 0;
	str	wzr, [x0]	//, b_11(D)->matches
	.p2align 3
.L2247:
// bitmapdecoding.cpp:344:     b->buffer[i] = b->initbuffer[i];
	ldr	x0, [x2, x1]	// _7, MEM[base: _1, index: ivtmp.1129_9, offset: 0B]
// bitmapdecoding.cpp:344:     b->buffer[i] = b->initbuffer[i];
	str	x0, [x3, x1]	// _7, MEM[base: _5, index: ivtmp.1129_9, offset: 0B]
	add	x1, x1, 8	// ivtmp.1129, ivtmp.1129,
// bitmapdecoding.cpp:343:   for (int i = 1; i <= 64; i++) {
	cmp	x1, 520	// ivtmp.1129,
	bne	.L2247		//,
// bitmapdecoding.cpp:346: }
	ret	
	.cfi_endproc
.LFE1945:
	.size	_Z9reset_bufP5buf_s, .-_Z9reset_bufP5buf_s
	.align	2
	.p2align 3,,7
	.global	_Z11destroy_bufP5buf_s
	.type	_Z11destroy_bufP5buf_s, %function
_Z11destroy_bufP5buf_s:
.LFB1946:
	.cfi_startproc
	stp	x29, x30, [sp, -32]!	//,,,
	.cfi_def_cfa_offset 32
	.cfi_offset 29, -32
	.cfi_offset 30, -24
	mov	x29, sp	//,
	stp	x19, x20, [sp, 16]	//,,
	.cfi_offset 19, -16
	.cfi_offset 20, -8
// bitmapdecoding.cpp:348: void destroy_buf(buf_t *b) {
	mov	x20, x0	// b, b
	mov	x19, 8	// ivtmp.1137,
	.p2align 3
.L2251:
// bitmapdecoding.cpp:350:     delete[] b->initbuffer[i];
	ldr	x0, [x20, 16]	// b_14(D)->initbuffer, b_14(D)->initbuffer
	ldr	x1, [x0, x19]	// _5, *_4
	add	x19, x19, 8	// ivtmp.1137, ivtmp.1137,
	mov	x0, x1	//, _5
// bitmapdecoding.cpp:350:     delete[] b->initbuffer[i];
	cbz	x1, .L2250	// _5,
// bitmapdecoding.cpp:350:     delete[] b->initbuffer[i];
	bl	_ZdaPv		//
.L2250:
// bitmapdecoding.cpp:349:   for (int i = 1; i <= 64; i++) {
	cmp	x19, 520	// ivtmp.1137,
	bne	.L2251		//,
// bitmapdecoding.cpp:352:   delete[] b->buffer;
	ldr	x0, [x20, 8]	// _6, b_14(D)->buffer
// bitmapdecoding.cpp:352:   delete[] b->buffer;
	cbz	x0, .L2252	// _6,
// bitmapdecoding.cpp:352:   delete[] b->buffer;
	bl	_ZdaPv		//
.L2252:
// bitmapdecoding.cpp:353:   delete[] b->initbuffer;
	ldr	x0, [x20, 16]	// _7, b_14(D)->initbuffer
// bitmapdecoding.cpp:353:   delete[] b->initbuffer;
	cbz	x0, .L2249	// _7,
// bitmapdecoding.cpp:354: }
	ldp	x19, x20, [sp, 16]	//,,
	ldp	x29, x30, [sp], 32	//,,,
	.cfi_remember_state
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
// bitmapdecoding.cpp:353:   delete[] b->initbuffer;
	b	_ZdaPv		//
.L2249:
	.cfi_restore_state
// bitmapdecoding.cpp:354: }
	ldp	x19, x20, [sp, 16]	//,,
	ldp	x29, x30, [sp], 32	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE1946:
	.size	_Z11destroy_bufP5buf_s, .-_Z11destroy_bufP5buf_s
	.section	.text._ZN11LinuxEventsILi0EED2Ev,"axG",@progbits,_ZN11LinuxEventsILi0EED5Ev,comdat
	.align	2
	.p2align 3,,7
	.weak	_ZN11LinuxEventsILi0EED2Ev
	.type	_ZN11LinuxEventsILi0EED2Ev, %function
_ZN11LinuxEventsILi0EED2Ev:
.LFB2306:
	.cfi_startproc
	.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
	.cfi_lsda 0x1b,.LLSDA2306
	stp	x29, x30, [sp, -32]!	//,,,
	.cfi_def_cfa_offset 32
	.cfi_offset 29, -32
	.cfi_offset 30, -24
	mov	x29, sp	//,
	str	x19, [sp, 16]	//,
	.cfi_offset 19, -16
// linux-perf-events.h:59:   ~LinuxEvents() { close(fd); }
	mov	x19, x0	// this, this
// linux-perf-events.h:59:   ~LinuxEvents() { close(fd); }
	ldr	w0, [x0]	//, this_3(D)->fd
	bl	close		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [x19, 152]	// _7, MEM[(struct vector *)this_3(D) + 152B].D.42087._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L2263	// _7,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2263:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [x19, 128]	// _6, MEM[(struct vector *)this_3(D) + 128B].D.42087._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L2262	// _6,
// linux-perf-events.h:59:   ~LinuxEvents() { close(fd); }
	ldr	x19, [sp, 16]	//,
	ldp	x29, x30, [sp], 32	//,,,
	.cfi_remember_state
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 19
	.cfi_def_cfa_offset 0
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	b	_ZdlPv		//
	.p2align 2
.L2262:
	.cfi_restore_state
// linux-perf-events.h:59:   ~LinuxEvents() { close(fd); }
	ldr	x19, [sp, 16]	//,
	ldp	x29, x30, [sp], 32	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE2306:
	.section	.gcc_except_table
.LLSDA2306:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE2306-.LLSDACSB2306
.LLSDACSB2306:
.LLSDACSE2306:
	.section	.text._ZN11LinuxEventsILi0EED2Ev,"axG",@progbits,_ZN11LinuxEventsILi0EED5Ev,comdat
	.size	_ZN11LinuxEventsILi0EED2Ev, .-_ZN11LinuxEventsILi0EED2Ev
	.weak	_ZN11LinuxEventsILi0EED1Ev
	.set	_ZN11LinuxEventsILi0EED1Ev,_ZN11LinuxEventsILi0EED2Ev
	.section	.text._ZNSt6vectorIS_IySaIyEESaIS1_EED2Ev,"axG",@progbits,_ZNSt6vectorIS_IySaIyEESaIS1_EED5Ev,comdat
	.align	2
	.p2align 3,,7
	.weak	_ZNSt6vectorIS_IySaIyEESaIS1_EED2Ev
	.type	_ZNSt6vectorIS_IySaIyEESaIS1_EED2Ev, %function
_ZNSt6vectorIS_IySaIyEESaIS1_EED2Ev:
.LFB2312:
	.cfi_startproc
	stp	x29, x30, [sp, -48]!	//,,,
	.cfi_def_cfa_offset 48
	.cfi_offset 29, -48
	.cfi_offset 30, -40
	mov	x29, sp	//,
	stp	x19, x20, [sp, 16]	//,,
	.cfi_offset 19, -32
	.cfi_offset 20, -24
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldp	x19, x20, [x0]	// __first, prephitmp_7, this_4(D)->D.44829._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x19, x20	// __first, prephitmp_7
	beq	.L2270		//,
	str	x21, [sp, 32]	//,
	.cfi_offset 21, -16
	mov	x21, x0	// this, this
	.p2align 3
.L2272:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x1, [x19]	// _8, MEM[base: __first_19, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	add	x19, x19, 24	// __first, __first,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _8
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x1, .L2271	// _8,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2271:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x20, x19	// prephitmp_7, __first
	bne	.L2272		//,
	ldr	x20, [x21]	// prephitmp_7, MEM[(struct _Vector_base *)this_4(D)]._M_impl._M_start
	ldr	x21, [sp, 32]	//,
	.cfi_restore 21
.L2270:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x20, .L2269	// prephitmp_7,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x20	//, prephitmp_7
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:570:       }
	ldp	x19, x20, [sp, 16]	//,,
	ldp	x29, x30, [sp], 48	//,,,
	.cfi_remember_state
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	b	_ZdlPv		//
	.p2align 2
.L2269:
	.cfi_restore_state
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:570:       }
	ldp	x19, x20, [sp, 16]	//,,
	ldp	x29, x30, [sp], 48	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE2312:
	.size	_ZNSt6vectorIS_IySaIyEESaIS1_EED2Ev, .-_ZNSt6vectorIS_IySaIyEESaIS1_EED2Ev
	.weak	_ZNSt6vectorIS_IySaIyEESaIS1_EED1Ev
	.set	_ZNSt6vectorIS_IySaIyEESaIS1_EED1Ev,_ZNSt6vectorIS_IySaIyEESaIS1_EED2Ev
	.section	.text._ZNSt6vectorIS_IySaIyEESaIS1_EEC2ERKS3_,"axG",@progbits,_ZNSt6vectorIS_IySaIyEESaIS1_EEC5ERKS3_,comdat
	.align	2
	.p2align 3,,7
	.weak	_ZNSt6vectorIS_IySaIyEESaIS1_EEC2ERKS3_
	.type	_ZNSt6vectorIS_IySaIyEESaIS1_EEC2ERKS3_, %function
_ZNSt6vectorIS_IySaIyEESaIS1_EEC2ERKS3_:
.LFB2320:
	.cfi_startproc
	.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
	.cfi_lsda 0x1b,.LLSDA2320
	stp	x29, x30, [sp, -80]!	//,,,
	.cfi_def_cfa_offset 80
	.cfi_offset 29, -80
	.cfi_offset 30, -72
	mov	x29, sp	//,
	stp	x21, x22, [sp, 32]	//,,
	.cfi_offset 21, -48
	.cfi_offset 22, -40
	mov	x21, x1	// __x, __x
	mov	x22, x0	// this, this
	stp	x19, x20, [sp, 16]	//,,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	mov	x1, -6148914691236517206	// tmp127,
	movk	x1, 0xaaab, lsl 0	// tmp127,,
	.cfi_offset 19, -64
	.cfi_offset 20, -56
	ldp	x0, x19, [x21]	// MEM[(struct vector * *)__x_4(D)], MEM[(struct vector * *)__x_4(D) + 8B], MEM[(struct vector * *)__x_4(D)]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:458:       vector(const vector& __x)
	stp	x23, x24, [sp, 48]	//,,
	.cfi_offset 23, -32
	.cfi_offset 24, -24
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x23, 0	// __first,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [x22]	//,, MEM[(struct _Vector_impl *)this_2(D)]._M_start
	str	xzr, [x22, 16]	//, MEM[(struct _Vector_impl *)this_2(D)]._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x19, x19, x0	// _13, MEM[(struct vector * *)__x_4(D) + 8B], MEM[(struct vector * *)__x_4(D)]
	asr	x0, x19, 3	// tmp125, _13,
	mul	x0, x0, x1	// tmp126, tmp125, tmp127
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	cbz	x0, .L2281	// tmp126,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	mov	x1, -6148914691236517206	// tmp128,
	movk	x1, 0xaaa, lsl 48	// tmp128,,
	cmp	x0, x1	// tmp126, tmp128
	bhi	.L2308		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x19	//, _13
.LEHB3:
	bl	_Znwm		//
.LEHE3:
	mov	x23, x0	// __first,
.L2281:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	add	x19, x23, x19	// tmp130, __first, _13
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:312: 	this->_M_impl._M_finish = this->_M_impl._M_start;
	stp	x23, x23, [x22]	// __first, __first, MEM[(struct _Vector_base *)this_2(D)]._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	str	x19, [x22, 16]	// tmp130, MEM[(struct _Vector_base *)this_2(D)]._M_impl._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:463: 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
	ldp	x20, x24, [x21]	// _11, _12, MEM[(struct vector * *)__x_4(D)]
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	cmp	x20, x24	// _11, _12
	beq	.L2296		//,
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:79: 	  _ForwardIterator __cur = __result;
	mov	x19, x23	// __cur, __first
	str	x25, [sp, 64]	//,
	.cfi_offset 25, -16
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	mov	x25, 2305843009213693951	// tmp143,
	.p2align 3
.L2289:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldp	x0, x21, [x20]	// MEM[base: _101, offset: 0B], MEM[base: _101, offset: 8B], MEM[base: _101, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [x19]	//,, MEM[base: __cur_28, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x3, 0	// _64,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	str	xzr, [x19, 16]	//, MEM[base: __cur_28, offset: 16B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x21, x21, x0	// _51, MEM[base: _101, offset: 8B], MEM[base: _101, offset: 0B]
	asr	x0, x21, 3	// tmp133, _51,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	cbz	x0, .L2285	// tmp133,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	cmp	x0, x25	// tmp133, tmp143
	bhi	.L2309		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x21	//, _51
.LEHB4:
	bl	_Znwm		//
	mov	x3, x0	// _64,
.L2285:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	add	x21, x3, x21	// tmp136, _64, _51
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:312: 	this->_M_impl._M_finish = this->_M_impl._M_start;
	stp	x3, x3, [x19]	// _64, _64, MEM[base: __cur_28, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	str	x21, [x19, 16]	// tmp136, MEM[base: __cur_28, offset: 16B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:463: 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
	ldp	x1, x21, [x20]	// _57, _58, MEM[base: _101, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	cmp	x1, x21	// _57, _58
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:366: 	  const ptrdiff_t _Num = __last - __first;
	sub	x21, x21, x1	// _59, _58, _57
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	beq	.L2288		//,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:368: 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
	mov	x0, x3	//, _64
	mov	x2, x21	//, _59
	bl	memmove		//
	mov	x3, x0	// _64,
.L2288:
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:369: 	  return __result + _Num;
	add	x3, x3, x21	// tmp137, _64, _59
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:462: 	this->_M_impl._M_finish =
	str	x3, [x19, 8]	// tmp137, MEM[base: __cur_28, offset: 8B]
	add	x20, x20, 24	// ivtmp.1151, ivtmp.1151,
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	add	x19, x19, 24	// __cur, __cur,
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	cmp	x24, x20	// _12, ivtmp.1151
	bne	.L2289		//,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:466:       }
	ldp	x23, x24, [sp, 48]	//,,
	ldr	x25, [sp, 64]	//,
	.cfi_restore 25
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:462: 	this->_M_impl._M_finish =
	str	x19, [x22, 8]	// __cur, this_2(D)->D.44829._M_impl._M_finish
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:466:       }
	ldp	x19, x20, [sp, 16]	//,,
	ldp	x21, x22, [sp, 32]	//,,
	ldp	x29, x30, [sp], 80	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 23
	.cfi_restore 24
	.cfi_restore 21
	.cfi_restore 22
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
	ret	
	.p2align 2
.L2296:
	.cfi_def_cfa_offset 80
	.cfi_offset 19, -64
	.cfi_offset 20, -56
	.cfi_offset 21, -48
	.cfi_offset 22, -40
	.cfi_offset 23, -32
	.cfi_offset 24, -24
	.cfi_offset 29, -80
	.cfi_offset 30, -72
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:79: 	  _ForwardIterator __cur = __result;
	mov	x19, x23	// __cur, __first
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:466:       }
	ldp	x23, x24, [sp, 48]	//,,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:462: 	this->_M_impl._M_finish =
	str	x19, [x22, 8]	// __cur, this_2(D)->D.44829._M_impl._M_finish
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:466:       }
	ldp	x19, x20, [sp, 16]	//,,
	ldp	x21, x22, [sp, 32]	//,,
	ldp	x29, x30, [sp], 80	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 23
	.cfi_restore 24
	.cfi_restore 21
	.cfi_restore 22
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
	ret	
.L2309:
	.cfi_def_cfa_offset 80
	.cfi_offset 19, -64
	.cfi_offset 20, -56
	.cfi_offset 21, -48
	.cfi_offset 22, -40
	.cfi_offset 23, -32
	.cfi_offset 24, -24
	.cfi_offset 25, -16
	.cfi_offset 29, -80
	.cfi_offset 30, -72
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:102: 	  std::__throw_bad_alloc();
	bl	_ZSt17__throw_bad_allocv		//
.LEHE4:
.L2308:
	.cfi_restore 25
	str	x25, [sp, 64]	//,
	.cfi_offset 25, -16
.LEHB5:
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:102: 	  std::__throw_bad_alloc();
	bl	_ZSt17__throw_bad_allocv		//
.LEHE5:
.L2298:
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:86: 	  __catch(...)
	bl	__cxa_begin_catch		//
.L2293:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x19, x23	// __cur, __first
	bne	.L2310		//,
.LEHB6:
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:89: 	      __throw_exception_again;
	bl	__cxa_rethrow		//
.LEHE6:
.L2310:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [x23]	// _44, MEM[base: __first_43, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L2292	// _44,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2292:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	add	x23, x23, 24	// __first, __first,
	b	.L2293		//
.L2297:
	mov	x19, x0	// tmp140,
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:86: 	  __catch(...)
	bl	__cxa_end_catch		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:285: 	_M_deallocate(_M_impl._M_start,
	ldr	x0, [x22]	// _17, MEM[(struct _Vector_base *)this_2(D)]._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L2295	// _17,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2295:
	mov	x0, x19	//, tmp140
.LEHB7:
	bl	_Unwind_Resume		//
.LEHE7:
	.cfi_endproc
.LFE2320:
	.section	.gcc_except_table
	.align	2
.LLSDA2320:
	.byte	0xff
	.byte	0x9b
	.uleb128 .LLSDATT2320-.LLSDATTD2320
.LLSDATTD2320:
	.byte	0x1
	.uleb128 .LLSDACSE2320-.LLSDACSB2320
.LLSDACSB2320:
	.uleb128 .LEHB3-.LFB2320
	.uleb128 .LEHE3-.LEHB3
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB4-.LFB2320
	.uleb128 .LEHE4-.LEHB4
	.uleb128 .L2298-.LFB2320
	.uleb128 0x1
	.uleb128 .LEHB5-.LFB2320
	.uleb128 .LEHE5-.LEHB5
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB6-.LFB2320
	.uleb128 .LEHE6-.LEHB6
	.uleb128 .L2297-.LFB2320
	.uleb128 0
	.uleb128 .LEHB7-.LFB2320
	.uleb128 .LEHE7-.LEHB7
	.uleb128 0
	.uleb128 0
.LLSDACSE2320:
	.byte	0x1
	.byte	0
	.align	2
	.4byte	0

.LLSDATT2320:
	.section	.text._ZNSt6vectorIS_IySaIyEESaIS1_EEC2ERKS3_,"axG",@progbits,_ZNSt6vectorIS_IySaIyEESaIS1_EEC5ERKS3_,comdat
	.size	_ZNSt6vectorIS_IySaIyEESaIS1_EEC2ERKS3_, .-_ZNSt6vectorIS_IySaIyEESaIS1_EEC2ERKS3_
	.weak	_ZNSt6vectorIS_IySaIyEESaIS1_EEC1ERKS3_
	.set	_ZNSt6vectorIS_IySaIyEESaIS1_EEC1ERKS3_,_ZNSt6vectorIS_IySaIyEESaIS1_EEC2ERKS3_
	.section	.text._Z4unitIXadL_Z16simdjson_decoderPjRjjmEEEbv,"axG",@progbits,_Z4unitIXadL_Z16simdjson_decoderPjRjjmEEEbv,comdat
	.align	2
	.p2align 3,,7
	.weak	_Z4unitIXadL_Z16simdjson_decoderPjRjjmEEEbv
	.type	_Z4unitIXadL_Z16simdjson_decoderPjRjjmEEEbv, %function
_Z4unitIXadL_Z16simdjson_decoderPjRjjmEEEbv:
.LFB2324:
	.cfi_startproc
	sub	sp, sp, #576	//,,
	.cfi_def_cfa_offset 576
	mov	w13, 0	// prephitmp_80,
// bitmapdecoding.cpp:264:   for (size_t i = 0; i < 64; i++) {
	mov	x14, 0	// i,
// bitmapdecoding.cpp:266:     x <<= i;
	mov	x15, 1	// tmp130,
// bitmapdecoding.cpp:261: template <void (*F)(uint32_t *, uint32_t &, uint32_t, uint64_t)> bool unit() {
	stp	x29, x30, [sp]	//,,
	.cfi_offset 29, -576
	.cfi_offset 30, -568
	mov	x29, sp	//,
	stp	x19, x20, [sp, 16]	//,,
	.cfi_offset 19, -560
	.cfi_offset 20, -552
	add	x19, sp, 64	// tmp171,,
.L2321:
// bitmapdecoding.cpp:266:     x <<= i;
	lsl	x12, x15, x14	// ivtmp.1176, tmp130, i
	add	x0, sp, 320	// tmp175,,
	mov	w2, 0	//,
	mov	x3, x12	//, ivtmp.1176
	add	x1, sp, 60	// tmp174,,
// bitmapdecoding.cpp:267:     uint32_t matches = 0;
	str	wzr, [sp, 60]	//, matches
	bl	_Z14faster_decoderPjRjjm.part.15		//
// bitmapdecoding.cpp:269:     uint32_t refmatches = 0;
	mov	w0, 0	// refmatches,
	b	.L2313		//
	.p2align 2
.L2341:
	rbit	x13, x12	// prephitmp_80, ivtmp.1176
	clz	x13, x13	// prephitmp_80, prephitmp_80
.L2313:
// bitmapdecoding.cpp:87:     base_ptr[base] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w13, [x19, w0, uxtw 2]	// prephitmp_80, *_53
// bitmapdecoding.cpp:88:     bits = bits & (bits - 1);
	sub	x1, x12, #1	// _55, ivtmp.1176,
// bitmapdecoding.cpp:89:     base++;
	add	w0, w0, 1	// refmatches, refmatches,
// bitmapdecoding.cpp:86:   while (bits != 0) {
	ands	x12, x12, x1	// ivtmp.1176, ivtmp.1176, _55
	bne	.L2341		//,
// bitmapdecoding.cpp:271:     if (refmatches != matches) {
	ldr	w1, [sp, 60]	//, matches
// bitmapdecoding.cpp:271:     if (refmatches != matches) {
	cmp	w1, w0	// matches.120_2, refmatches
	bne	.L2317		//,
// bitmapdecoding.cpp:275:     for (size_t k = 0; k < matches; k++)
	uxtw	x2, w0	// _97, refmatches
	cbz	w0, .L2316	// refmatches,
// bitmapdecoding.cpp:276:       if (decoded[k] != refdecoded[k]) {
	ldr	w0, [sp, 64]	//, refdecoded
	ldr	w1, [sp, 320]	//, decoded
	cmp	w1, w0	// decoded, refdecoded
	bne	.L2317		//,
	sub	x2, x2, #1	// _15, _97,
	b	.L2318		//
	.p2align 2
.L2319:
// bitmapdecoding.cpp:276:       if (decoded[k] != refdecoded[k]) {
	ldr	w1, [x0, 4]	//, MEM[symbol: decoded, index: ivtmp.1176_57, step: 4, offset: 4B]
// bitmapdecoding.cpp:276:       if (decoded[k] != refdecoded[k]) {
	ldr	w0, [x19, x12, lsl 2]	//, MEM[symbol: refdecoded, index: ivtmp.1176_50, step: 4, offset: 0B]
	cmp	w1, w0	// _4, MEM[symbol: refdecoded, index: ivtmp.1176_50, step: 4, offset: 0B]
	bne	.L2317		//,
.L2318:
// bitmapdecoding.cpp:276:       if (decoded[k] != refdecoded[k]) {
	add	x0, sp, 320	// tmp176,,
// bitmapdecoding.cpp:275:     for (size_t k = 0; k < matches; k++)
	cmp	x2, x12	// _15, ivtmp.1176
// bitmapdecoding.cpp:276:       if (decoded[k] != refdecoded[k]) {
	add	x0, x0, x12, lsl 2	// tmp142, tmp176, ivtmp.1176,
	add	x12, x12, 1	// ivtmp.1176, ivtmp.1176,
// bitmapdecoding.cpp:275:     for (size_t k = 0; k < matches; k++)
	bne	.L2319		//,
.L2316:
// bitmapdecoding.cpp:264:   for (size_t i = 0; i < 64; i++) {
	add	x14, x14, 1	// i, i,
// bitmapdecoding.cpp:264:   for (size_t i = 0; i < 64; i++) {
	cmp	x14, 64	// i,
	beq	.L2328		//,
	lsl	x13, x15, x14	// tmp147, tmp130, i
	rbit	x13, x13	// prephitmp_80, tmp147
	clz	x13, x13	// prephitmp_80, prephitmp_80
	b	.L2321		//
	.p2align 2
.L2317:
// bitmapdecoding.cpp:272:       printf("bug\n");
	adrp	x0, .LC0	// tmp138,
	add	x0, x0, :lo12:.LC0	//, tmp138,
	bl	puts		//
// bitmapdecoding.cpp:273:       return false;
	mov	w0, 0	// _16,
.L2315:
// bitmapdecoding.cpp:302: }
	ldp	x29, x30, [sp]	//,,
	ldp	x19, x20, [sp, 16]	//,,
	add	sp, sp, 576	//,,
	.cfi_remember_state
	.cfi_restore 29
	.cfi_restore 30
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
	ret	
.L2328:
	.cfi_restore_state
	mov	x20, 16960	// ivtmp_18,
	stp	x21, x22, [sp, 32]	//,,
	.cfi_offset 22, -536
	.cfi_offset 21, -544
	movk	x20, 0xf, lsl 16	// ivtmp_18,,
	mov	x21, -4	// tmp173,
.L2320:
// bitmapdecoding.cpp:282:     uint64_t x = rand();
	bl	rand		//
// bitmapdecoding.cpp:283:     x <<= 32;
	lsl	x22, x0, 32	// x,,
// bitmapdecoding.cpp:284:     x |= rand();
	bl	rand		//
// bitmapdecoding.cpp:285:     uint32_t matches = 0;
	str	wzr, [sp, 60]	//, matches
// bitmapdecoding.cpp:284:     x |= rand();
	sxtw	x0, w0	// _35,
// bitmapdecoding.cpp:284:     x |= rand();
	orr	x22, x0, x22	// ivtmp.1164, _35, x
// bitmapdecoding.cpp:121:   if (bits != 0u) {
	cbz	x22, .L2322	// ivtmp.1164,
	add	x0, sp, 320	// tmp178,,
	mov	x3, x22	//, ivtmp.1164
	mov	w2, 0	//,
	add	x1, sp, 60	// tmp177,,
	bl	_Z14faster_decoderPjRjjm.part.15		//
	mov	w0, 0	// refmatches,
	.p2align 3
.L2323:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x1, x22	// tmp153, ivtmp.1164
	clz	x1, x1	// tmp153, tmp153
// bitmapdecoding.cpp:87:     base_ptr[base] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w1, [x19, w0, uxtw 2]	// tmp153, *_64
// bitmapdecoding.cpp:88:     bits = bits & (bits - 1);
	sub	x1, x22, #1	// _65, ivtmp.1164,
// bitmapdecoding.cpp:89:     base++;
	add	w0, w0, 1	// refmatches, refmatches,
// bitmapdecoding.cpp:86:   while (bits != 0) {
	ands	x22, x22, x1	// ivtmp.1164, ivtmp.1164, _65
	bne	.L2323		//,
// bitmapdecoding.cpp:289:     if (refmatches != matches) {
	ldr	w1, [sp, 60]	//, matches
// bitmapdecoding.cpp:289:     if (refmatches != matches) {
	cmp	w1, w0	// matches.123_8, refmatches
	bne	.L2325		//,
// bitmapdecoding.cpp:293:     for (size_t k = 0; k < matches; k++) {
	cbz	w0, .L2322	// refmatches,
// bitmapdecoding.cpp:294:       if (decoded[k] != refdecoded[k]) {
	ldr	w1, [sp, 64]	//, refdecoded
	ldr	w2, [sp, 320]	//, decoded
	cmp	w2, w1	// decoded, refdecoded
	bne	.L2325		//,
	add	x0, x21, x0, uxtw 2	// _70, tmp173, refmatches,
	b	.L2326		//
	.p2align 2
.L2327:
// bitmapdecoding.cpp:294:       if (decoded[k] != refdecoded[k]) {
	ldr	w2, [x1, 4]	//, MEM[symbol: decoded, index: ivtmp.1164_90, offset: 4B]
// bitmapdecoding.cpp:294:       if (decoded[k] != refdecoded[k]) {
	ldr	w1, [x19, x22]	//, MEM[symbol: refdecoded, index: ivtmp.1164_77, offset: 0B]
	cmp	w2, w1	// _10, MEM[symbol: refdecoded, index: ivtmp.1164_77, offset: 0B]
	bne	.L2325		//,
.L2326:
// bitmapdecoding.cpp:294:       if (decoded[k] != refdecoded[k]) {
	add	x1, sp, 320	// tmp179,,
// bitmapdecoding.cpp:293:     for (size_t k = 0; k < matches; k++) {
	cmp	x0, x22	// _70, ivtmp.1164
// bitmapdecoding.cpp:294:       if (decoded[k] != refdecoded[k]) {
	add	x1, x1, x22	// tmp164, tmp179, ivtmp.1164
	add	x22, x22, 4	// ivtmp.1164, ivtmp.1164,
// bitmapdecoding.cpp:293:     for (size_t k = 0; k < matches; k++) {
	bne	.L2327		//,
.L2322:
// bitmapdecoding.cpp:281:   for (size_t i = 0; i < 1000000; i++) {
	subs	x20, x20, #1	// ivtmp_18, ivtmp_18,
	bne	.L2320		//,
// bitmapdecoding.cpp:300:   printf("Tests passed.\n");
	adrp	x0, .LC1	// tmp168,
	add	x0, x0, :lo12:.LC1	//, tmp168,
	bl	puts		//
// bitmapdecoding.cpp:301:   return true;
	mov	w0, 1	// _16,
	ldp	x21, x22, [sp, 32]	//,,
	.cfi_remember_state
	.cfi_restore 22
	.cfi_restore 21
	b	.L2315		//
	.p2align 2
.L2325:
	.cfi_restore_state
// bitmapdecoding.cpp:290:       printf("bug\n");
	adrp	x0, .LC0	// tmp158,
	add	x0, x0, :lo12:.LC0	//, tmp158,
	bl	puts		//
// bitmapdecoding.cpp:291:       return false;
	mov	w0, 0	// _16,
	ldp	x21, x22, [sp, 32]	//,,
	.cfi_restore 22
	.cfi_restore 21
	b	.L2315		//
	.cfi_endproc
.LFE2324:
	.size	_Z4unitIXadL_Z16simdjson_decoderPjRjjmEEEbv, .-_Z4unitIXadL_Z16simdjson_decoderPjRjjmEEEbv
	.section	.text._Z4unitIXadL_Z13basic_decoderPjRjjmEEEbv,"axG",@progbits,_Z4unitIXadL_Z13basic_decoderPjRjjmEEEbv,comdat
	.align	2
	.p2align 3,,7
	.weak	_Z4unitIXadL_Z13basic_decoderPjRjjmEEEbv
	.type	_Z4unitIXadL_Z13basic_decoderPjRjjmEEEbv, %function
_Z4unitIXadL_Z13basic_decoderPjRjjmEEEbv:
.LFB2326:
	.cfi_startproc
	sub	sp, sp, #576	//,,
	.cfi_def_cfa_offset 576
	mov	w13, 0	// prephitmp_80,
// bitmapdecoding.cpp:264:   for (size_t i = 0; i < 64; i++) {
	mov	x14, 0	// i,
// bitmapdecoding.cpp:266:     x <<= i;
	mov	x15, 1	// tmp130,
// bitmapdecoding.cpp:261: template <void (*F)(uint32_t *, uint32_t &, uint32_t, uint64_t)> bool unit() {
	stp	x29, x30, [sp]	//,,
	.cfi_offset 29, -576
	.cfi_offset 30, -568
	mov	x29, sp	//,
	stp	x19, x20, [sp, 16]	//,,
	.cfi_offset 19, -560
	.cfi_offset 20, -552
	add	x19, sp, 64	// tmp171,,
.L2352:
// bitmapdecoding.cpp:266:     x <<= i;
	lsl	x12, x15, x14	// ivtmp.1223, tmp130, i
	add	x0, sp, 320	// tmp175,,
	mov	w2, 0	//,
	mov	x3, x12	//, ivtmp.1223
	add	x1, sp, 60	// tmp174,,
// bitmapdecoding.cpp:267:     uint32_t matches = 0;
	str	wzr, [sp, 60]	//, matches
	bl	_Z14faster_decoderPjRjjm.part.15		//
// bitmapdecoding.cpp:269:     uint32_t refmatches = 0;
	mov	w0, 0	// refmatches,
	b	.L2344		//
	.p2align 2
.L2372:
	rbit	x13, x12	// prephitmp_80, ivtmp.1223
	clz	x13, x13	// prephitmp_80, prephitmp_80
.L2344:
// bitmapdecoding.cpp:87:     base_ptr[base] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w13, [x19, w0, uxtw 2]	// prephitmp_80, *_53
// bitmapdecoding.cpp:88:     bits = bits & (bits - 1);
	sub	x1, x12, #1	// _55, ivtmp.1223,
// bitmapdecoding.cpp:89:     base++;
	add	w0, w0, 1	// refmatches, refmatches,
// bitmapdecoding.cpp:86:   while (bits != 0) {
	ands	x12, x12, x1	// ivtmp.1223, ivtmp.1223, _55
	bne	.L2372		//,
// bitmapdecoding.cpp:271:     if (refmatches != matches) {
	ldr	w1, [sp, 60]	//, matches
// bitmapdecoding.cpp:271:     if (refmatches != matches) {
	cmp	w1, w0	// matches.141_2, refmatches
	bne	.L2348		//,
// bitmapdecoding.cpp:275:     for (size_t k = 0; k < matches; k++)
	uxtw	x2, w0	// _97, refmatches
	cbz	w0, .L2347	// refmatches,
// bitmapdecoding.cpp:276:       if (decoded[k] != refdecoded[k]) {
	ldr	w0, [sp, 64]	//, refdecoded
	ldr	w1, [sp, 320]	//, decoded
	cmp	w1, w0	// decoded, refdecoded
	bne	.L2348		//,
	sub	x2, x2, #1	// _15, _97,
	b	.L2349		//
	.p2align 2
.L2350:
// bitmapdecoding.cpp:276:       if (decoded[k] != refdecoded[k]) {
	ldr	w1, [x0, 4]	//, MEM[symbol: decoded, index: ivtmp.1223_57, step: 4, offset: 4B]
// bitmapdecoding.cpp:276:       if (decoded[k] != refdecoded[k]) {
	ldr	w0, [x19, x12, lsl 2]	//, MEM[symbol: refdecoded, index: ivtmp.1223_50, step: 4, offset: 0B]
	cmp	w1, w0	// _4, MEM[symbol: refdecoded, index: ivtmp.1223_50, step: 4, offset: 0B]
	bne	.L2348		//,
.L2349:
// bitmapdecoding.cpp:276:       if (decoded[k] != refdecoded[k]) {
	add	x0, sp, 320	// tmp176,,
// bitmapdecoding.cpp:275:     for (size_t k = 0; k < matches; k++)
	cmp	x2, x12	// _15, ivtmp.1223
// bitmapdecoding.cpp:276:       if (decoded[k] != refdecoded[k]) {
	add	x0, x0, x12, lsl 2	// tmp142, tmp176, ivtmp.1223,
	add	x12, x12, 1	// ivtmp.1223, ivtmp.1223,
// bitmapdecoding.cpp:275:     for (size_t k = 0; k < matches; k++)
	bne	.L2350		//,
.L2347:
// bitmapdecoding.cpp:264:   for (size_t i = 0; i < 64; i++) {
	add	x14, x14, 1	// i, i,
// bitmapdecoding.cpp:264:   for (size_t i = 0; i < 64; i++) {
	cmp	x14, 64	// i,
	beq	.L2359		//,
	lsl	x13, x15, x14	// tmp147, tmp130, i
	rbit	x13, x13	// prephitmp_80, tmp147
	clz	x13, x13	// prephitmp_80, prephitmp_80
	b	.L2352		//
	.p2align 2
.L2348:
// bitmapdecoding.cpp:272:       printf("bug\n");
	adrp	x0, .LC0	// tmp138,
	add	x0, x0, :lo12:.LC0	//, tmp138,
	bl	puts		//
// bitmapdecoding.cpp:273:       return false;
	mov	w0, 0	// _16,
.L2346:
// bitmapdecoding.cpp:302: }
	ldp	x29, x30, [sp]	//,,
	ldp	x19, x20, [sp, 16]	//,,
	add	sp, sp, 576	//,,
	.cfi_remember_state
	.cfi_restore 29
	.cfi_restore 30
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
	ret	
.L2359:
	.cfi_restore_state
	mov	x20, 16960	// ivtmp_18,
	stp	x21, x22, [sp, 32]	//,,
	.cfi_offset 22, -536
	.cfi_offset 21, -544
	movk	x20, 0xf, lsl 16	// ivtmp_18,,
	mov	x21, -4	// tmp173,
.L2351:
// bitmapdecoding.cpp:282:     uint64_t x = rand();
	bl	rand		//
// bitmapdecoding.cpp:283:     x <<= 32;
	lsl	x22, x0, 32	// x,,
// bitmapdecoding.cpp:284:     x |= rand();
	bl	rand		//
// bitmapdecoding.cpp:285:     uint32_t matches = 0;
	str	wzr, [sp, 60]	//, matches
// bitmapdecoding.cpp:284:     x |= rand();
	sxtw	x0, w0	// _35,
// bitmapdecoding.cpp:284:     x |= rand();
	orr	x22, x0, x22	// ivtmp.1211, _35, x
// bitmapdecoding.cpp:121:   if (bits != 0u) {
	cbz	x22, .L2353	// ivtmp.1211,
	add	x0, sp, 320	// tmp178,,
	mov	x3, x22	//, ivtmp.1211
	mov	w2, 0	//,
	add	x1, sp, 60	// tmp177,,
	bl	_Z14faster_decoderPjRjjm.part.15		//
	mov	w0, 0	// refmatches,
	.p2align 3
.L2354:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x1, x22	// tmp153, ivtmp.1211
	clz	x1, x1	// tmp153, tmp153
// bitmapdecoding.cpp:87:     base_ptr[base] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w1, [x19, w0, uxtw 2]	// tmp153, *_64
// bitmapdecoding.cpp:88:     bits = bits & (bits - 1);
	sub	x1, x22, #1	// _65, ivtmp.1211,
// bitmapdecoding.cpp:89:     base++;
	add	w0, w0, 1	// refmatches, refmatches,
// bitmapdecoding.cpp:86:   while (bits != 0) {
	ands	x22, x22, x1	// ivtmp.1211, ivtmp.1211, _65
	bne	.L2354		//,
// bitmapdecoding.cpp:289:     if (refmatches != matches) {
	ldr	w1, [sp, 60]	//, matches
// bitmapdecoding.cpp:289:     if (refmatches != matches) {
	cmp	w1, w0	// matches.144_8, refmatches
	bne	.L2356		//,
// bitmapdecoding.cpp:293:     for (size_t k = 0; k < matches; k++) {
	cbz	w0, .L2353	// refmatches,
// bitmapdecoding.cpp:294:       if (decoded[k] != refdecoded[k]) {
	ldr	w1, [sp, 64]	//, refdecoded
	ldr	w2, [sp, 320]	//, decoded
	cmp	w2, w1	// decoded, refdecoded
	bne	.L2356		//,
	add	x0, x21, x0, uxtw 2	// _70, tmp173, refmatches,
	b	.L2357		//
	.p2align 2
.L2358:
// bitmapdecoding.cpp:294:       if (decoded[k] != refdecoded[k]) {
	ldr	w2, [x1, 4]	//, MEM[symbol: decoded, index: ivtmp.1211_90, offset: 4B]
// bitmapdecoding.cpp:294:       if (decoded[k] != refdecoded[k]) {
	ldr	w1, [x19, x22]	//, MEM[symbol: refdecoded, index: ivtmp.1211_77, offset: 0B]
	cmp	w2, w1	// _10, MEM[symbol: refdecoded, index: ivtmp.1211_77, offset: 0B]
	bne	.L2356		//,
.L2357:
// bitmapdecoding.cpp:294:       if (decoded[k] != refdecoded[k]) {
	add	x1, sp, 320	// tmp179,,
// bitmapdecoding.cpp:293:     for (size_t k = 0; k < matches; k++) {
	cmp	x0, x22	// _70, ivtmp.1211
// bitmapdecoding.cpp:294:       if (decoded[k] != refdecoded[k]) {
	add	x1, x1, x22	// tmp164, tmp179, ivtmp.1211
	add	x22, x22, 4	// ivtmp.1211, ivtmp.1211,
// bitmapdecoding.cpp:293:     for (size_t k = 0; k < matches; k++) {
	bne	.L2358		//,
.L2353:
// bitmapdecoding.cpp:281:   for (size_t i = 0; i < 1000000; i++) {
	subs	x20, x20, #1	// ivtmp_18, ivtmp_18,
	bne	.L2351		//,
// bitmapdecoding.cpp:300:   printf("Tests passed.\n");
	adrp	x0, .LC1	// tmp168,
	add	x0, x0, :lo12:.LC1	//, tmp168,
	bl	puts		//
// bitmapdecoding.cpp:301:   return true;
	mov	w0, 1	// _16,
	ldp	x21, x22, [sp, 32]	//,,
	.cfi_remember_state
	.cfi_restore 22
	.cfi_restore 21
	b	.L2346		//
	.p2align 2
.L2356:
	.cfi_restore_state
// bitmapdecoding.cpp:290:       printf("bug\n");
	adrp	x0, .LC0	// tmp158,
	add	x0, x0, :lo12:.LC0	//, tmp158,
	bl	puts		//
// bitmapdecoding.cpp:291:       return false;
	mov	w0, 0	// _16,
	ldp	x21, x22, [sp, 32]	//,,
	.cfi_restore 22
	.cfi_restore 21
	b	.L2346		//
	.cfi_endproc
.LFE2326:
	.size	_Z4unitIXadL_Z13basic_decoderPjRjjmEEEbv, .-_Z4unitIXadL_Z13basic_decoderPjRjjmEEEbv
	.section	.text._Z4unitIXadL_Z14faster_decoderPjRjjmEEEbv,"axG",@progbits,_Z4unitIXadL_Z14faster_decoderPjRjjmEEEbv,comdat
	.align	2
	.p2align 3,,7
	.weak	_Z4unitIXadL_Z14faster_decoderPjRjjmEEEbv
	.type	_Z4unitIXadL_Z14faster_decoderPjRjjmEEEbv, %function
_Z4unitIXadL_Z14faster_decoderPjRjjmEEEbv:
.LFB2328:
	.cfi_startproc
	sub	sp, sp, #576	//,,
	.cfi_def_cfa_offset 576
	mov	w13, 0	// prephitmp_80,
// bitmapdecoding.cpp:264:   for (size_t i = 0; i < 64; i++) {
	mov	x14, 0	// i,
// bitmapdecoding.cpp:266:     x <<= i;
	mov	x15, 1	// tmp130,
// bitmapdecoding.cpp:261: template <void (*F)(uint32_t *, uint32_t &, uint32_t, uint64_t)> bool unit() {
	stp	x29, x30, [sp]	//,,
	.cfi_offset 29, -576
	.cfi_offset 30, -568
	mov	x29, sp	//,
	stp	x19, x20, [sp, 16]	//,,
	.cfi_offset 19, -560
	.cfi_offset 20, -552
	add	x19, sp, 64	// tmp171,,
.L2383:
// bitmapdecoding.cpp:266:     x <<= i;
	lsl	x12, x15, x14	// ivtmp.1270, tmp130, i
	add	x0, sp, 320	// tmp175,,
	mov	w2, 0	//,
	mov	x3, x12	//, ivtmp.1270
	add	x1, sp, 60	// tmp174,,
// bitmapdecoding.cpp:267:     uint32_t matches = 0;
	str	wzr, [sp, 60]	//, matches
	bl	_Z14faster_decoderPjRjjm.part.15		//
// bitmapdecoding.cpp:269:     uint32_t refmatches = 0;
	mov	w0, 0	// refmatches,
	b	.L2375		//
	.p2align 2
.L2403:
	rbit	x13, x12	// prephitmp_80, ivtmp.1270
	clz	x13, x13	// prephitmp_80, prephitmp_80
.L2375:
// bitmapdecoding.cpp:87:     base_ptr[base] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w13, [x19, w0, uxtw 2]	// prephitmp_80, *_53
// bitmapdecoding.cpp:88:     bits = bits & (bits - 1);
	sub	x1, x12, #1	// _55, ivtmp.1270,
// bitmapdecoding.cpp:89:     base++;
	add	w0, w0, 1	// refmatches, refmatches,
// bitmapdecoding.cpp:86:   while (bits != 0) {
	ands	x12, x12, x1	// ivtmp.1270, ivtmp.1270, _55
	bne	.L2403		//,
// bitmapdecoding.cpp:271:     if (refmatches != matches) {
	ldr	w1, [sp, 60]	//, matches
// bitmapdecoding.cpp:271:     if (refmatches != matches) {
	cmp	w1, w0	// matches.162_2, refmatches
	bne	.L2379		//,
// bitmapdecoding.cpp:275:     for (size_t k = 0; k < matches; k++)
	uxtw	x2, w0	// _97, refmatches
	cbz	w0, .L2378	// refmatches,
// bitmapdecoding.cpp:276:       if (decoded[k] != refdecoded[k]) {
	ldr	w0, [sp, 64]	//, refdecoded
	ldr	w1, [sp, 320]	//, decoded
	cmp	w1, w0	// decoded, refdecoded
	bne	.L2379		//,
	sub	x2, x2, #1	// _15, _97,
	b	.L2380		//
	.p2align 2
.L2381:
// bitmapdecoding.cpp:276:       if (decoded[k] != refdecoded[k]) {
	ldr	w1, [x0, 4]	//, MEM[symbol: decoded, index: ivtmp.1270_57, step: 4, offset: 4B]
// bitmapdecoding.cpp:276:       if (decoded[k] != refdecoded[k]) {
	ldr	w0, [x19, x12, lsl 2]	//, MEM[symbol: refdecoded, index: ivtmp.1270_50, step: 4, offset: 0B]
	cmp	w1, w0	// _4, MEM[symbol: refdecoded, index: ivtmp.1270_50, step: 4, offset: 0B]
	bne	.L2379		//,
.L2380:
// bitmapdecoding.cpp:276:       if (decoded[k] != refdecoded[k]) {
	add	x0, sp, 320	// tmp176,,
// bitmapdecoding.cpp:275:     for (size_t k = 0; k < matches; k++)
	cmp	x2, x12	// _15, ivtmp.1270
// bitmapdecoding.cpp:276:       if (decoded[k] != refdecoded[k]) {
	add	x0, x0, x12, lsl 2	// tmp142, tmp176, ivtmp.1270,
	add	x12, x12, 1	// ivtmp.1270, ivtmp.1270,
// bitmapdecoding.cpp:275:     for (size_t k = 0; k < matches; k++)
	bne	.L2381		//,
.L2378:
// bitmapdecoding.cpp:264:   for (size_t i = 0; i < 64; i++) {
	add	x14, x14, 1	// i, i,
// bitmapdecoding.cpp:264:   for (size_t i = 0; i < 64; i++) {
	cmp	x14, 64	// i,
	beq	.L2390		//,
	lsl	x13, x15, x14	// tmp147, tmp130, i
	rbit	x13, x13	// prephitmp_80, tmp147
	clz	x13, x13	// prephitmp_80, prephitmp_80
	b	.L2383		//
	.p2align 2
.L2379:
// bitmapdecoding.cpp:272:       printf("bug\n");
	adrp	x0, .LC0	// tmp138,
	add	x0, x0, :lo12:.LC0	//, tmp138,
	bl	puts		//
// bitmapdecoding.cpp:273:       return false;
	mov	w0, 0	// _16,
.L2377:
// bitmapdecoding.cpp:302: }
	ldp	x29, x30, [sp]	//,,
	ldp	x19, x20, [sp, 16]	//,,
	add	sp, sp, 576	//,,
	.cfi_remember_state
	.cfi_restore 29
	.cfi_restore 30
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
	ret	
.L2390:
	.cfi_restore_state
	mov	x20, 16960	// ivtmp_18,
	stp	x21, x22, [sp, 32]	//,,
	.cfi_offset 22, -536
	.cfi_offset 21, -544
	movk	x20, 0xf, lsl 16	// ivtmp_18,,
	mov	x21, -4	// tmp173,
.L2382:
// bitmapdecoding.cpp:282:     uint64_t x = rand();
	bl	rand		//
// bitmapdecoding.cpp:283:     x <<= 32;
	lsl	x22, x0, 32	// x,,
// bitmapdecoding.cpp:284:     x |= rand();
	bl	rand		//
// bitmapdecoding.cpp:285:     uint32_t matches = 0;
	str	wzr, [sp, 60]	//, matches
// bitmapdecoding.cpp:284:     x |= rand();
	sxtw	x0, w0	// _35,
// bitmapdecoding.cpp:284:     x |= rand();
	orr	x22, x0, x22	// ivtmp.1258, _35, x
// bitmapdecoding.cpp:121:   if (bits != 0u) {
	cbz	x22, .L2384	// ivtmp.1258,
	add	x0, sp, 320	// tmp178,,
	mov	x3, x22	//, ivtmp.1258
	mov	w2, 0	//,
	add	x1, sp, 60	// tmp177,,
	bl	_Z14faster_decoderPjRjjm.part.15		//
	mov	w0, 0	// refmatches,
	.p2align 3
.L2385:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x1, x22	// tmp153, ivtmp.1258
	clz	x1, x1	// tmp153, tmp153
// bitmapdecoding.cpp:87:     base_ptr[base] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w1, [x19, w0, uxtw 2]	// tmp153, *_64
// bitmapdecoding.cpp:88:     bits = bits & (bits - 1);
	sub	x1, x22, #1	// _65, ivtmp.1258,
// bitmapdecoding.cpp:89:     base++;
	add	w0, w0, 1	// refmatches, refmatches,
// bitmapdecoding.cpp:86:   while (bits != 0) {
	ands	x22, x22, x1	// ivtmp.1258, ivtmp.1258, _65
	bne	.L2385		//,
// bitmapdecoding.cpp:289:     if (refmatches != matches) {
	ldr	w1, [sp, 60]	//, matches
// bitmapdecoding.cpp:289:     if (refmatches != matches) {
	cmp	w1, w0	// matches.165_8, refmatches
	bne	.L2387		//,
// bitmapdecoding.cpp:293:     for (size_t k = 0; k < matches; k++) {
	cbz	w0, .L2384	// refmatches,
// bitmapdecoding.cpp:294:       if (decoded[k] != refdecoded[k]) {
	ldr	w1, [sp, 64]	//, refdecoded
	ldr	w2, [sp, 320]	//, decoded
	cmp	w2, w1	// decoded, refdecoded
	bne	.L2387		//,
	add	x0, x21, x0, uxtw 2	// _70, tmp173, refmatches,
	b	.L2388		//
	.p2align 2
.L2389:
// bitmapdecoding.cpp:294:       if (decoded[k] != refdecoded[k]) {
	ldr	w2, [x1, 4]	//, MEM[symbol: decoded, index: ivtmp.1258_90, offset: 4B]
// bitmapdecoding.cpp:294:       if (decoded[k] != refdecoded[k]) {
	ldr	w1, [x19, x22]	//, MEM[symbol: refdecoded, index: ivtmp.1258_77, offset: 0B]
	cmp	w2, w1	// _10, MEM[symbol: refdecoded, index: ivtmp.1258_77, offset: 0B]
	bne	.L2387		//,
.L2388:
// bitmapdecoding.cpp:294:       if (decoded[k] != refdecoded[k]) {
	add	x1, sp, 320	// tmp179,,
// bitmapdecoding.cpp:293:     for (size_t k = 0; k < matches; k++) {
	cmp	x0, x22	// _70, ivtmp.1258
// bitmapdecoding.cpp:294:       if (decoded[k] != refdecoded[k]) {
	add	x1, x1, x22	// tmp164, tmp179, ivtmp.1258
	add	x22, x22, 4	// ivtmp.1258, ivtmp.1258,
// bitmapdecoding.cpp:293:     for (size_t k = 0; k < matches; k++) {
	bne	.L2389		//,
.L2384:
// bitmapdecoding.cpp:281:   for (size_t i = 0; i < 1000000; i++) {
	subs	x20, x20, #1	// ivtmp_18, ivtmp_18,
	bne	.L2382		//,
// bitmapdecoding.cpp:300:   printf("Tests passed.\n");
	adrp	x0, .LC1	// tmp168,
	add	x0, x0, :lo12:.LC1	//, tmp168,
	bl	puts		//
// bitmapdecoding.cpp:301:   return true;
	mov	w0, 1	// _16,
	ldp	x21, x22, [sp, 32]	//,,
	.cfi_remember_state
	.cfi_restore 22
	.cfi_restore 21
	b	.L2377		//
	.p2align 2
.L2387:
	.cfi_restore_state
// bitmapdecoding.cpp:290:       printf("bug\n");
	adrp	x0, .LC0	// tmp158,
	add	x0, x0, :lo12:.LC0	//, tmp158,
	bl	puts		//
// bitmapdecoding.cpp:291:       return false;
	mov	w0, 0	// _16,
	ldp	x21, x22, [sp, 32]	//,,
	.cfi_restore 22
	.cfi_restore 21
	b	.L2377		//
	.cfi_endproc
.LFE2328:
	.size	_Z4unitIXadL_Z14faster_decoderPjRjjmEEEbv, .-_Z4unitIXadL_Z14faster_decoderPjRjjmEEEbv
	.section	.text._ZNSt6vectorIySaIyEE17_M_default_appendEm,"axG",@progbits,_ZNSt6vectorIySaIyEE17_M_default_appendEm,comdat
	.align	2
	.p2align 3,,7
	.weak	_ZNSt6vectorIySaIyEE17_M_default_appendEm
	.type	_ZNSt6vectorIySaIyEE17_M_default_appendEm, %function
_ZNSt6vectorIySaIyEE17_M_default_appendEm:
.LFB2542:
	.cfi_startproc
// /usr/local/include/c++/8.3.0/bits/vector.tcc:583:       if (__n != 0)
	cbz	x1, .L2424	// __n,
// /usr/local/include/c++/8.3.0/bits/vector.tcc:587: 					 - this->_M_impl._M_finish);
	ldp	x3, x2, [x0, 8]	// _36, this_19(D)->D.43930._M_impl._M_end_of_storage, MEM[(long long unsigned int * *)this_19(D) + 8B]
	sub	x2, x2, x3	// tmp121, this_19(D)->D.43930._M_impl._M_end_of_storage, _36
// /usr/local/include/c++/8.3.0/bits/vector.tcc:592: 	  if (__navail >= __n)
	cmp	x1, x2, asr 3	// __n, tmp121,
	bhi	.L2406		//,
	mov	x2, 0	// ivtmp.1299,
	.p2align 3
.L2407:
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:754: 	*__first = __tmp;
	str	xzr, [x3, x2, lsl 3]	//, MEM[base: _36, index: ivtmp.1299_71, step: 8, offset: 0B]
	add	x2, x2, 1	// ivtmp.1299, ivtmp.1299,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:753: 	   __niter > 0; --__niter, (void) ++__first)
	cmp	x1, x2	// __n, ivtmp.1299
	bne	.L2407		//,
// /usr/local/include/c++/8.3.0/bits/vector.tcc:595: 	      this->_M_impl._M_finish =
	add	x1, x3, x1, lsl 3	// __first, _36, __n,
	str	x1, [x0, 8]	// __first, this_19(D)->D.43930._M_impl._M_finish
	ret	
	.p2align 2
.L2424:
	ret	
	.p2align 2
.L2406:
// /usr/local/include/c++/8.3.0/bits/vector.tcc:580:     vector<_Tp, _Alloc>::
	stp	x29, x30, [sp, -80]!	//,,,
	.cfi_def_cfa_offset 80
	.cfi_offset 29, -80
	.cfi_offset 30, -72
// /usr/local/include/c++/8.3.0/bits/vector.tcc:589: 	  if (__size > max_size() || __navail > max_size() - __size)
	mov	x2, 2305843009213693951	// tmp130,
// /usr/local/include/c++/8.3.0/bits/vector.tcc:580:     vector<_Tp, _Alloc>::
	mov	x29, sp	//,
	stp	x19, x20, [sp, 16]	//,,
	.cfi_offset 19, -64
	.cfi_offset 20, -56
	mov	x19, x1	// __n, __n
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldr	x1, [x0]	// MEM[(long long unsigned int * *)this_19(D)], MEM[(long long unsigned int * *)this_19(D)]
// /usr/local/include/c++/8.3.0/bits/vector.tcc:580:     vector<_Tp, _Alloc>::
	stp	x21, x22, [sp, 32]	//,,
	.cfi_offset 21, -48
	.cfi_offset 22, -40
	mov	x22, x0	// this, this
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x20, x3, x1	// _31, _36, MEM[(long long unsigned int * *)this_19(D)]
// /usr/local/include/c++/8.3.0/bits/vector.tcc:580:     vector<_Tp, _Alloc>::
	stp	x23, x24, [sp, 48]	//,,
	.cfi_offset 23, -32
	.cfi_offset 24, -24
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	asr	x23, x20, 3	// _24, _31,
	str	x25, [sp, 64]	//,
	.cfi_offset 25, -16
// /usr/local/include/c++/8.3.0/bits/vector.tcc:589: 	  if (__size > max_size() || __navail > max_size() - __size)
	sub	x0, x2, x23	// tmp129, tmp130, _24
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1642: 	if (max_size() - size() < __n)
	cmp	x0, x19	// tmp129, __n
	bcc	.L2426		//,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1645: 	const size_type __len = size() + std::max(size(), __n);
	cmp	x19, x23	// __n, _24
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1646: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	mov	x24, -8	// prephitmp_17,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1645: 	const size_type __len = size() + std::max(size(), __n);
	csel	x0, x19, x23, cs	// tmp133, __n, _24,
	add	x0, x0, x23	// __len, tmp133, _24
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1646: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	cmp	x23, x0	// _24, __len
	bhi	.L2409		//,
	cmp	x0, x2	// __len, tmp130
	csel	x0, x0, x2, ls	// tmp134, __len, tmp130,
	lsl	x24, x0, 3	// prephitmp_17, tmp134,
.L2409:
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x24	//, prephitmp_17
	bl	_Znwm		//
	mov	x25, x0	// _53,
// /usr/local/include/c++/8.3.0/bits/vector.tcc:608: 		  std::__uninitialized_default_n_a(__new_start + __size,
	add	x1, x0, x20	// _6, _53, _31
	mov	x21, 0	// ivtmp.1307,
	.p2align 3
.L2410:
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:754: 	*__first = __tmp;
	str	xzr, [x1, x21, lsl 3]	//, MEM[base: _6, index: ivtmp.1307_27, step: 8, offset: 0B]
	add	x21, x21, 1	// ivtmp.1307, ivtmp.1307,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:753: 	   __niter > 0; --__niter, (void) ++__first)
	cmp	x19, x21	// __n, ivtmp.1307
	bne	.L2410		//,
// /usr/local/include/c++/8.3.0/bits/vector.tcc:611: 		  std::__uninitialized_move_if_noexcept_a(
	ldp	x19, x2, [x22]	// _7, _8, this_19(D)->D.43930._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	cmp	x19, x2	// _7, _8
	beq	.L2411		//,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:368: 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
	sub	x2, x2, x19	//, _8, _7
	mov	x1, x19	//, _7
	mov	x0, x25	//, _53
	bl	memmove		//
.L2412:
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x19	//, _7
	bl	_ZdlPv		//
.L2413:
// /usr/local/include/c++/8.3.0/bits/vector.tcc:630: 	      this->_M_impl._M_finish = __new_start + __size + __n;
	add	x21, x23, x21	// tmp139, _24, ivtmp.1307
// /usr/local/include/c++/8.3.0/bits/vector.tcc:631: 	      this->_M_impl._M_end_of_storage = __new_start + __len;
	add	x0, x25, x24	// tmp142, _53, prephitmp_17
// /usr/local/include/c++/8.3.0/bits/vector.tcc:634:     }
	ldp	x19, x20, [sp, 16]	//,,
// /usr/local/include/c++/8.3.0/bits/vector.tcc:630: 	      this->_M_impl._M_finish = __new_start + __size + __n;
	add	x21, x25, x21, lsl 3	// tmp141, _53, tmp139,
// /usr/local/include/c++/8.3.0/bits/vector.tcc:634:     }
	ldp	x23, x24, [sp, 48]	//,,
// /usr/local/include/c++/8.3.0/bits/vector.tcc:630: 	      this->_M_impl._M_finish = __new_start + __size + __n;
	stp	x25, x21, [x22]	// _53, tmp141, this_19(D)->D.43930._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/vector.tcc:631: 	      this->_M_impl._M_end_of_storage = __new_start + __len;
	str	x0, [x22, 16]	// tmp142, this_19(D)->D.43930._M_impl._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/vector.tcc:634:     }
	ldp	x21, x22, [sp, 32]	//,,
	ldr	x25, [sp, 64]	//,
	.cfi_remember_state
	.cfi_restore 25
	ldp	x29, x30, [sp], 80	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 23
	.cfi_restore 24
	.cfi_restore 21
	.cfi_restore 22
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
	ret	
	.p2align 2
.L2411:
	.cfi_restore_state
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x19, .L2413	// _7,
	b	.L2412		//
.L2426:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1643: 	  __throw_length_error(__N(__s));
	adrp	x0, .LC5	// tmp132,
	add	x0, x0, :lo12:.LC5	//, tmp132,
	bl	_ZSt20__throw_length_errorPKc		//
	.cfi_endproc
.LFE2542:
	.size	_ZNSt6vectorIySaIyEE17_M_default_appendEm, .-_ZNSt6vectorIySaIyEE17_M_default_appendEm
	.section	.text._ZNSt6vectorIS_IySaIyEESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,"axG",@progbits,_ZNSt6vectorIS_IySaIyEESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,comdat
	.align	2
	.p2align 3,,7
	.weak	_ZNSt6vectorIS_IySaIyEESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.type	_ZNSt6vectorIS_IySaIyEESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_, %function
_ZNSt6vectorIS_IySaIyEESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:
.LFB2549:
	.cfi_startproc
	.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
	.cfi_lsda 0x1b,.LLSDA2549
	stp	x29, x30, [sp, -112]!	//,,,
	.cfi_def_cfa_offset 112
	.cfi_offset 29, -112
	.cfi_offset 30, -104
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	mov	x3, -6148914691236517206	// tmp162,
	movk	x3, 0xaaab, lsl 0	// tmp162,,
// /usr/local/include/c++/8.3.0/bits/vector.tcc:413:       vector<_Tp, _Alloc>::
	mov	x29, sp	//,
	stp	x19, x20, [sp, 16]	//,,
	.cfi_offset 19, -96
	.cfi_offset 20, -88
	mov	x19, x1	// __position, __position
	stp	x21, x22, [sp, 32]	//,,
	.cfi_offset 21, -80
	.cfi_offset 22, -72
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1642: 	if (max_size() - size() < __n)
	ldp	x21, x20, [x0]	// _100, _101, MEM[(struct vector * *)this_10(D)]
// /usr/local/include/c++/8.3.0/bits/vector.tcc:413:       vector<_Tp, _Alloc>::
	stp	x23, x24, [sp, 48]	//,,
	.cfi_offset 23, -64
	.cfi_offset 24, -56
	mov	x24, x0	// this, this
	stp	x25, x26, [sp, 64]	//,,
	.cfi_offset 25, -48
	.cfi_offset 26, -40
	mov	x25, x2	// __args#0, __args#0
	str	x27, [sp, 80]	//,
	.cfi_offset 27, -32
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x0, x20, x21	// tmp159, _101, _100
	sub	x27, x1, x21	// _110, __position, _100
	asr	x0, x0, 3	// tmp160, tmp159,
	mul	x0, x0, x3	// tmp161, tmp160, tmp162
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:224:       if (__a < __b)
	cbz	x0, .L2450	// tmp161,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1645: 	const size_type __len = size() + std::max(size(), __n);
	lsl	x22, x0, 1	// __len, tmp161,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1646: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	cmp	x0, x22	// tmp161, __len
	bls	.L2471		//,
	mov	x22, -6148914691236517206	// __len,
	mov	x0, -16	// prephitmp_16,
	movk	x22, 0xaaa, lsl 48	// __len,,
.L2429:
.LEHB8:
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	bl	_Znwm		//
.LEHE8:
	mov	x23, x0	// _98,
.L2430:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:460: 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
	ldp	x1, x0, [x25]	// prephitmp_50, pretmp_30, MEM[(long long unsigned int * *)__args#0_18(D)]
// /usr/local/include/c++/8.3.0/bits/vector.tcc:436: 	  _Alloc_traits::construct(this->_M_impl,
	add	x26, x23, x27	// _2, _98, _110
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	str	xzr, [x23, x27]	//, MEM[(struct _Vector_impl *)_2]._M_start
	stp	xzr, xzr, [x26, 8]	//,, MEM[(struct _Vector_impl *)_2]._M_finish
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x27, x0, x1	// _85, pretmp_30, prephitmp_50
	asr	x2, x27, 3	// tmp169, _85,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	cbz	x2, .L2472	// tmp169,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	mov	x0, 2305843009213693951	// tmp170,
	cmp	x2, x0	// tmp169, tmp170
	bhi	.L2473		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x27	//, _85
.LEHB9:
	bl	_Znwm		//
	mov	x3, x0	// _112,
	ldp	x1, x0, [x25]	// prephitmp_50, pretmp_30, MEM[(long long unsigned int * *)__args#0_18(D)]
	sub	x25, x0, x1	// _159, pretmp_30, prephitmp_50
.L2432:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	add	x27, x3, x27	// tmp172, _112, _85
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:312: 	this->_M_impl._M_finish = this->_M_impl._M_start;
	stp	x3, x3, [x26]	// _112, _112, MEM[(struct _Vector_base *)_2]._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	cmp	x0, x1	// pretmp_30, prephitmp_50
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	str	x27, [x26, 16]	// tmp172, MEM[(struct _Vector_base *)_2]._M_impl._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	beq	.L2434		//,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:368: 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
	mov	x0, x3	//, _112
	mov	x2, x25	//, _159
	bl	memmove		//
	mov	x3, x0	// _112,
.L2434:
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:369: 	  return __result + _Num;
	add	x3, x3, x25	// tmp173, _112, _159
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:462: 	this->_M_impl._M_finish =
	str	x3, [x26, 8]	// tmp173, _2->D.43930._M_impl._M_finish
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	cmp	x19, x21	// __position, _100
	beq	.L2454		//,
	mov	x1, x21	// ivtmp.1333, _100
	mov	x0, x23	// __cur, _98
	.p2align 3
.L2436:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:106: 	  _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [x0]	//,, MEM[base: __cur_123, offset: 0B]
	add	x1, x1, 24	// ivtmp.1333, ivtmp.1333,
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	add	x0, x0, 24	// __cur, __cur,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:106: 	  _M_start(), _M_finish(), _M_end_of_storage()
	str	xzr, [x0, -8]	//, MEM[base: __cur_123, offset: 16B]
// /usr/local/include/c++/8.3.0/bits/move.h:194:       __a = _GLIBCXX_MOVE(__b);
	ldr	x2, [x1, -24]	// _41, MEM[base: _148, offset: 0]
	str	x2, [x0, -24]	// _41, MEM[base: __cur_123, offset: 0]
// /usr/local/include/c++/8.3.0/bits/move.h:195:       __b = _GLIBCXX_MOVE(__tmp);
	str	xzr, [x1, -24]	//, MEM[base: _148, offset: 0]
// /usr/local/include/c++/8.3.0/bits/move.h:194:       __a = _GLIBCXX_MOVE(__b);
	ldr	x3, [x1, -16]	// _43, MEM[base: _148, offset: 8]
// /usr/local/include/c++/8.3.0/bits/move.h:193:       _Tp __tmp = _GLIBCXX_MOVE(__a);
	ldr	x2, [x0, -16]	// _42, MEM[base: __cur_123, offset: 8]
// /usr/local/include/c++/8.3.0/bits/move.h:194:       __a = _GLIBCXX_MOVE(__b);
	str	x3, [x0, -16]	// _43, MEM[base: __cur_123, offset: 8]
// /usr/local/include/c++/8.3.0/bits/move.h:195:       __b = _GLIBCXX_MOVE(__tmp);
	str	x2, [x1, -16]	// _42, MEM[base: _148, offset: 8]
// /usr/local/include/c++/8.3.0/bits/move.h:194:       __a = _GLIBCXX_MOVE(__b);
	ldr	x3, [x1, -8]	// _45, MEM[base: _148, offset: 16]
// /usr/local/include/c++/8.3.0/bits/move.h:193:       _Tp __tmp = _GLIBCXX_MOVE(__a);
	ldr	x2, [x0, -8]	// _44, MEM[base: __cur_123, offset: 16]
// /usr/local/include/c++/8.3.0/bits/move.h:194:       __a = _GLIBCXX_MOVE(__b);
	str	x3, [x0, -8]	// _45, MEM[base: __cur_123, offset: 16]
// /usr/local/include/c++/8.3.0/bits/move.h:195:       __b = _GLIBCXX_MOVE(__tmp);
	str	x2, [x1, -8]	// _44, MEM[base: _148, offset: 16]
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	cmp	x19, x1	// __position, ivtmp.1333
	bne	.L2436		//,
	sub	x25, x19, #24	// tmp174, __position,
	mov	x0, 43691	// tmp178,
	sub	x25, x25, x21	// tmp175, tmp174, _100
	movk	x0, 0xaaaa, lsl 16	// tmp178,,
	movk	x0, 0xaaaa, lsl 32	// tmp178,,
	lsr	x25, x25, 3	// tmp176, tmp175,
	movk	x0, 0xaaa, lsl 48	// tmp178,,
	mul	x25, x25, x0	// tmp177, tmp176, tmp178
	and	x25, x25, 2305843009213693951	// tmp179, tmp177,
	add	x25, x25, 1	// tmp180, tmp179,
	add	x25, x25, x25, lsl 1	// tmp183, tmp180, tmp180,
	add	x25, x23, x25, lsl 3	// __cur, _98, tmp183,
.L2435:
// /usr/local/include/c++/8.3.0/bits/vector.tcc:450: 	  ++__new_finish;
	add	x25, x25, 24	// __new_finish, __cur,
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	cmp	x19, x20	// __position, _101
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:79: 	  _ForwardIterator __cur = __result;
	mov	x1, x25	// __cur, __new_finish
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	mov	x0, x19	// ivtmp.1325, __position
	beq	.L2442		//,
	.p2align 3
.L2441:
// /usr/local/include/c++/8.3.0/bits/move.h:194:       __a = _GLIBCXX_MOVE(__b);
	ldp	x2, x3, [x0]	// MEM[base: _35, offset: 0], MEM[base: _35, offset: 8], MEM[base: _35, offset: 0]
	stp	x2, x3, [x1]	// MEM[base: _35, offset: 0], MEM[base: _35, offset: 8], MEM[base: __cur_172, offset: 0]
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	add	x1, x1, 24	// __cur, __cur,
// /usr/local/include/c++/8.3.0/bits/move.h:194:       __a = _GLIBCXX_MOVE(__b);
	ldr	x2, [x0, 16]	// MEM[base: _35, offset: 16], MEM[base: _35, offset: 16]
	str	x2, [x1, -8]	// MEM[base: _35, offset: 16], MEM[base: __cur_172, offset: 16]
// /usr/local/include/c++/8.3.0/bits/move.h:195:       __b = _GLIBCXX_MOVE(__tmp);
	stp	xzr, xzr, [x0]	//,, MEM[base: _35, offset: 0]
	add	x0, x0, 24	// ivtmp.1325, ivtmp.1325,
	str	xzr, [x0, -8]	//, MEM[base: _35, offset: 16]
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	cmp	x20, x0	// _101, ivtmp.1325
	bne	.L2441		//,
	sub	x0, x20, x19	// tmp188, _101, __position
	mov	x1, 43691	// tmp193,
	sub	x0, x0, #24	// tmp190, tmp188,
	movk	x1, 0xaaaa, lsl 16	// tmp193,,
	movk	x1, 0xaaaa, lsl 32	// tmp193,,
	lsr	x0, x0, 3	// tmp191, tmp190,
	movk	x1, 0xaaa, lsl 48	// tmp193,,
	mul	x0, x0, x1	// tmp192, tmp191, tmp193
	and	x0, x0, 2305843009213693951	// tmp194, tmp192,
	add	x0, x0, 1	// tmp195, tmp194,
	add	x0, x0, x0, lsl 1	// tmp198, tmp195, tmp195,
	add	x25, x25, x0, lsl 3	// __new_finish, __new_finish, tmp198,
.L2442:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x21, x20	// _100, _101
	mov	x19, x21	// __first, _100
	beq	.L2444		//,
	.p2align 3
.L2438:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [x19]	// _19, MEM[base: __first_177, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L2443	// _19,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2443:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	add	x19, x19, 24	// __first, __first,
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x19, x20	// __first, _101
	bne	.L2438		//,
.L2444:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x21, .L2440	// _100,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x21	//, _100
	bl	_ZdlPv		//
.L2440:
// /usr/local/include/c++/8.3.0/bits/vector.tcc:473:       this->_M_impl._M_end_of_storage = __new_start + __len;
	add	x22, x22, x22, lsl 1	// tmp202, __len, __len,
// /usr/local/include/c++/8.3.0/bits/vector.tcc:474:     }
	ldp	x19, x20, [sp, 16]	//,,
	ldr	x27, [sp, 80]	//,
// /usr/local/include/c++/8.3.0/bits/vector.tcc:472:       this->_M_impl._M_finish = __new_finish;
	stp	x23, x25, [x24]	// _98, __new_finish, this_10(D)->D.44829._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/vector.tcc:473:       this->_M_impl._M_end_of_storage = __new_start + __len;
	add	x23, x23, x22, lsl 3	// tmp204, _98, tmp202,
// /usr/local/include/c++/8.3.0/bits/vector.tcc:474:     }
	ldp	x21, x22, [sp, 32]	//,,
	ldp	x25, x26, [sp, 64]	//,,
// /usr/local/include/c++/8.3.0/bits/vector.tcc:473:       this->_M_impl._M_end_of_storage = __new_start + __len;
	str	x23, [x24, 16]	// tmp204, this_10(D)->D.44829._M_impl._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/vector.tcc:474:     }
	ldp	x23, x24, [sp, 48]	//,,
	ldp	x29, x30, [sp], 112	//,,,
	.cfi_remember_state
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 27
	.cfi_restore 25
	.cfi_restore 26
	.cfi_restore 23
	.cfi_restore 24
	.cfi_restore 21
	.cfi_restore 22
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
	ret	
	.p2align 2
.L2471:
	.cfi_restore_state
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1646: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	mov	x0, -6148914691236517206	// tmp163,
	movk	x0, 0xaaa, lsl 48	// tmp163,,
	cmp	x22, x0	// __len, tmp163
	bls	.L2474		//,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1646: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	mov	x22, x0	// __len, tmp163
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1646: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	mov	x0, -16	// prephitmp_16,
	b	.L2429		//
	.p2align 2
.L2450:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1645: 	const size_type __len = size() + std::max(size(), __n);
	mov	x22, 1	// __len,
.L2428:
	add	x0, x22, x22, lsl 1	// tmp166, __len, __len,
	lsl	x0, x0, 3	// prephitmp_16, tmp166,
	b	.L2429		//
	.p2align 2
.L2472:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x25, x27	// _159, _85
	mov	x3, 0	// _112,
	b	.L2432		//
	.p2align 2
.L2454:
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	mov	x25, x23	// __cur, _98
	b	.L2435		//
.L2474:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x23, 0	// _98,
	cbz	x22, .L2430	// __len,
	b	.L2428		//
.L2473:
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:102: 	  std::__throw_bad_alloc();
	bl	_ZSt17__throw_bad_allocv		//
.LEHE9:
.L2456:
// /usr/local/include/c++/8.3.0/bits/vector.tcc:457:       __catch(...)
	bl	__cxa_begin_catch		//
// /usr/local/include/c++/8.3.0/bits/vector.tcc:459: 	  if (!__new_finish)
	cbnz	x23, .L2446	// _98,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [x26]	// _48, _2->D.43930._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L2449	// _48,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2449:
.LEHB10:
// /usr/local/include/c++/8.3.0/bits/vector.tcc:465: 	  __throw_exception_again;
	bl	__cxa_rethrow		//
.L2446:
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x23	//, _98
	bl	_ZdlPv		//
// /usr/local/include/c++/8.3.0/bits/vector.tcc:465: 	  __throw_exception_again;
	bl	__cxa_rethrow		//
.LEHE10:
.L2457:
	str	x0, [sp, 104]	// tmp206, %sfp
// /usr/local/include/c++/8.3.0/bits/vector.tcc:457:       __catch(...)
	bl	__cxa_end_catch		//
	ldr	x0, [sp, 104]	// tmp206, %sfp
.LEHB11:
	bl	_Unwind_Resume		//
.LEHE11:
	.cfi_endproc
.LFE2549:
	.section	.gcc_except_table
	.align	2
.LLSDA2549:
	.byte	0xff
	.byte	0x9b
	.uleb128 .LLSDATT2549-.LLSDATTD2549
.LLSDATTD2549:
	.byte	0x1
	.uleb128 .LLSDACSE2549-.LLSDACSB2549
.LLSDACSB2549:
	.uleb128 .LEHB8-.LFB2549
	.uleb128 .LEHE8-.LEHB8
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB9-.LFB2549
	.uleb128 .LEHE9-.LEHB9
	.uleb128 .L2456-.LFB2549
	.uleb128 0x1
	.uleb128 .LEHB10-.LFB2549
	.uleb128 .LEHE10-.LEHB10
	.uleb128 .L2457-.LFB2549
	.uleb128 0
	.uleb128 .LEHB11-.LFB2549
	.uleb128 .LEHE11-.LEHB11
	.uleb128 0
	.uleb128 0
.LLSDACSE2549:
	.byte	0x1
	.byte	0
	.align	2
	.4byte	0

.LLSDATT2549:
	.section	.text._ZNSt6vectorIS_IySaIyEESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,"axG",@progbits,_ZNSt6vectorIS_IySaIyEESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_,comdat
	.size	_ZNSt6vectorIS_IySaIyEESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_, .-_ZNSt6vectorIS_IySaIyEESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
	.section	.text._ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_,"axG",@progbits,_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_,comdat
	.align	2
	.p2align 3,,7
	.weak	_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_
	.type	_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_, %function
_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_:
.LFB2643:
	.cfi_startproc
	stp	x29, x30, [sp, -96]!	//,,,
	.cfi_def_cfa_offset 96
	.cfi_offset 29, -96
	.cfi_offset 30, -88
	mov	x29, sp	//,
	stp	x21, x22, [sp, 32]	//,,
	.cfi_offset 21, -64
	.cfi_offset 22, -56
	mov	x22, x1	// __position, __position
	stp	x25, x26, [sp, 64]	//,,
	.cfi_offset 25, -32
	.cfi_offset 26, -24
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1642: 	if (max_size() - size() < __n)
	ldp	x21, x25, [x0]	// _36, _37, MEM[(int * *)this_4(D)]
// /usr/local/include/c++/8.3.0/bits/vector.tcc:413:       vector<_Tp, _Alloc>::
	stp	x19, x20, [sp, 16]	//,,
	.cfi_offset 19, -80
	.cfi_offset 20, -72
	mov	x20, x0	// this, this
	stp	x23, x24, [sp, 48]	//,,
	mov	x19, x2	// __args#0, __args#0
	stp	x27, x28, [sp, 80]	//,,
	.cfi_offset 23, -48
	.cfi_offset 24, -40
	.cfi_offset 27, -16
	.cfi_offset 28, -8
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x0, x25, x21	// tmp112, _37, _36
	sub	x26, x1, x21	// _65, __position, _36
	asr	x0, x0, 2	// tmp113, tmp112,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:224:       if (__a < __b)
	cbz	x0, .L2484	// tmp113,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1645: 	const size_type __len = size() + std::max(size(), __n);
	lsl	x1, x0, 1	// __len, tmp113,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1646: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	mov	x24, -4	// _69,
	cmp	x0, x1	// tmp113, __len
	bls	.L2491		//,
.L2477:
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x24	//, _69
	bl	_Znwm		//
	mov	x23, x0	// _34,
	add	x24, x0, x24	// _82, _34, _69
.L2478:
	ldr	w0, [x19]	//, *__args#0_15(D)
	add	x19, x26, 4	// tmp117, _65,
	str	w0, [x23, x26]	// *__args#0_15(D), *_2
	sub	x27, x25, x22	// _71, _37, __position
	add	x19, x23, x19	// _88, _34, tmp117
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	cmp	x22, x21	// __position, _36
	add	x28, x19, x27	// _66, _88, _71
	beq	.L2479		//,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:368: 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
	mov	x2, x26	//, _65
	mov	x1, x21	//, _36
	mov	x0, x23	//, _34
	bl	memmove		//
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	cmp	x22, x25	// __position, _37
	beq	.L2483		//,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:368: 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
	mov	x2, x27	//, _71
	mov	x1, x22	//, __position
	mov	x0, x19	//, _88
	bl	memcpy		//
.L2482:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbnz	x21, .L2483	// _36,
.L2481:
// /usr/local/include/c++/8.3.0/bits/vector.tcc:474:     }
	ldp	x21, x22, [sp, 32]	//,,
	ldp	x25, x26, [sp, 64]	//,,
// /usr/local/include/c++/8.3.0/bits/vector.tcc:472:       this->_M_impl._M_finish = __new_finish;
	stp	x23, x28, [x20]	// _34, _66, this_4(D)->D.42966._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/vector.tcc:473:       this->_M_impl._M_end_of_storage = __new_start + __len;
	str	x24, [x20, 16]	// _82, this_4(D)->D.42966._M_impl._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/vector.tcc:474:     }
	ldp	x19, x20, [sp, 16]	//,,
	ldp	x23, x24, [sp, 48]	//,,
	ldp	x27, x28, [sp, 80]	//,,
	ldp	x29, x30, [sp], 96	//,,,
	.cfi_remember_state
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 27
	.cfi_restore 28
	.cfi_restore 25
	.cfi_restore 26
	.cfi_restore 23
	.cfi_restore 24
	.cfi_restore 21
	.cfi_restore 22
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
	ret	
	.p2align 2
.L2483:
	.cfi_restore_state
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x21	//, _36
	bl	_ZdlPv		//
	b	.L2481		//
	.p2align 2
.L2491:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1646: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	mov	x0, 4611686018427387903	// tmp114,
	cmp	x1, x0	// __len, tmp114
	bhi	.L2477		//,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x24, 0	// _82,
	mov	x23, 0	// _34,
	cbz	x1, .L2478	// __len,
	lsl	x24, x1, 2	// _69, __len,
	b	.L2477		//
	.p2align 2
.L2479:
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	cmp	x22, x25	// __position, _37
	beq	.L2482		//,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:368: 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
	mov	x2, x27	//, _71
	mov	x1, x22	//, __position
	mov	x0, x19	//, _88
	bl	memcpy		//
	b	.L2482		//
	.p2align 2
.L2484:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1645: 	const size_type __len = size() + std::max(size(), __n);
	mov	x1, 1	// __len,
	lsl	x24, x1, 2	// _69, __len,
	b	.L2477		//
	.cfi_endproc
.LFE2643:
	.size	_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_, .-_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_
	.section	.text._ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_,"axG",@progbits,_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_,comdat
	.align	2
	.p2align 3,,7
	.weak	_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_
	.type	_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_, %function
_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_:
.LFB2501:
	.cfi_startproc
// /usr/local/include/c++/8.3.0/bits/vector.tcc:100: 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
	ldp	x3, x5, [x0, 8]	// _1, this_6(D)->D.42966._M_impl._M_end_of_storage, this_6(D)->D.42966._M_impl._M_finish
// /usr/local/include/c++/8.3.0/bits/vector.tcc:97:       vector<_Tp, _Alloc>::
	mov	x4, x0	// this, this
// /usr/local/include/c++/8.3.0/bits/vector.tcc:100: 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
	cmp	x3, x5	// _1, this_6(D)->D.42966._M_impl._M_end_of_storage
	beq	.L2493		//,
	mov	x0, x3	// tmp98, _1
// /usr/local/include/c++/8.3.0/bits/vector.tcc:103: 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
	ldr	w1, [x1]	//, *__args#0_7(D)
	str	w1, [x0], 4	// _10, *_1
// /usr/local/include/c++/8.3.0/bits/vector.tcc:105: 	    ++this->_M_impl._M_finish;
	str	x0, [x4, 8]	// tmp98, this_6(D)->D.42966._M_impl._M_finish
// /usr/local/include/c++/8.3.0/bits/vector.tcc:113:       }
	ret	
	.p2align 2
.L2493:
// /usr/local/include/c++/8.3.0/bits/vector.tcc:109: 	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
	mov	x2, x1	//, __args#0
	mov	x1, x3	//, _1
	b	_ZNSt6vectorIiSaIiEE17_M_realloc_insertIJiEEEvN9__gnu_cxx17__normal_iteratorIPiS1_EEDpOT_		//
	.cfi_endproc
.LFE2501:
	.size	_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_, .-_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_
	.section	.text._ZNSt6vectorImSaImEE17_M_default_appendEm,"axG",@progbits,_ZNSt6vectorImSaImEE17_M_default_appendEm,comdat
	.align	2
	.p2align 3,,7
	.weak	_ZNSt6vectorImSaImEE17_M_default_appendEm
	.type	_ZNSt6vectorImSaImEE17_M_default_appendEm, %function
_ZNSt6vectorImSaImEE17_M_default_appendEm:
.LFB2670:
	.cfi_startproc
// /usr/local/include/c++/8.3.0/bits/vector.tcc:583:       if (__n != 0)
	cbz	x1, .L2516	// __n,
// /usr/local/include/c++/8.3.0/bits/vector.tcc:587: 					 - this->_M_impl._M_finish);
	ldp	x3, x2, [x0, 8]	// _36, this_19(D)->D.42087._M_impl._M_end_of_storage, MEM[(long unsigned int * *)this_19(D) + 8B]
	sub	x2, x2, x3	// tmp121, this_19(D)->D.42087._M_impl._M_end_of_storage, _36
// /usr/local/include/c++/8.3.0/bits/vector.tcc:592: 	  if (__navail >= __n)
	cmp	x1, x2, asr 3	// __n, tmp121,
	bhi	.L2498		//,
	mov	x2, 0	// ivtmp.1336,
	.p2align 3
.L2499:
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:754: 	*__first = __tmp;
	str	xzr, [x3, x2, lsl 3]	//, MEM[base: _36, index: ivtmp.1336_71, step: 8, offset: 0B]
	add	x2, x2, 1	// ivtmp.1336, ivtmp.1336,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:753: 	   __niter > 0; --__niter, (void) ++__first)
	cmp	x1, x2	// __n, ivtmp.1336
	bne	.L2499		//,
// /usr/local/include/c++/8.3.0/bits/vector.tcc:595: 	      this->_M_impl._M_finish =
	add	x1, x3, x1, lsl 3	// __first, _36, __n,
	str	x1, [x0, 8]	// __first, this_19(D)->D.42087._M_impl._M_finish
	ret	
	.p2align 2
.L2516:
	ret	
	.p2align 2
.L2498:
// /usr/local/include/c++/8.3.0/bits/vector.tcc:580:     vector<_Tp, _Alloc>::
	stp	x29, x30, [sp, -80]!	//,,,
	.cfi_def_cfa_offset 80
	.cfi_offset 29, -80
	.cfi_offset 30, -72
// /usr/local/include/c++/8.3.0/bits/vector.tcc:589: 	  if (__size > max_size() || __navail > max_size() - __size)
	mov	x2, 2305843009213693951	// tmp130,
// /usr/local/include/c++/8.3.0/bits/vector.tcc:580:     vector<_Tp, _Alloc>::
	mov	x29, sp	//,
	stp	x19, x20, [sp, 16]	//,,
	.cfi_offset 19, -64
	.cfi_offset 20, -56
	mov	x19, x1	// __n, __n
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldr	x1, [x0]	// MEM[(long unsigned int * *)this_19(D)], MEM[(long unsigned int * *)this_19(D)]
// /usr/local/include/c++/8.3.0/bits/vector.tcc:580:     vector<_Tp, _Alloc>::
	stp	x21, x22, [sp, 32]	//,,
	.cfi_offset 21, -48
	.cfi_offset 22, -40
	mov	x22, x0	// this, this
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x20, x3, x1	// _31, _36, MEM[(long unsigned int * *)this_19(D)]
// /usr/local/include/c++/8.3.0/bits/vector.tcc:580:     vector<_Tp, _Alloc>::
	stp	x23, x24, [sp, 48]	//,,
	.cfi_offset 23, -32
	.cfi_offset 24, -24
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	asr	x23, x20, 3	// _24, _31,
	str	x25, [sp, 64]	//,
	.cfi_offset 25, -16
// /usr/local/include/c++/8.3.0/bits/vector.tcc:589: 	  if (__size > max_size() || __navail > max_size() - __size)
	sub	x0, x2, x23	// tmp129, tmp130, _24
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1642: 	if (max_size() - size() < __n)
	cmp	x0, x19	// tmp129, __n
	bcc	.L2518		//,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1645: 	const size_type __len = size() + std::max(size(), __n);
	cmp	x19, x23	// __n, _24
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1646: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	mov	x24, -8	// prephitmp_17,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1645: 	const size_type __len = size() + std::max(size(), __n);
	csel	x0, x19, x23, cs	// tmp133, __n, _24,
	add	x0, x0, x23	// __len, tmp133, _24
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1646: 	return (__len < size() || __len > max_size()) ? max_size() : __len;
	cmp	x23, x0	// _24, __len
	bhi	.L2501		//,
	cmp	x0, x2	// __len, tmp130
	csel	x0, x0, x2, ls	// tmp134, __len, tmp130,
	lsl	x24, x0, 3	// prephitmp_17, tmp134,
.L2501:
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x24	//, prephitmp_17
	bl	_Znwm		//
	mov	x25, x0	// _53,
// /usr/local/include/c++/8.3.0/bits/vector.tcc:608: 		  std::__uninitialized_default_n_a(__new_start + __size,
	add	x1, x0, x20	// _6, _53, _31
	mov	x21, 0	// ivtmp.1344,
	.p2align 3
.L2502:
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:754: 	*__first = __tmp;
	str	xzr, [x1, x21, lsl 3]	//, MEM[base: _6, index: ivtmp.1344_27, step: 8, offset: 0B]
	add	x21, x21, 1	// ivtmp.1344, ivtmp.1344,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:753: 	   __niter > 0; --__niter, (void) ++__first)
	cmp	x19, x21	// __n, ivtmp.1344
	bne	.L2502		//,
// /usr/local/include/c++/8.3.0/bits/vector.tcc:611: 		  std::__uninitialized_move_if_noexcept_a(
	ldp	x19, x2, [x22]	// _7, _8, this_19(D)->D.42087._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	cmp	x19, x2	// _7, _8
	beq	.L2503		//,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:368: 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
	sub	x2, x2, x19	//, _8, _7
	mov	x1, x19	//, _7
	mov	x0, x25	//, _53
	bl	memmove		//
.L2504:
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x19	//, _7
	bl	_ZdlPv		//
.L2505:
// /usr/local/include/c++/8.3.0/bits/vector.tcc:630: 	      this->_M_impl._M_finish = __new_start + __size + __n;
	add	x21, x23, x21	// tmp139, _24, ivtmp.1344
// /usr/local/include/c++/8.3.0/bits/vector.tcc:631: 	      this->_M_impl._M_end_of_storage = __new_start + __len;
	add	x0, x25, x24	// tmp142, _53, prephitmp_17
// /usr/local/include/c++/8.3.0/bits/vector.tcc:634:     }
	ldp	x19, x20, [sp, 16]	//,,
// /usr/local/include/c++/8.3.0/bits/vector.tcc:630: 	      this->_M_impl._M_finish = __new_start + __size + __n;
	add	x21, x25, x21, lsl 3	// tmp141, _53, tmp139,
// /usr/local/include/c++/8.3.0/bits/vector.tcc:634:     }
	ldp	x23, x24, [sp, 48]	//,,
// /usr/local/include/c++/8.3.0/bits/vector.tcc:630: 	      this->_M_impl._M_finish = __new_start + __size + __n;
	stp	x25, x21, [x22]	// _53, tmp141, this_19(D)->D.42087._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/vector.tcc:631: 	      this->_M_impl._M_end_of_storage = __new_start + __len;
	str	x0, [x22, 16]	// tmp142, this_19(D)->D.42087._M_impl._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/vector.tcc:634:     }
	ldp	x21, x22, [sp, 32]	//,,
	ldr	x25, [sp, 64]	//,
	.cfi_remember_state
	.cfi_restore 25
	ldp	x29, x30, [sp], 80	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 23
	.cfi_restore 24
	.cfi_restore 21
	.cfi_restore 22
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
	ret	
	.p2align 2
.L2503:
	.cfi_restore_state
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x19, .L2505	// _7,
	b	.L2504		//
.L2518:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1643: 	  __throw_length_error(__N(__s));
	adrp	x0, .LC5	// tmp132,
	add	x0, x0, :lo12:.LC5	//, tmp132,
	bl	_ZSt20__throw_length_errorPKc		//
	.cfi_endproc
.LFE2670:
	.size	_ZNSt6vectorImSaImEE17_M_default_appendEm, .-_ZNSt6vectorImSaImEE17_M_default_appendEm
	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag,comdat
	.align	2
	.p2align 3,,7
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag, %function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:
.LFB2730:
	.cfi_startproc
	stp	x29, x30, [sp, -64]!	//,,,
	.cfi_def_cfa_offset 64
	.cfi_offset 29, -64
	.cfi_offset 30, -56
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:211: 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
	cmp	x1, 0	// __beg,
	ccmp	x2, 0, 4, eq	// __end,,,
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:206:       basic_string<_CharT, _Traits, _Alloc>::
	mov	x29, sp	//,
	stp	x19, x20, [sp, 16]	//,,
	str	x21, [sp, 32]	//,
	.cfi_offset 19, -48
	.cfi_offset 20, -40
	.cfi_offset 21, -32
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:211: 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
	bne	.L2530		//,
// /usr/local/include/c++/8.3.0/bits/stl_iterator_base_funcs.h:104:       return __last - __first;
	sub	x19, x2, x1	// _1, __end, __beg
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:215: 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
	str	x19, [sp, 56]	// _1, __dnew
	mov	x21, x1	// __beg, __beg
	mov	x20, x0	// this, this
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:217: 	if (__dnew > size_type(_S_local_capacity))
	cmp	x19, 15	// _1,
	bhi	.L2531		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:337: 	if (__n == 1)
	cmp	x19, 1	// _1,
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:225: 	  { this->_S_copy_chars(_M_data(), __beg, __end); }
	ldr	x0, [x0]	// _16, MEM[(const struct basic_string *)this_12(D)]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:337: 	if (__n == 1)
	bne	.L2523		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:338: 	  traits_type::assign(*__d, *__s);
	ldrb	w1, [x1]	// _18, MEM[(const char_type &)__beg_6(D)]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	w1, [x0]	// _18, MEM[(char_type &)_16]
	ldr	x0, [x20]	// _16, MEM[(const struct basic_string *)this_12(D)]
	ldr	x19, [sp, 56]	// _1, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x19, [x20, 8]	// _1, MEM[(size_type *)this_12(D) + 8B]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x0, x19]	//, MEM[(char_type &)_17]
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:233:       }
	ldp	x19, x20, [sp, 16]	//,,
	ldr	x21, [sp, 32]	//,
	ldp	x29, x30, [sp], 64	//,,,
	.cfi_remember_state
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 21
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
	ret	
	.p2align 2
.L2523:
	.cfi_restore_state
// /usr/local/include/c++/8.3.0/bits/char_traits.h:350: 	if (__n == 0)
	cbnz	x19, .L2522	// _1,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x19, [x20, 8]	// _1, MEM[(size_type *)this_12(D) + 8B]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x0, x19]	//, MEM[(char_type &)_17]
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:233:       }
	ldp	x19, x20, [sp, 16]	//,,
	ldr	x21, [sp, 32]	//,
	ldp	x29, x30, [sp], 64	//,,,
	.cfi_remember_state
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 21
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
	ret	
	.p2align 2
.L2531:
	.cfi_restore_state
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:219: 	    _M_data(_M_create(__dnew, size_type(0)));
	add	x1, sp, 56	//,,
	mov	x2, 0	//,
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x0, [x20]	// _16, MEM[(char * *)this_12(D)]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	ldr	x1, [sp, 56]	// __dnew, __dnew
	str	x1, [x20, 16]	// __dnew, MEM[(size_type *)this_12(D) + 16B]
.L2522:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x2, x19	//, _1
	mov	x1, x21	//, __beg
	bl	memcpy		//
	ldr	x0, [x20]	// _16, MEM[(const struct basic_string *)this_12(D)]
	ldr	x19, [sp, 56]	// _1, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x19, [x20, 8]	// _1, MEM[(size_type *)this_12(D) + 8B]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x0, x19]	//, MEM[(char_type &)_17]
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:233:       }
	ldp	x19, x20, [sp, 16]	//,,
	ldr	x21, [sp, 32]	//,
	ldp	x29, x30, [sp], 64	//,,,
	.cfi_remember_state
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 21
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
	ret	
.L2530:
	.cfi_restore_state
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:212: 	  std::__throw_logic_error(__N("basic_string::"
	adrp	x0, .LC6	// tmp107,
	add	x0, x0, :lo12:.LC6	//, tmp107,
	bl	_ZSt19__throw_logic_errorPKc		//
	.cfi_endproc
.LFE2730:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag, .-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag
	.section	.text._ZN11LinuxEventsILi0EEC2ESt6vectorIiSaIiEE,"axG",@progbits,_ZN11LinuxEventsILi0EEC5ESt6vectorIiSaIiEE,comdat
	.align	2
	.p2align 3,,7
	.weak	_ZN11LinuxEventsILi0EEC2ESt6vectorIiSaIiEE
	.type	_ZN11LinuxEventsILi0EEC2ESt6vectorIiSaIiEE, %function
_ZN11LinuxEventsILi0EEC2ESt6vectorIiSaIiEE:
.LFB2303:
	.cfi_startproc
	.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
	.cfi_lsda 0x1b,.LLSDA2303
	stp	x29, x30, [sp, -240]!	//,,,
	.cfi_def_cfa_offset 240
	.cfi_offset 29, -240
	.cfi_offset 30, -232
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:96: 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
	add	x5, x0, 128	// tmp331, this,
// linux-perf-events.h:26:   explicit LinuxEvents(std::vector<int> config_vec) : fd(0), working(true) {
	mov	w3, 1	// tmp193,
// linux-perf-events.h:26:   explicit LinuxEvents(std::vector<int> config_vec) : fd(0), working(true) {
	mov	x29, sp	//,
	stp	x19, x20, [sp, 16]	//,,
	.cfi_offset 19, -224
	.cfi_offset 20, -216
	mov	x19, x0	// this, this
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:96: 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
	add	x0, x0, 152	// tmp201, this,
// linux-perf-events.h:26:   explicit LinuxEvents(std::vector<int> config_vec) : fd(0), working(true) {
	stp	x21, x22, [sp, 32]	//,,
// linux-perf-events.h:27:     memset(&attribs, 0, sizeof(attribs));
	add	x2, x19, 16	// tmp206, this,
	.cfi_offset 21, -208
	.cfi_offset 22, -200
// linux-perf-events.h:26:   explicit LinuxEvents(std::vector<int> config_vec) : fd(0), working(true) {
	mov	x21, x1	// config_vec, config_vec
	stp	x23, x24, [sp, 48]	//,,
// linux-perf-events.h:28:     attribs.type = TYPE;
	mov	x4, 481036337152	// tmp208,
// linux-perf-events.h:30:     attribs.disabled = 1;
	mov	w1, 97	// tmp214,
// linux-perf-events.h:26:   explicit LinuxEvents(std::vector<int> config_vec) : fd(0), working(true) {
	stp	x25, x26, [sp, 64]	//,,
	.cfi_offset 23, -192
	.cfi_offset 24, -184
	.cfi_offset 25, -176
	.cfi_offset 26, -168
// linux-perf-events.h:27:     memset(&attribs, 0, sizeof(attribs));
	add	x25, x19, 8	// _3, this,
// linux-perf-events.h:26:   explicit LinuxEvents(std::vector<int> config_vec) : fd(0), working(true) {
	stp	x27, x28, [sp, 80]	//,,
	.cfi_offset 27, -160
	.cfi_offset 28, -152
// linux-perf-events.h:26:   explicit LinuxEvents(std::vector<int> config_vec) : fd(0), working(true) {
	str	wzr, [x19]	//, *this_25(D).fd
	strb	w3, [x19, 4]	// tmp193, *this_25(D).working
// linux-perf-events.h:35:     attribs.read_format = PERF_FORMAT_GROUP | PERF_FORMAT_ID;
	mov	x3, 12	// tmp209,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:96: 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [x19, 128]	//,, MEM[(struct _Vector_impl *)this_25(D) + 128B]._M_start
	stp	xzr, xzr, [x19, 144]	//,, MEM[(struct _Vector_impl *)this_25(D) + 128B]._M_end_of_storage
	stp	xzr, xzr, [x0, 8]	//,, MEM[(struct _Vector_impl *)this_25(D) + 152B]._M_finish
// linux-perf-events.h:27:     memset(&attribs, 0, sizeof(attribs));
	stp	xzr, xzr, [x19, 16]	// MEM[(void *)this_25(D) + 16B]
	stp	xzr, xzr, [x2, 16]	// MEM[(void *)this_25(D) + 16B]
	stp	xzr, xzr, [x2, 32]	// MEM[(void *)this_25(D) + 16B]
	stp	xzr, xzr, [x2, 48]	// MEM[(void *)this_25(D) + 16B]
	stp	xzr, xzr, [x2, 64]	// MEM[(void *)this_25(D) + 16B]
	stp	xzr, xzr, [x2, 80]	// MEM[(void *)this_25(D) + 16B]
	str	xzr, [x2, 96]	//, MEM[(void *)this_25(D) + 16B]
// linux-perf-events.h:28:     attribs.type = TYPE;
	str	x4, [x19, 8]	// tmp208, MEM[(unsigned int *)this_25(D) + 8B]
// linux-perf-events.h:35:     attribs.read_format = PERF_FORMAT_GROUP | PERF_FORMAT_ID;
	str	x3, [x19, 40]	// tmp209, *this_25(D).attribs.read_format
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:96: 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
	str	x5, [sp, 104]	// tmp331, %sfp
// linux-perf-events.h:41:     num_events = config_vec.size();
	ldr	x20, [x21]	// prephitmp_45, MEM[(int * *)config_vec_37(D)]
	ldr	x23, [x21, 8]	// _54, MEM[(int * *)config_vec_37(D) + 8B]
// linux-perf-events.h:30:     attribs.disabled = 1;
	strb	w1, [x19, 48]	// tmp214, MEM[(struct perf_event_attr *)this_25(D) + 48B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x1, x23, x20	// tmp217, _54, prephitmp_45
	asr	x1, x1, 2	// tmp218, tmp217,
// linux-perf-events.h:41:     num_events = config_vec.size();
	str	w1, [x19, 120]	// tmp218, *this_25(D).num_events
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:826: 	if (__new_size > size())
	cbnz	x1, .L2607	// tmp218,
.L2533:
// linux-perf-events.h:44:     for (auto config : config_vec) {
	cmp	x20, x23	// ivtmp.1356, _54
// linux-perf-events.h:43:     uint32_t i = 0;
	mov	w21, 0	// i,
// linux-perf-events.h:40:     int group = -1; // no group
	mov	w22, -1	// group,
// linux-perf-events.h:44:     for (auto config : config_vec) {
	beq	.L2572		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x27, sp, 128	// tmp341,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x28, sp, 192	// tmp343,,
	b	.L2571		//
	.p2align 2
.L2537:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:933: 	return *(this->_M_impl._M_start + __n);
	ldr	x2, [x19, 152]	// MEM[(long unsigned int * *)this_25(D) + 152B], MEM[(long unsigned int * *)this_25(D) + 152B]
// linux-perf-events.h:50:       ioctl(fd, PERF_EVENT_IOC_ID, &ids[i++]);
	mov	x1, 9223	//,
	movk	x1, 0x8008, lsl 16	//,,
// linux-perf-events.h:50:       ioctl(fd, PERF_EVENT_IOC_ID, &ids[i++]);
	add	w24, w21, 1	// i, i,
// linux-perf-events.h:50:       ioctl(fd, PERF_EVENT_IOC_ID, &ids[i++]);
	add	x2, x2, x21, uxtw 3	//, MEM[(long unsigned int * *)this_25(D) + 152B], i,,
	bl	ioctl		//
// linux-perf-events.h:51:       if (group == -1) {
	cmn	w22, #1	// group,
	bne	.L2570		//,
// linux-perf-events.h:52:         group = fd;
	ldr	w22, [x19]	//, *this_25(D).fd
.L2570:
	add	x20, x20, 4	// ivtmp.1356, ivtmp.1356,
// linux-perf-events.h:44:     for (auto config : config_vec) {
	cmp	x23, x20	// _54, ivtmp.1356
	beq	.L2572		//,
// linux-perf-events.h:50:       ioctl(fd, PERF_EVENT_IOC_ID, &ids[i++]);
	mov	w21, w24	// i, i
.L2571:
// linux-perf-events.h:45:       attribs.config = config;
	ldrsw	x0, [x20]	// MEM[base: _279, offset: 0], MEM[base: _279, offset: 0]
// linux-perf-events.h:46:       fd = syscall(__NR_perf_event_open, &attribs, pid, cpu, group, flags);
	mov	x5, 0	//,
// linux-perf-events.h:45:       attribs.config = config;
	str	x0, [x19, 16]	// MEM[base: _279, offset: 0], *this_25(D).attribs.config
// linux-perf-events.h:46:       fd = syscall(__NR_perf_event_open, &attribs, pid, cpu, group, flags);
	mov	w4, w22	//, group
	mov	w3, -1	//,
	mov	w2, 0	//,
	mov	x1, x25	//, _3
	mov	x0, 241	//,
	bl	syscall		//
// linux-perf-events.h:46:       fd = syscall(__NR_perf_event_open, &attribs, pid, cpu, group, flags);
	str	w0, [x19]	// _8, *this_25(D).fd
// linux-perf-events.h:47:       if (fd == -1) {
	cmn	w0, #1	// _8,
	bne	.L2537		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x1, .LC7	// tmp229,
	adrp	x2, .LC7+15	// tmp231,
	add	x1, x1, :lo12:.LC7	//, tmp229,
	add	x2, x2, :lo12:.LC7+15	//, tmp231,
	mov	w3, 0	//,
	add	x0, sp, 112	// tmp352,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	str	x27, [sp, 112]	// tmp341, MEM[(struct _Alloc_hider *)&D.50021]._M_p
.LEHB12:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE12:
// linux-perf-events.h:88:     if (working)
	ldrb	w0, [x19, 4]	// this_25(D)->working, this_25(D)->working
	ldr	x24, [sp, 112]	// pretmp_46, MEM[(const struct basic_string *)&D.50021]
	cbnz	w0, .L2608	// this_25(D)->working,
.L2538:
// linux-perf-events.h:90:     working = false;
	strb	wzr, [x19, 4]	//, this_25(D)->working
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x24, x27	// pretmp_46, tmp341
	beq	.L2563		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x24	//, pretmp_46
	bl	_ZdlPv		//
.L2563:
	ldr	w0, [x19]	//, *this_25(D).fd
	b	.L2537		//
	.p2align 2
.L2572:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:826: 	if (__new_size > size())
	ldp	x3, x2, [x19, 128]	// _180, _181, MEM[(long unsigned int * *)this_25(D) + 128B]
// linux-perf-events.h:56:     temp_result_vec.resize(num_events * 2 + 1);
	ldr	w0, [x19, 120]	//, *this_25(D).num_events
	lsl	w0, w0, 1	// tmp221, *this_25(D).num_events,
// linux-perf-events.h:56:     temp_result_vec.resize(num_events * 2 + 1);
	add	w0, w0, 1	// _15, tmp221,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x1, x2, x3	// tmp223, _181, _180
// linux-perf-events.h:56:     temp_result_vec.resize(num_events * 2 + 1);
	sxtw	x0, w0	// _16, _15
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	asr	x1, x1, 3	// tmp224, tmp223,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:826: 	if (__new_size > size())
	cmp	x0, x1	// _16, tmp224
	bhi	.L2609		//,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:828: 	else if (__new_size < size())
	bcs	.L2532		//,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:829: 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
	add	x0, x3, x0, lsl 3	// _187, _180, _16,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1656: 	if (size_type __n = this->_M_impl._M_finish - __pos)
	cmp	x2, x0	// _181, _187
	beq	.L2532		//,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1660: 	    this->_M_impl._M_finish = __pos;
	str	x0, [x19, 136]	// _187, MEM[(long unsigned int * *)this_25(D) + 136B]
.L2532:
// linux-perf-events.h:57:   }
	ldp	x19, x20, [sp, 16]	//,,
	ldp	x21, x22, [sp, 32]	//,,
	ldp	x23, x24, [sp, 48]	//,,
	ldp	x25, x26, [sp, 64]	//,,
	ldp	x27, x28, [sp, 80]	//,,
	ldp	x29, x30, [sp], 240	//,,,
	.cfi_remember_state
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 27
	.cfi_restore 28
	.cfi_restore 25
	.cfi_restore 26
	.cfi_restore 23
	.cfi_restore 24
	.cfi_restore 21
	.cfi_restore 22
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
	ret	
	.p2align 2
.L2608:
	.cfi_restore_state
// /usr/local/include/c++/8.3.0/bits/basic_string.h:440:       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
	ldr	x26, [sp, 120]	// _113, MEM[(const struct basic_string *)&D.50021 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	str	x28, [sp, 176]	// tmp343, MEM[(struct _Alloc_hider *)&D.63695]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:211: 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
	cmn	x24, x26	// pretmp_46, _113
	ccmp	x24, 0, 0, ne	// pretmp_46,,,
	beq	.L2610		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:215: 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
	str	x26, [sp, 208]	// _113, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:217: 	if (__dnew > size_type(_S_local_capacity))
	cmp	x26, 15	// _113,
	bhi	.L2611		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:337: 	if (__n == 1)
	cmp	x26, 1	// _113,
	bne	.L2542		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:338: 	  traits_type::assign(*__d, *__s);
	ldrb	w1, [x24]	// _121, MEM[(const char_type &)pretmp_46]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	mov	x0, x28	// prephitmp_96, tmp343
	strb	w1, [sp, 192]	// _121, MEM[(char_type &)&D.63695 + 16]
.L2543:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x26, [sp, 184]	// _113, MEM[(size_type *)&D.63695 + 8B]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x0, x26]	//, MEM[(char_type &)_124]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	mov	x0, 9223372036854775807	// tmp252,
	ldr	x1, [sp, 184]	// MEM[(const struct basic_string *)&D.63695 + 8B], MEM[(const struct basic_string *)&D.63695 + 8B]
	sub	x0, x0, x1	// tmp251, tmp252, MEM[(const struct basic_string *)&D.63695 + 8B]
	cmp	x0, 1	// tmp251,
	bls	.L2612		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1268: 	return _M_append(__s, __n);
	adrp	x1, .LC9	// tmp257,
	mov	x2, 2	//,
	add	x1, x1, :lo12:.LC9	//, tmp257,
	add	x0, sp, 176	// tmp354,,
.LEHB13:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE13:
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	__errno_location		//
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	ldr	w0, [x0]	//, *_98
	bl	strerror		//
	mov	x24, x0	// _100,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x1, sp, 160	// tmp261,,
	str	x1, [sp, 144]	// tmp261, MEM[(struct _Alloc_hider *)&D.63694]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	mov	x2, -1	// iftmp.41_131,
	cbz	x0, .L2546	// _100,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:322: 	return __builtin_strlen(__s);
	bl	strlen		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	add	x2, x24, x0	// iftmp.41_131, _100,
.L2546:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	mov	x1, x24	//, _100
	mov	w3, 0	//,
	add	x0, sp, 144	// tmp357,,
.LEHB14:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE14:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x3, x4, [sp, 176]	// _136, _133, MEM[(const struct basic_string *)&D.63695]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	mov	x6, 15	// tmp335,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x1, x2, [sp, 144]	// pretmp_175, _134, MEM[(const struct basic_string *)&D.63694]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 192]	// D.63695.D.21280._M_allocated_capacity, D.63695.D.21280._M_allocated_capacity
	cmp	x3, x28	// _136, tmp343
	csel	x0, x0, x6, ne	// iftmp.59_138, D.63695.D.21280._M_allocated_capacity, tmp335,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	add	x5, x4, x2	// __size, _133, _134
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_138
	bls	.L2551		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 160]	// D.63694.D.21280._M_allocated_capacity, D.63694.D.21280._M_allocated_capacity
	add	x7, sp, 160	// tmp273,,
	cmp	x1, x7	// pretmp_175, tmp273
	csel	x0, x0, x6, ne	// iftmp.59_142, D.63694.D.21280._M_allocated_capacity, tmp335,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_142
	bls	.L2613		//,
.L2551:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	add	x0, sp, 176	// tmp360,,
.LEHB15:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE15:
.L2606:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x2, sp, 224	// tmp277,,
	str	x2, [sp, 208]	// tmp277, MEM[(struct _Alloc_hider *)&D.63696]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x1, x0	// _146,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x2, [x0], 16	// _149, MEM[(const struct basic_string *)iftmp.58_148]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:544: 	if (__str._M_is_local())
	cmp	x2, x0	// _149, _150
	beq	.L2614		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x2, [sp, 208]	// _149, MEM[(char * *)&D.63696]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:552: 	    _M_capacity(__str._M_allocated_capacity);
	ldr	x2, [x1, 16]	// _152, MEM[(struct basic_string &)iftmp.58_148].D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x2, [sp, 224]	// _152, MEM[(size_type *)&D.63696 + 16B]
.L2555:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:558: 	_M_length(__str.length());
	ldr	x2, [x1, 8]	// _153, MEM[(const struct basic_string *)iftmp.58_148 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x2, [sp, 216]	// _153, MEM[(size_type *)&D.63696 + 8B]
	stp	x0, xzr, [x1]	// _150,, MEM[(char * *)iftmp.58_148]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	adrp	x0, _ZSt4cerr	// tmp281,
	add	x0, x0, :lo12:_ZSt4cerr	//, tmp281,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, 16]	//, MEM[(char_type &)iftmp.58_148 + 16]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	ldp	x1, x2, [sp, 208]	//,, MEM[(const struct basic_string *)&D.63696]
.LEHB16:
	bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l		//
	mov	x26, x0	// _104,
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	ldr	x0, [x0]	// _104->_vptr.basic_ostream, _104->_vptr.basic_ostream
	ldr	x0, [x0, -24]	// MEM[(long int *)_158 + -24B], MEM[(long int *)_158 + -24B]
	add	x0, x26, x0	// tmp284, _104, MEM[(long int *)_158 + -24B]
	ldr	x24, [x0, 240]	// _162, MEM[(const struct __ctype_type * *)_161 + 240B]
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:49:       if (!__f)
	cbz	x24, .L2615	// _162,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:874: 	if (_M_widen_ok)
	ldrb	w0, [x24, 56]	// MEM[(const struct ctype *)_162]._M_widen_ok, MEM[(const struct ctype *)_162]._M_widen_ok
	cbz	w0, .L2557	// MEM[(const struct ctype *)_162]._M_widen_ok,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:875: 	  return _M_widen[static_cast<unsigned char>(__c)];
	ldrb	w1, [x24, 67]	// _169, MEM[(const struct ctype *)_162]._M_widen
.L2558:
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	mov	x0, x26	//, _104
	bl	_ZNSo3putEc		//
// /usr/local/include/c++/8.3.0/ostream:613:     { return __os.flush(); }
	bl	_ZNSo5flushEv		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 208]	// _105, MEM[(const struct basic_string *)&D.63696]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 224	// tmp291,,
	cmp	x0, x1	// _105, tmp291
	beq	.L2559		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2559:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 144]	// _106, MEM[(const struct basic_string *)&D.63694]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 160	// tmp293,,
	cmp	x0, x1	// _106, tmp293
	beq	.L2560		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2560:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 176]	// _107, MEM[(const struct basic_string *)&D.63695]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x0, x28	// _107, tmp343
	beq	.L2561		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2561:
	ldr	x24, [sp, 112]	// pretmp_46, MEM[(const struct basic_string *)&D.50021]
	b	.L2538		//
	.p2align 2
.L2542:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:350: 	if (__n == 0)
	mov	x0, x28	// prephitmp_96, tmp343
	cbz	x26, .L2543	// _113,
	b	.L2541		//
	.p2align 2
.L2557:
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:876: 	this->_M_widen_init();
	mov	x0, x24	//, _162
	bl	_ZNKSt5ctypeIcE13_M_widen_initEv		//
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	ldr	x2, [x24]	// MEM[(const struct ctype *)_162].D.31376._vptr.facet, MEM[(const struct ctype *)_162].D.31376._vptr.facet
	adrp	x0, _ZNKSt5ctypeIcE8do_widenEc	// tmp288,
	add	x0, x0, :lo12:_ZNKSt5ctypeIcE8do_widenEc	// tmp287, tmp288,
	mov	w1, 10	// _169,
	ldr	x2, [x2, 48]	// _173, MEM[(int (*) () *)_172 + 48B]
	cmp	x2, x0	// _173, tmp287
	beq	.L2558		//,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	mov	x0, x24	//, _162
	blr	x2		// _173
.LEHE16:
	and	w1, w0, 255	// _169,
	b	.L2558		//
	.p2align 2
.L2607:
.LEHB17:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:827: 	  _M_default_append(__new_size - size());
	bl	_ZNSt6vectorImSaImEE17_M_default_appendEm		//
	ldp	x20, x23, [x21]	// prephitmp_45, _54, MEM[(int * const &)config_vec_37(D)]
	b	.L2533		//
	.p2align 2
.L2609:
	sub	x1, x0, x1	//, _16, tmp224
	ldr	x0, [sp, 104]	//, %sfp
	bl	_ZNSt6vectorImSaImEE17_M_default_appendEm		//
.LEHE17:
// linux-perf-events.h:57:   }
	ldp	x19, x20, [sp, 16]	//,,
	ldp	x21, x22, [sp, 32]	//,,
	ldp	x23, x24, [sp, 48]	//,,
	ldp	x25, x26, [sp, 64]	//,,
	ldp	x27, x28, [sp, 80]	//,,
	ldp	x29, x30, [sp], 240	//,,,
	.cfi_remember_state
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 27
	.cfi_restore 28
	.cfi_restore 25
	.cfi_restore 26
	.cfi_restore 23
	.cfi_restore 24
	.cfi_restore 21
	.cfi_restore 22
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
	ret	
	.p2align 2
.L2611:
	.cfi_restore_state
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:219: 	    _M_data(_M_create(__dnew, size_type(0)));
	mov	x2, 0	//,
	add	x1, sp, 208	//,,
	add	x0, sp, 176	// tmp353,,
.LEHB18:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm		//
.LEHE18:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	ldr	x1, [sp, 208]	// __dnew, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x0, [sp, 176]	// _19, MEM[(char * *)&D.63695]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x1, [sp, 192]	// __dnew, MEM[(size_type *)&D.63695 + 16B]
.L2541:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x2, x26	//, _113
	mov	x1, x24	//, pretmp_46
	bl	memcpy		//
	ldr	x0, [sp, 176]	// prephitmp_96, MEM[(const struct basic_string *)&D.63695]
	ldr	x26, [sp, 208]	// _113, __dnew
	b	.L2543		//
	.p2align 2
.L2614:
	ldp	x2, x3, [x1, 16]	// _151, MEM[(char * {ref-all})iftmp.58_148 + 16B]
	stp	x2, x3, [sp, 224]	// _151, MEM[(char * {ref-all})&D.63696 + 16B]
	b	.L2555		//
	.p2align 2
.L2613:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1932: 			  _M_limit(__pos, __n1), __s, __n2);
	mov	x2, 0	//,
	mov	x1, 0	//,
	add	x0, sp, 144	// tmp359,,
.LEHB19:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm		//
.LEHE19:
	b	.L2606		//
.L2615:
.LEHB20:
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:50: 	__throw_bad_cast();
	bl	_ZSt16__throw_bad_castv		//
.LEHE20:
.L2610:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:212: 	  std::__throw_logic_error(__N("basic_string::"
	adrp	x0, .LC6	// tmp241,
	add	x0, x0, :lo12:.LC6	//, tmp241,
.LEHB21:
	bl	_ZSt19__throw_logic_errorPKc		//
.LEHE21:
.L2612:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:312: 	  __throw_length_error(__N(__s));
	adrp	x0, .LC8	// tmp255,
	add	x0, x0, :lo12:.LC8	//, tmp255,
.LEHB22:
	bl	_ZSt20__throw_length_errorPKc		//
.LEHE22:
.L2585:
	mov	x20, x0	// tmp264,
.L2549:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 112]	// _64, MEM[(const struct basic_string *)&D.50021]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 128	// tmp320,,
	cmp	x0, x1	// _64, tmp320
	beq	.L2576		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2576:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [x19, 152]	// _65, MEM[(struct vector *)this_25(D) + 152B].D.42087._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L2577	// _65,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2577:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [x19, 128]	// _66, MEM[(struct vector *)this_25(D) + 128B].D.42087._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L2578	// _66,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2578:
	mov	x0, x20	//, tmp321
.LEHB23:
	bl	_Unwind_Resume		//
.LEHE23:
.L2584:
	mov	x20, x0	// tmp321,
	b	.L2576		//
.L2589:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 176]	// _115, MEM[(const struct basic_string *)&D.63695]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x2, sp, 192	// tmp263,,
	mov	x20, x0	// tmp265,
	cmp	x1, x2	// _115, tmp263
	beq	.L2549		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _115
	bl	_ZdlPv		//
	b	.L2549		//
.L2586:
	mov	x20, x0	// tmp306,
.L2568:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 176]	// _110, MEM[(const struct basic_string *)&D.63695]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 192	// tmp309,,
	cmp	x0, x1	// _110, tmp309
	beq	.L2549		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L2549		//
.L2587:
	mov	x20, x0	// tmp300,
.L2566:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 144]	// _109, MEM[(const struct basic_string *)&D.63694]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 160	// tmp305,,
	cmp	x0, x1	// _109, tmp305
	beq	.L2568		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L2568		//
.L2588:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x2, [sp, 208]	// _108, MEM[(const struct basic_string *)&D.63696]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 224	// tmp299,,
	mov	x20, x0	// tmp301,
	cmp	x2, x1	// _108, tmp299
	beq	.L2566		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x2	//, _108
	bl	_ZdlPv		//
	b	.L2566		//
	.cfi_endproc
.LFE2303:
	.section	.gcc_except_table
.LLSDA2303:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE2303-.LLSDACSB2303
.LLSDACSB2303:
	.uleb128 .LEHB12-.LFB2303
	.uleb128 .LEHE12-.LEHB12
	.uleb128 .L2584-.LFB2303
	.uleb128 0
	.uleb128 .LEHB13-.LFB2303
	.uleb128 .LEHE13-.LEHB13
	.uleb128 .L2589-.LFB2303
	.uleb128 0
	.uleb128 .LEHB14-.LFB2303
	.uleb128 .LEHE14-.LEHB14
	.uleb128 .L2586-.LFB2303
	.uleb128 0
	.uleb128 .LEHB15-.LFB2303
	.uleb128 .LEHE15-.LEHB15
	.uleb128 .L2587-.LFB2303
	.uleb128 0
	.uleb128 .LEHB16-.LFB2303
	.uleb128 .LEHE16-.LEHB16
	.uleb128 .L2588-.LFB2303
	.uleb128 0
	.uleb128 .LEHB17-.LFB2303
	.uleb128 .LEHE17-.LEHB17
	.uleb128 .L2584-.LFB2303
	.uleb128 0
	.uleb128 .LEHB18-.LFB2303
	.uleb128 .LEHE18-.LEHB18
	.uleb128 .L2585-.LFB2303
	.uleb128 0
	.uleb128 .LEHB19-.LFB2303
	.uleb128 .LEHE19-.LEHB19
	.uleb128 .L2587-.LFB2303
	.uleb128 0
	.uleb128 .LEHB20-.LFB2303
	.uleb128 .LEHE20-.LEHB20
	.uleb128 .L2588-.LFB2303
	.uleb128 0
	.uleb128 .LEHB21-.LFB2303
	.uleb128 .LEHE21-.LEHB21
	.uleb128 .L2585-.LFB2303
	.uleb128 0
	.uleb128 .LEHB22-.LFB2303
	.uleb128 .LEHE22-.LEHB22
	.uleb128 .L2589-.LFB2303
	.uleb128 0
	.uleb128 .LEHB23-.LFB2303
	.uleb128 .LEHE23-.LEHB23
	.uleb128 0
	.uleb128 0
.LLSDACSE2303:
	.section	.text._ZN11LinuxEventsILi0EEC2ESt6vectorIiSaIiEE,"axG",@progbits,_ZN11LinuxEventsILi0EEC5ESt6vectorIiSaIiEE,comdat
	.size	_ZN11LinuxEventsILi0EEC2ESt6vectorIiSaIiEE, .-_ZN11LinuxEventsILi0EEC2ESt6vectorIiSaIiEE
	.weak	_ZN11LinuxEventsILi0EEC1ESt6vectorIiSaIiEE
	.set	_ZN11LinuxEventsILi0EEC1ESt6vectorIiSaIiEE,_ZN11LinuxEventsILi0EEC2ESt6vectorIiSaIiEE
	.text
	.align	2
	.p2align 3,,7
	.type	_Z4testIXadL_ZL12fast_decoderPjRjjmEEEvPKcc.constprop.151, %function
_Z4testIXadL_ZL12fast_decoderPjRjjmEEEvPKcc.constprop.151:
.LFB3176:
	.cfi_startproc
	.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
	.cfi_lsda 0x1b,.LLSDA3176
	sub	sp, sp, #608	//,,
	.cfi_def_cfa_offset 608
// bitmapdecoding.cpp:208:   uint64_t *array = build_bitmap(filename, target, &wordcount);
	mov	w1, 44	//,
	adrp	x0, .LC10	// tmp530,
	add	x2, sp, 120	//,,
	add	x0, x0, :lo12:.LC10	//, tmp530,
// bitmapdecoding.cpp:206: void test(const char *filename, char target) {
	stp	x29, x30, [sp]	//,,
	.cfi_offset 29, -608
	.cfi_offset 30, -600
	mov	x29, sp	//,
	stp	x21, x22, [sp, 32]	//,,
	stp	x25, x26, [sp, 64]	//,,
	stp	x27, x28, [sp, 80]	//,,
	str	d8, [sp, 96]	//,
.LEHB24:
	.cfi_offset 21, -576
	.cfi_offset 22, -568
	.cfi_offset 25, -544
	.cfi_offset 26, -536
	.cfi_offset 27, -528
	.cfi_offset 28, -520
	.cfi_offset 72, -512
// bitmapdecoding.cpp:208:   uint64_t *array = build_bitmap(filename, target, &wordcount);
	bl	_Z12build_bitmapPKccPm		//
	mov	x21, x0	// _1,
	stp	x19, x20, [sp, 16]	//,,
	.cfi_offset 20, -584
	.cfi_offset 19, -592
// bitmapdecoding.cpp:209:   uint32_t *bigarray = new uint32_t[wordcount * 64];
	mov	x1, 2305843009213693950	// tmp532,
// bitmapdecoding.cpp:209:   uint32_t *bigarray = new uint32_t[wordcount * 64];
	ldr	x0, [sp, 120]	// wordcount.105_2, wordcount
// bitmapdecoding.cpp:209:   uint32_t *bigarray = new uint32_t[wordcount * 64];
	cmp	x1, x0, lsl 6	// tmp532, wordcount.105_2,
	bcc	.L2617		//,
	lsl	x0, x0, 8	//, wordcount.105_2,
	bl	_Znam		//
.LEHE24:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	add	x1, sp, 432	// tmp1098,,
// bitmapdecoding.cpp:209:   uint32_t *bigarray = new uint32_t[wordcount * 64];
	mov	x19, x0	// _5,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	add	x0, sp, 152	// tmp1099,,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:96: 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [sp, 152]	//,, MEM[(struct _Vector_impl *)&evts]._M_start
	str	xzr, [sp, 168]	//, MEM[(struct _Vector_impl *)&evts]._M_end_of_storage
// bitmapdecoding.cpp:213:   evts.push_back(PERF_COUNT_HW_CPU_CYCLES);
	str	wzr, [sp, 432]	//, D.62307
.LEHB25:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	bl	_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_		//
// bitmapdecoding.cpp:214:   evts.push_back(PERF_COUNT_HW_INSTRUCTIONS);
	mov	w2, 1	// tmp537,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	add	x1, sp, 432	// tmp1100,,
	add	x0, sp, 152	// tmp1101,,
// bitmapdecoding.cpp:214:   evts.push_back(PERF_COUNT_HW_INSTRUCTIONS);
	str	w2, [sp, 432]	// tmp537, D.62306
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	bl	_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_		//
// bitmapdecoding.cpp:215:   evts.push_back(PERF_COUNT_HW_BRANCH_MISSES);
	mov	w2, 5	// tmp540,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	add	x1, sp, 432	// tmp1102,,
	add	x0, sp, 152	// tmp1103,,
// bitmapdecoding.cpp:215:   evts.push_back(PERF_COUNT_HW_BRANCH_MISSES);
	str	w2, [sp, 432]	// tmp540, D.62305
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	bl	_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_		//
// bitmapdecoding.cpp:216:   evts.push_back(PERF_COUNT_HW_CACHE_REFERENCES);
	mov	w2, 2	// tmp543,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	add	x1, sp, 432	// tmp1104,,
	add	x0, sp, 152	// tmp1105,,
// bitmapdecoding.cpp:216:   evts.push_back(PERF_COUNT_HW_CACHE_REFERENCES);
	str	w2, [sp, 432]	// tmp543, D.62304
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	bl	_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_		//
// bitmapdecoding.cpp:217:   evts.push_back(PERF_COUNT_HW_CACHE_MISSES);
	mov	w2, 3	// tmp546,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	add	x0, sp, 152	// tmp1106,,
	add	x1, sp, 432	// tmp1107,,
// bitmapdecoding.cpp:217:   evts.push_back(PERF_COUNT_HW_CACHE_MISSES);
	str	w2, [sp, 432]	// tmp546, D.62303
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	bl	_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldp	x1, x0, [sp, 152]	// _202, _203, MEM[(int * *)&evts]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [sp, 400]	//,, MEM[(struct _Vector_impl *)&D.62302]._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x3, 0	// _209,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	str	xzr, [sp, 416]	//, MEM[(struct _Vector_impl *)&D.62302]._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x20, x0, x1	// _196, _203, _202
	asr	x2, x20, 2	// tmp551, _196,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	cbz	x2, .L2620	// tmp551,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	mov	x0, 4611686018427387903	// tmp552,
	cmp	x2, x0	// tmp551, tmp552
	bhi	.L2915		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x20	//, _196
	bl	_Znwm		//
.LEHE25:
	mov	x3, x0	// _209,
	ldp	x1, x0, [sp, 152]	// _202, _203, MEM[(int * *)&evts]
.L2620:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	add	x2, x3, x20	// tmp554, _209, _196
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:312: 	this->_M_impl._M_finish = this->_M_impl._M_start;
	stp	x3, x3, [sp, 400]	// _209, _209, MEM[(struct _Vector_base *)&D.62302]._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	cmp	x1, x0	// _202, _203
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:366: 	  const ptrdiff_t _Num = __last - __first;
	sub	x20, x0, x1	// _669, _203, _202
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	str	x2, [sp, 416]	// tmp554, MEM[(struct _Vector_base *)&D.62302]._M_impl._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	beq	.L2622		//,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:368: 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
	mov	x0, x3	//, _209
	mov	x2, x20	//, _669
	bl	memmove		//
	mov	x3, x0	// _209,
.L2622:
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:369: 	  return __result + _Num;
	add	x3, x3, x20	// tmp555, _209, _669
// bitmapdecoding.cpp:218:   LinuxEvents<PERF_TYPE_HARDWARE> unified(evts);
	add	x1, sp, 400	// tmp1108,,
	add	x0, sp, 432	// tmp1109,,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:462: 	this->_M_impl._M_finish =
	str	x3, [sp, 408]	// tmp555, D.62302.D.42966._M_impl._M_finish
.LEHB26:
// bitmapdecoding.cpp:218:   LinuxEvents<PERF_TYPE_HARDWARE> unified(evts);
	bl	_ZN11LinuxEventsILi0EEC1ESt6vectorIiSaIiEE		//
.LEHE26:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 400]	// _6, D.62302.D.42966._M_impl._M_start
	stp	x23, x24, [sp, 48]	//,,
	.cfi_offset 24, -552
	.cfi_offset 23, -560
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L2623	// _6,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2623:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldp	x0, x1, [sp, 152]	// MEM[(int * *)&evts], MEM[(int * *)&evts + 8B], MEM[(int * *)&evts]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:96: 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [sp, 176]	//,, MEM[(struct _Vector_impl *)&results]._M_start
	stp	xzr, xzr, [sp, 192]	//,, MEM[(struct _Vector_impl *)&results]._M_end_of_storage
	stp	xzr, xzr, [sp, 208]	//,, MEM[(struct _Vector_impl *)&allresults]._M_finish
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x1, x1, x0	// tmp558, MEM[(int * *)&evts + 8B], MEM[(int * *)&evts]
	asr	x1, x1, 2	// tmp561, tmp558,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:826: 	if (__new_size > size())
	cbnz	x1, .L2624	// tmp561,
.L2626:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x23, sp, 352	// tmp1090,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x25, sp, 288	// tmp1092,,
	add	x24, sp, 200	// tmp1065,,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	w22, 10	// ivtmp_774,
	.p2align 3
.L2625:
// linux-perf-events.h:62:     if (ioctl(fd, PERF_EVENT_IOC_RESET, PERF_IOC_FLAG_GROUP) == -1) {
	ldr	w0, [sp, 432]	//, unified.fd
	mov	w2, 1	//,
	mov	x1, 9219	//,
	bl	ioctl		//
// linux-perf-events.h:62:     if (ioctl(fd, PERF_EVENT_IOC_RESET, PERF_IOC_FLAG_GROUP) == -1) {
	cmn	w0, #1	//,
	beq	.L2916		//,
.L2627:
// linux-perf-events.h:66:     if (ioctl(fd, PERF_EVENT_IOC_ENABLE, PERF_IOC_FLAG_GROUP) == -1) {
	ldr	w0, [sp, 432]	//, unified.fd
	mov	w2, 1	//,
	mov	x1, 9216	//,
	bl	ioctl		//
// linux-perf-events.h:66:     if (ioctl(fd, PERF_EVENT_IOC_ENABLE, PERF_IOC_FLAG_GROUP) == -1) {
	cmn	w0, #1	//,
	beq	.L2917		//,
.L2660:
// bitmapdecoding.cpp:226:     for (size_t idx = 0; idx < wordcount; idx++) {
	ldr	x6, [sp, 120]	// wordcount.106_1128, wordcount
	cbz	x6, .L2801	// wordcount.106_1128,
.L2925:
	mov	w1, 0	// matches,
	mov	x4, 0	// idx,
	.p2align 3
.L2694:
// bitmapdecoding.cpp:227:       F(bigarray, matches, idx, array[idx]);
	ldr	x0, [x21, x4, lsl 3]	// _18, MEM[base: _1, index: idx_941, step: 8, offset: 0B]
// bitmapdecoding.cpp:44:   return __builtin_popcountll(input_num);
	fmov	d0, x0	// tmp1139, _18
	cnt	v0.8b, v0.8b	// tmp740, tmp1139
	addv	b0, v0.8b	// tmp742, tmp740
	umov	w2, v0.b[0]	// tmp741, tmp742,
	and	x2, x2, 255	// tmp738, tmp741
// bitmapdecoding.cpp:173:   uint32_t next_base = base + cnt;
	add	w20, w1, w2	// next_base, matches, tmp738
// bitmapdecoding.cpp:174:   if (bits != 0u) {
	cbz	x0, .L2699	// _18,
// bitmapdecoding.cpp:176:     bits = bits & (bits - 1);
	sub	x5, x0, #1	// tmp747, _18,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x3, x0	// tmp743, _18
// bitmapdecoding.cpp:176:     bits = bits & (bits - 1);
	and	x5, x5, x0	// bits, tmp747, _18
// bitmapdecoding.cpp:177:     base_ptr[base + 1] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w9, w1, 1	// tmp750, matches,
// bitmapdecoding.cpp:178:     bits = bits & (bits - 1);
	sub	x0, x5, #1	// _421, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x3, x3	// tmp743, tmp743
// bitmapdecoding.cpp:178:     bits = bits & (bits - 1);
	and	x0, x5, x0	// bits, bits, _421
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x5, x5	// tmp748, bits
// bitmapdecoding.cpp:175:     base_ptr[base + 0] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w3, w4, w3	// tmp746, idx, tmp743
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x5, x5	// tmp748, tmp748
// bitmapdecoding.cpp:177:     base_ptr[base + 1] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w5, w4, w5	// tmp752, idx, tmp748
// bitmapdecoding.cpp:179:     base_ptr[base + 2] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w8, w1, 2	// tmp755, matches,
// bitmapdecoding.cpp:175:     base_ptr[base + 0] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w3, [x19, w1, uxtw 2]	// tmp746, *_409
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x3, x0	// tmp753, bits
	clz	x3, x3	// tmp753, tmp753
// bitmapdecoding.cpp:177:     base_ptr[base + 1] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w5, [x19, x9, lsl 2]	// tmp752, *_419
// bitmapdecoding.cpp:180:     bits = bits & (bits - 1);
	sub	x5, x0, #1	// _431, bits,
// bitmapdecoding.cpp:181:     base_ptr[base + 3] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w7, w1, 3	// tmp760, matches,
// bitmapdecoding.cpp:180:     bits = bits & (bits - 1);
	and	x0, x0, x5	// bits, bits, _431
// bitmapdecoding.cpp:179:     base_ptr[base + 2] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w3, w4, w3	// tmp757, idx, tmp753
// bitmapdecoding.cpp:179:     base_ptr[base + 2] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w3, [x19, x8, lsl 2]	// tmp757, *_429
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x3, x0	// tmp758, bits
	clz	x3, x3	// tmp758, tmp758
// bitmapdecoding.cpp:184:   if (cnt > 4) {
	cmp	w2, 4	// tmp738,
// bitmapdecoding.cpp:181:     base_ptr[base + 3] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w3, w4, w3	// tmp762, idx, tmp758
// bitmapdecoding.cpp:181:     base_ptr[base + 3] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w3, [x19, x7, lsl 2]	// tmp762, *_439
// bitmapdecoding.cpp:182:     bits = bits & (bits - 1);
	sub	x3, x0, #1	// _441, bits,
	mov	w7, w4	// _1155, idx
// bitmapdecoding.cpp:182:     bits = bits & (bits - 1);
	and	x0, x0, x3	// bits, bits, _441
// bitmapdecoding.cpp:184:   if (cnt > 4) {
	ble	.L2699		//,
// bitmapdecoding.cpp:186:     bits = bits & (bits - 1);
	sub	x5, x0, #1	// _452, bits,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x3, x0	// tmp763, bits
// bitmapdecoding.cpp:186:     bits = bits & (bits - 1);
	and	x5, x0, x5	// bits, bits, _452
// bitmapdecoding.cpp:185:     base_ptr[base + 4] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w11, w1, 4	// tmp765, matches,
// bitmapdecoding.cpp:188:     bits = bits & (bits - 1);
	sub	x0, x5, #1	// _462, bits,
// bitmapdecoding.cpp:187:     base_ptr[base + 5] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w10, w1, 5	// tmp770, matches,
// bitmapdecoding.cpp:188:     bits = bits & (bits - 1);
	and	x0, x5, x0	// bits, bits, _462
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x3, x3	// tmp763, tmp763
	rbit	x5, x5	// tmp768, bits
// bitmapdecoding.cpp:185:     base_ptr[base + 4] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w3, w4, w3	// tmp767, idx, tmp763
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x5, x5	// tmp768, tmp768
// bitmapdecoding.cpp:189:     base_ptr[base + 6] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w9, w1, 6	// tmp775, matches,
// bitmapdecoding.cpp:187:     base_ptr[base + 5] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w5, w4, w5	// tmp772, idx, tmp768
// bitmapdecoding.cpp:185:     base_ptr[base + 4] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w3, [x19, x11, lsl 2]	// tmp767, *_450
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x3, x0	// tmp773, bits
// bitmapdecoding.cpp:187:     base_ptr[base + 5] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w5, [x19, x10, lsl 2]	// tmp772, *_460
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x3, x3	// tmp773, tmp773
// bitmapdecoding.cpp:190:     bits = bits & (bits - 1);
	sub	x5, x0, #1	// _472, bits,
// bitmapdecoding.cpp:190:     bits = bits & (bits - 1);
	and	x0, x0, x5	// bits, bits, _472
// bitmapdecoding.cpp:189:     base_ptr[base + 6] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w3, w4, w3	// tmp777, idx, tmp773
// bitmapdecoding.cpp:191:     base_ptr[base + 7] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w8, w1, 7	// tmp780, matches,
// bitmapdecoding.cpp:189:     base_ptr[base + 6] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w3, [x19, x9, lsl 2]	// tmp777, *_470
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x3, x0	// tmp778, bits
// bitmapdecoding.cpp:194:   if (cnt > 8) {
	cmp	w2, 8	// tmp738,
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	clz	x3, x3	// tmp778, tmp778
// bitmapdecoding.cpp:191:     base_ptr[base + 7] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w3, w4, w3	// tmp782, idx, tmp778
// bitmapdecoding.cpp:191:     base_ptr[base + 7] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w3, [x19, x8, lsl 2]	// tmp782, *_480
// bitmapdecoding.cpp:192:     bits = bits & (bits - 1);
	sub	x3, x0, #1	// _482, bits,
// bitmapdecoding.cpp:192:     bits = bits & (bits - 1);
	and	x0, x0, x3	// bits, bits, _482
// bitmapdecoding.cpp:194:   if (cnt > 8) {
	ble	.L2699		//,
// bitmapdecoding.cpp:195:     base += 8;
	add	w1, w1, 8	// matches, matches,
	.p2align 3
.L2700:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x2, x0	// tmp783, bits
	clz	x2, x2	// tmp783, tmp783
// bitmapdecoding.cpp:197:       base_ptr[base] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w2, w7, w2	// tmp786, _1155, tmp783
// bitmapdecoding.cpp:197:       base_ptr[base] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w2, [x19, w1, uxtw 2]	// tmp786, *_492
// bitmapdecoding.cpp:198:       bits = bits & (bits - 1);
	sub	x2, x0, #1	// _494, bits,
// bitmapdecoding.cpp:199:       base++;
	add	w1, w1, 1	// matches, matches,
// bitmapdecoding.cpp:200:     } while (bits != 0);
	ands	x0, x0, x2	// bits, bits, _494
	bne	.L2700		//,
.L2699:
// bitmapdecoding.cpp:226:     for (size_t idx = 0; idx < wordcount; idx++) {
	add	x4, x4, 1	// idx, idx,
// bitmapdecoding.cpp:173:   uint32_t next_base = base + cnt;
	mov	w1, w20	// matches, next_base
// bitmapdecoding.cpp:226:     for (size_t idx = 0; idx < wordcount; idx++) {
	cmp	x4, x6	// idx, wordcount.106_1128
	bne	.L2694		//,
.L2693:
// linux-perf-events.h:72:     if (ioctl(fd, PERF_EVENT_IOC_DISABLE, PERF_IOC_FLAG_GROUP) == -1) {
	ldr	w0, [sp, 432]	//, unified.fd
	mov	w2, 1	//,
	mov	x1, 9217	//,
	bl	ioctl		//
// linux-perf-events.h:72:     if (ioctl(fd, PERF_EVENT_IOC_DISABLE, PERF_IOC_FLAG_GROUP) == -1) {
	cmn	w0, #1	//,
	beq	.L2918		//,
.L2701:
// linux-perf-events.h:76:     if (read(fd, temp_result_vec.data(), temp_result_vec.size() * 8) == -1) {
	ldr	w0, [sp, 432]	//, unified.fd
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldr	x3, [sp, 568]	// MEM[(long unsigned int * *)&unified + 136B], MEM[(long unsigned int * *)&unified + 136B]
// linux-perf-events.h:76:     if (read(fd, temp_result_vec.data(), temp_result_vec.size() * 8) == -1) {
	ldr	x2, [sp, 560]	// _503, MEM[(long unsigned int * *)&unified + 128B]
// linux-perf-events.h:76:     if (read(fd, temp_result_vec.data(), temp_result_vec.size() * 8) == -1) {
	mov	x1, x2	//, _503
	sub	x2, x3, x2	//, MEM[(long unsigned int * *)&unified + 136B], _503
.LEHB27:
	bl	read		//
// linux-perf-events.h:76:     if (read(fd, temp_result_vec.data(), temp_result_vec.size() * 8) == -1) {
	cmn	x0, #1	//,
	beq	.L2919		//,
.L2734:
// linux-perf-events.h:81:     for (uint32_t i = 1; i < temp_result_vec.size(); i += 2) {
	ldr	x5, [sp, 560]	// _81, MEM[(long unsigned int * *)&unified + 128B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldr	x4, [sp, 568]	// MEM[(long unsigned int * *)&unified + 136B], MEM[(long unsigned int * *)&unified + 136B]
	sub	x4, x4, x5	// tmp958, MEM[(long unsigned int * *)&unified + 136B], _81
	asr	x4, x4, 3	// _199, tmp958,
// linux-perf-events.h:81:     for (uint32_t i = 1; i < temp_result_vec.size(); i += 2) {
	cmp	x4, 1	// _199,
	bls	.L2767		//,
// linux-perf-events.h:82:       results[i / 2] = temp_result_vec[i];
	ldr	x6, [sp, 176]	// _520, MEM[(long long unsigned int * *)&results]
// linux-perf-events.h:81:     for (uint32_t i = 1; i < temp_result_vec.size(); i += 2) {
	mov	x1, 1	// _299,
// linux-perf-events.h:82:       results[i / 2] = temp_result_vec[i];
	mov	w0, w1	// i, _299
	.p2align 3
.L2768:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:933: 	return *(this->_M_impl._M_start + __n);
	lsr	w2, w0, 1	// tmp962, i,
// linux-perf-events.h:81:     for (uint32_t i = 1; i < temp_result_vec.size(); i += 2) {
	add	w0, w0, 2	// i, i,
// linux-perf-events.h:82:       results[i / 2] = temp_result_vec[i];
	ldr	x3, [x5, x1, lsl 3]	// *_517, *_517
// linux-perf-events.h:81:     for (uint32_t i = 1; i < temp_result_vec.size(); i += 2) {
	uxtw	x1, w0	// _299, i
// linux-perf-events.h:82:       results[i / 2] = temp_result_vec[i];
	str	x3, [x6, x2, lsl 3]	// *_517, *_522
// linux-perf-events.h:81:     for (uint32_t i = 1; i < temp_result_vec.size(); i += 2) {
	cmp	x4, x1	// _199, _299
	bhi	.L2768		//,
.L2767:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1076: 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
	ldp	x26, x0, [sp, 208]	// _702, allresults.D.44829._M_impl._M_end_of_storage, allresults.D.44829._M_impl._M_finish
	cmp	x26, x0	// _702, allresults.D.44829._M_impl._M_end_of_storage
	beq	.L2771		//,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldp	x0, x27, [sp, 176]	// MEM[(long long unsigned int * *)&results], MEM[(long long unsigned int * *)&results + 8B], MEM[(long long unsigned int * *)&results]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [x26]	//,, MEM[(struct _Vector_impl *)_702]._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x28, x26	// prephitmp_590, _702
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	str	xzr, [x26, 16]	//, MEM[(struct _Vector_impl *)_702]._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x3, 0	// _721,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x27, x27, x0	// _708, MEM[(long long unsigned int * *)&results + 8B], MEM[(long long unsigned int * *)&results]
	asr	x0, x27, 3	// tmp972, _708,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	cbz	x0, .L2773	// tmp972,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	mov	x1, 2305843009213693951	// tmp973,
	cmp	x0, x1	// tmp972, tmp973
	bhi	.L2920		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x27	//, _708
	bl	_Znwm		//
	ldr	x28, [sp, 208]	// prephitmp_590, allresults.D.44829._M_impl._M_finish
	mov	x3, x0	// _721,
.L2773:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:312: 	this->_M_impl._M_finish = this->_M_impl._M_start;
	stp	x3, x3, [x26]	// _721, _721, MEM[(struct _Vector_base *)_702]._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	add	x27, x3, x27	// tmp975, _721, _708
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:463: 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
	ldp	x1, x0, [sp, 176]	// _714, _715, MEM[(long long unsigned int * *)&results]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	str	x27, [x26, 16]	// tmp975, MEM[(struct _Vector_base *)_702]._M_impl._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	cmp	x1, x0	// _714, _715
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:366: 	  const ptrdiff_t _Num = __last - __first;
	sub	x27, x0, x1	// _716, _715, _714
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	beq	.L2776		//,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:368: 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
	mov	x0, x3	//, _721
	mov	x2, x27	//, _716
	bl	memmove		//
	mov	x3, x0	// _721,
.L2776:
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:369: 	  return __result + _Num;
	add	x3, x3, x27	// tmp976, _721, _716
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:462: 	this->_M_impl._M_finish =
	str	x3, [x26, 8]	// tmp976, _702->D.43930._M_impl._M_finish
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1081: 	    ++this->_M_impl._M_finish;
	add	x28, x28, 24	// tmp977, prephitmp_590,
	str	x28, [sp, 208]	// tmp977, allresults.D.44829._M_impl._M_finish
.L2777:
// bitmapdecoding.cpp:223:   for (uint32_t i = 0; i < iterations; i++) {
	subs	w22, w22, #1	// ivtmp_774, ivtmp_774,
	bne	.L2625		//,
// bitmapdecoding.cpp:232:   if (bigarray[0] == 0)
	ldr	w0, [x19]	//, *_5
	cbz	w0, .L2921	// *_5,
.L2778:
// bitmapdecoding.cpp:234:   printf("matches = %u words = %zu 1-bit density %4.3f %% \n", matches,
	ldr	d0, [sp, 120]	// wordcount.108_23, wordcount
// bitmapdecoding.cpp:235:          wordcount, double(matches) / (64 * wordcount) * 100);
	ucvtf	d8, w20	// _24, next_base
// bitmapdecoding.cpp:234:   printf("matches = %u words = %zu 1-bit density %4.3f %% \n", matches,
	mov	x1, 4636737291354636288	// tmp1095,
	fmov	d1, x1	// tmp987, tmp1095
	adrp	x0, .LC16	// tmp989,
	mov	w1, w20	//, next_base
	fmov	x2, d0	//, wordcount.108_23
// bitmapdecoding.cpp:235:          wordcount, double(matches) / (64 * wordcount) * 100);
	shl	d0, d0, 6	// tmp983, wordcount.108_23,
// bitmapdecoding.cpp:234:   printf("matches = %u words = %zu 1-bit density %4.3f %% \n", matches,
	add	x0, x0, :lo12:.LC16	//, tmp989,
// bitmapdecoding.cpp:235:          wordcount, double(matches) / (64 * wordcount) * 100);
	ucvtf	d0, d0	// tmp984, tmp983
	fdiv	d0, d8, d0	// tmp985, _24, tmp984
// bitmapdecoding.cpp:234:   printf("matches = %u words = %zu 1-bit density %4.3f %% \n", matches,
	fmul	d0, d0, d1	//, tmp985, tmp987
	bl	printf		//
// bitmapdecoding.cpp:236:   printf("bytes per index = %4.3f \n", wordcount * 64.0 / matches);
	ldr	d0, [sp, 120]	// wordcount, wordcount
	mov	x0, 4634204016564240384	// tmp1094,
	fmov	d1, x0	// tmp993, tmp1094
// bitmapdecoding.cpp:236:   printf("bytes per index = %4.3f \n", wordcount * 64.0 / matches);
	adrp	x0, .LC17	// tmp996,
	add	x0, x0, :lo12:.LC17	//, tmp996,
// bitmapdecoding.cpp:236:   printf("bytes per index = %4.3f \n", wordcount * 64.0 / matches);
	ucvtf	d0, d0	// tmp990, wordcount
	fmul	d0, d0, d1	// tmp992, tmp990, tmp993
// bitmapdecoding.cpp:236:   printf("bytes per index = %4.3f \n", wordcount * 64.0 / matches);
	fdiv	d0, d0, d8	//, tmp992, _24
	bl	printf		//
// bitmapdecoding.cpp:237:   std::vector<unsigned long long> mins = compute_mins(allresults);
	mov	x1, x24	//, tmp1065
	add	x0, sp, 400	// tmp1169,,
	bl	_ZNSt6vectorIS_IySaIyEESaIS1_EEC1ERKS3_		//
.LEHE27:
	add	x8, sp, 224	//,,
	add	x0, sp, 400	// tmp1170,,
.LEHB28:
	bl	_Z12compute_minsSt6vectorIS_IySaIyEESaIS1_EE		//
.LEHE28:
	add	x0, sp, 400	// tmp1171,,
	bl	_ZNSt6vectorIS_IySaIyEESaIS1_EED1Ev		//
// bitmapdecoding.cpp:238:   std::vector<double> avg = compute_averages(allresults);
	mov	x1, x24	//, tmp1065
	add	x0, sp, 400	// tmp1172,,
.LEHB29:
	bl	_ZNSt6vectorIS_IySaIyEESaIS1_EEC1ERKS3_		//
.LEHE29:
	add	x8, sp, 248	//,,
	add	x0, sp, 400	// tmp1173,,
.LEHB30:
	bl	_Z16compute_averagesSt6vectorIS_IySaIyEESaIS1_EE		//
.LEHE30:
	add	x0, sp, 400	// tmp1174,,
	bl	_ZNSt6vectorIS_IySaIyEESaIS1_EED1Ev		//
// bitmapdecoding.cpp:243:          double(mins[1]) / mins[0], double(mins[0]) / matches,
	ldr	x1, [sp, 224]	// _35, MEM[(long long unsigned int * *)&mins]
// bitmapdecoding.cpp:239:   printf("instructions per cycle %4.2f, cycles per value set:  "
	adrp	x0, .LC18	// tmp1016,
	ldr	d4, [sp, 120]	// wordcount, wordcount
	add	x0, x0, :lo12:.LC18	//, tmp1016,
	ldp	d0, d5, [x1]	// MEM[(value_type &)_35], MEM[(value_type &)_35 + 8], MEM[(value_type &)_35]
	ucvtf	d4, d4	// _46, wordcount
	ucvtf	d0, d0	// _39, MEM[(value_type &)_35]
	ucvtf	d5, d5	// _37, MEM[(value_type &)_35 + 8]
	fdiv	d3, d0, d4	//, _39, _46
	fdiv	d1, d0, d8	//, _39, _24
	fdiv	d4, d5, d4	//, _37, _46
	fdiv	d2, d5, d8	//, _37, _24
	fdiv	d0, d5, d0	//, _37, _39
.LEHB31:
	bl	printf		//
// bitmapdecoding.cpp:247:          double(mins[0]) / (64 * wordcount),
	ldr	d0, [sp, 120]	// wordcount, wordcount
// bitmapdecoding.cpp:246:   printf(" cycles per input byte %4.2f instructions per input byte %4.2f \n",
	adrp	x0, .LC19	// tmp1026,
// bitmapdecoding.cpp:247:          double(mins[0]) / (64 * wordcount),
	ldr	x1, [sp, 224]	// _49, MEM[(long long unsigned int * *)&mins]
// bitmapdecoding.cpp:246:   printf(" cycles per input byte %4.2f instructions per input byte %4.2f \n",
	add	x0, x0, :lo12:.LC19	//, tmp1026,
// bitmapdecoding.cpp:247:          double(mins[0]) / (64 * wordcount),
	shl	d0, d0, 6	// tmp1017, wordcount,
// bitmapdecoding.cpp:246:   printf(" cycles per input byte %4.2f instructions per input byte %4.2f \n",
	ldp	d2, d1, [x1]	// MEM[(value_type &)_49], MEM[(value_type &)_49 + 8], MEM[(value_type &)_49]
	ucvtf	d0, d0	// _54, tmp1017
	ucvtf	d2, d2	// tmp1022, MEM[(value_type &)_49]
	ucvtf	d1, d1	// tmp1019, MEM[(value_type &)_49 + 8]
	fdiv	d1, d1, d0	//, tmp1019, _54
	fdiv	d0, d2, d0	//, tmp1022, _54
	bl	printf		//
// bitmapdecoding.cpp:250:   printf("min: %8llu cycles, %8llu instructions, \t%8llu branch mis., %8llu "
	ldr	x5, [sp, 224]	// _59, MEM[(long long unsigned int * *)&mins]
	adrp	x0, .LC20	// tmp1033,
	add	x0, x0, :lo12:.LC20	//, tmp1033,
	ldp	x1, x2, [x5]	//,, MEM[(value_type &)_59]
	ldp	x3, x4, [x5, 16]	//,, MEM[(value_type &)_59 + 16]
	ldr	x5, [x5, 32]	//, MEM[(value_type &)_59 + 32]
	bl	printf		//
// bitmapdecoding.cpp:253:   printf("avg: %8.1f cycles, %8.1f instructions, \t%8.1f branch mis., %8.1f "
	ldr	x1, [sp, 248]	// _65, MEM[(double * *)&avg]
	adrp	x0, .LC21	// tmp1040,
	add	x0, x0, :lo12:.LC21	//, tmp1040,
	ldp	d0, d1, [x1]	//,, MEM[(value_type &)_65]
	ldp	d2, d3, [x1, 16]	//,, MEM[(value_type &)_65 + 16]
	ldr	d4, [x1, 32]	//, MEM[(value_type &)_65 + 32]
	bl	printf		//
// bitmapdecoding.cpp:256:   printf("\n");
	mov	w0, 10	//,
	bl	putchar		//
.LEHE31:
// bitmapdecoding.cpp:257:   delete[] array;
	cbz	x21, .L2779	// _1,
	mov	x0, x21	//, _1
	bl	_ZdaPv		//
.L2779:
// bitmapdecoding.cpp:258:   delete[] bigarray;
	mov	x0, x19	//, _5
	bl	_ZdaPv		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 248]	// _71, avg.D.45803._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L2780	// _71,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2780:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 224]	// _72, mins.D.43930._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L2781	// _72,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2781:
// bitmapdecoding.cpp:220:   std::vector<std::vector<unsigned long long>> allresults;
	mov	x0, x24	//, tmp1065
	bl	_ZNSt6vectorIS_IySaIyEESaIS1_EED1Ev		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 176]	// _73, results.D.43930._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L2782	// _73,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2782:
// bitmapdecoding.cpp:218:   LinuxEvents<PERF_TYPE_HARDWARE> unified(evts);
	add	x0, sp, 432	// tmp1175,,
	bl	_ZN11LinuxEventsILi0EED1Ev		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 152]	// _74, evts.D.42966._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L2616	// _74,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2616:
// bitmapdecoding.cpp:259: }
	ldp	x29, x30, [sp]	//,,
	ldp	x19, x20, [sp, 16]	//,,
	.cfi_remember_state
	.cfi_restore 20
	.cfi_restore 19
	ldp	x21, x22, [sp, 32]	//,,
	ldp	x23, x24, [sp, 48]	//,,
	.cfi_restore 24
	.cfi_restore 23
	ldp	x25, x26, [sp, 64]	//,,
	ldp	x27, x28, [sp, 80]	//,,
	ldr	d8, [sp, 96]	//,
	add	sp, sp, 608	//,,
	.cfi_restore 72
	.cfi_restore 29
	.cfi_restore 30
	.cfi_restore 27
	.cfi_restore 28
	.cfi_restore 25
	.cfi_restore 26
	.cfi_restore 21
	.cfi_restore 22
	.cfi_def_cfa_offset 0
	ret	
	.p2align 2
.L2918:
	.cfi_restore_state
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x26, sp, 304	// tmp1068,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x1, .LC13	// tmp791,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x4, x26, 16	// tmp789, tmp1068,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x2, .LC13+29	// tmp793,
	mov	x0, x26	//, tmp1068
	add	x1, x1, :lo12:.LC13	//, tmp791,
	mov	w3, 0	//,
	add	x2, x2, :lo12:.LC13+29	//, tmp793,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	str	x4, [sp, 304]	// tmp789, MEM[(struct _Alloc_hider *)&D.63924]._M_p
.LEHB32:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
// linux-perf-events.h:88:     if (working)
	ldrb	w0, [sp, 436]	// unified.working, unified.working
	ldr	x27, [sp, 304]	// prephitmp_616, MEM[(const struct basic_string *)&D.63924]
	cbnz	w0, .L2922	// unified.working,
.L2702:
// linux-perf-events.h:90:     working = false;
	strb	wzr, [sp, 436]	//, unified.working
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x26, x26, 16	// tmp860, tmp1068,
	cmp	x27, x26	// prephitmp_616, tmp860
	beq	.L2701		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x27	//, prephitmp_616
	bl	_ZdlPv		//
	b	.L2701		//
	.p2align 2
.L2916:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x1, .LC11	// tmp567,
	adrp	x2, .LC11+27	// tmp569,
	add	x1, x1, :lo12:.LC11	//, tmp567,
	add	x2, x2, :lo12:.LC11+27	//, tmp569,
	mov	w3, 0	//,
	add	x0, sp, 336	// tmp1112,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	str	x23, [sp, 336]	// tmp1090, MEM[(struct _Alloc_hider *)&D.63797]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
// linux-perf-events.h:88:     if (working)
	ldrb	w0, [sp, 436]	// unified.working, unified.working
	ldr	x20, [sp, 336]	// pretmp_1037, MEM[(const struct basic_string *)&D.63797]
	cbnz	w0, .L2923	// unified.working,
.L2628:
// linux-perf-events.h:90:     working = false;
	strb	wzr, [sp, 436]	//, unified.working
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x20, x23	// pretmp_1037, tmp1090
	beq	.L2627		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x20	//, pretmp_1037
	bl	_ZdlPv		//
// linux-perf-events.h:66:     if (ioctl(fd, PERF_EVENT_IOC_ENABLE, PERF_IOC_FLAG_GROUP) == -1) {
	ldr	w0, [sp, 432]	//, unified.fd
	mov	w2, 1	//,
	mov	x1, 9216	//,
	bl	ioctl		//
// linux-perf-events.h:66:     if (ioctl(fd, PERF_EVENT_IOC_ENABLE, PERF_IOC_FLAG_GROUP) == -1) {
	cmn	w0, #1	//,
	bne	.L2660		//,
	.p2align 3
.L2917:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x1, .LC12	// tmp653,
	adrp	x2, .LC12+28	// tmp655,
	add	x1, x1, :lo12:.LC12	//, tmp653,
	add	x2, x2, :lo12:.LC12+28	//, tmp655,
	mov	w3, 0	//,
	add	x0, sp, 336	// tmp1127,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	str	x23, [sp, 336]	// tmp1090, MEM[(struct _Alloc_hider *)&D.63796]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
// linux-perf-events.h:88:     if (working)
	ldrb	w0, [sp, 436]	// unified.working, unified.working
	ldr	x20, [sp, 336]	// prephitmp_598, MEM[(const struct basic_string *)&D.63796]
	cbnz	w0, .L2924	// unified.working,
.L2661:
// linux-perf-events.h:90:     working = false;
	strb	wzr, [sp, 436]	//, unified.working
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x20, x23	// prephitmp_598, tmp1090
	beq	.L2660		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x20	//, prephitmp_598
	bl	_ZdlPv		//
// bitmapdecoding.cpp:226:     for (size_t idx = 0; idx < wordcount; idx++) {
	ldr	x6, [sp, 120]	// wordcount.106_1128, wordcount
	cbnz	x6, .L2925	// wordcount.106_1128,
	.p2align 3
.L2801:
	mov	w20, 0	// next_base,
	b	.L2693		//
	.p2align 2
.L2771:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1085: 	  _M_realloc_insert(end(), __x);
	mov	x1, x26	//, _702
	add	x2, sp, 176	//,,
	mov	x0, x24	//, tmp1065
	bl	_ZNSt6vectorIS_IySaIyEESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_		//
	b	.L2777		//
	.p2align 2
.L2919:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x26, sp, 304	// tmp1068,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x1, .LC14	// tmp879,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x4, x26, 16	// tmp877, tmp1068,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x2, .LC14+4	// tmp881,
	mov	x0, x26	//, tmp1068
	add	x1, x1, :lo12:.LC14	//, tmp879,
	mov	w3, 0	//,
	add	x2, x2, :lo12:.LC14+4	//, tmp881,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	str	x4, [sp, 304]	// tmp877, MEM[(struct _Alloc_hider *)&D.63923]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE32:
// linux-perf-events.h:88:     if (working)
	ldrb	w0, [sp, 436]	// unified.working, unified.working
	ldr	x27, [sp, 304]	// pretmp_659, MEM[(const struct basic_string *)&D.63923]
	cbnz	w0, .L2926	// unified.working,
.L2735:
// linux-perf-events.h:90:     working = false;
	strb	wzr, [sp, 436]	//, unified.working
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x26, x26, 16	// tmp945, tmp1068,
	cmp	x27, x26	// pretmp_659, tmp945
	beq	.L2734		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x27	//, pretmp_659
	bl	_ZdlPv		//
	b	.L2734		//
	.p2align 2
.L2922:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:440:       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
	ldr	x28, [sp, 312]	// _548, MEM[(const struct basic_string *)&D.63924 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	str	x23, [sp, 336]	// tmp1090, MEM[(struct _Alloc_hider *)&D.63936]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:211: 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
	cmn	x27, x28	// prephitmp_616, _548
	ccmp	x27, 0, 0, ne	// prephitmp_616,,,
	beq	.L2927		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:215: 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
	str	x28, [sp, 144]	// _548, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:217: 	if (__dnew > size_type(_S_local_capacity))
	cmp	x28, 15	// _548,
	bhi	.L2928		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:337: 	if (__n == 1)
	cmp	x28, 1	// _548,
	bne	.L2706		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:338: 	  traits_type::assign(*__d, *__s);
	ldrb	w0, [x27]	// _556, MEM[(const char_type &)pretmp_1040]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	w0, [sp, 352]	// _556, MEM[(char_type &)&D.63936 + 16]
.L2707:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:232: 	_M_set_length(__dnew);
	ldr	x1, [sp, 144]	// __dnew.53_557, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x1, [sp, 344]	// __dnew.53_557, MEM[(size_type *)&D.63936 + 8B]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	ldr	x2, [sp, 336]	// MEM[(const struct basic_string *)&D.63936], MEM[(const struct basic_string *)&D.63936]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	mov	x0, 9223372036854775807	// tmp815,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x2, x1]	//, MEM[(char_type &)_559]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	ldr	x1, [sp, 344]	// MEM[(const struct basic_string *)&D.63936 + 8B], MEM[(const struct basic_string *)&D.63936 + 8B]
	sub	x0, x0, x1	// tmp814, tmp815, MEM[(const struct basic_string *)&D.63936 + 8B]
	cmp	x0, 1	// tmp814,
	bls	.L2929		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1268: 	return _M_append(__s, __n);
	adrp	x1, .LC9	// tmp820,
	mov	x2, 2	//,
	add	x1, x1, :lo12:.LC9	//, tmp820,
	add	x0, sp, 336	// tmp1141,,
.LEHB33:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE33:
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	__errno_location		//
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	ldr	w0, [x0]	//, *_533
	bl	strerror		//
	mov	x27, x0	// _535,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x1, sp, 384	// tmp824,,
	str	x1, [sp, 368]	// tmp824, MEM[(struct _Alloc_hider *)&D.63935]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	mov	x2, -1	// iftmp.41_566,
	cbz	x0, .L2710	// _535,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:322: 	return __builtin_strlen(__s);
	bl	strlen		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	add	x2, x27, x0	// iftmp.41_566, _535,
.L2710:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	mov	x1, x27	//, _535
	mov	w3, 0	//,
	add	x0, sp, 368	// tmp1144,,
.LEHB34:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE34:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x3, x4, [sp, 336]	// _571, _568, MEM[(const struct basic_string *)&D.63936]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	mov	x6, 15	// tmp1082,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x1, x2, [sp, 368]	// pretmp_617, _569, MEM[(const struct basic_string *)&D.63935]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 352]	// D.63936.D.21280._M_allocated_capacity, D.63936.D.21280._M_allocated_capacity
	cmp	x3, x23	// _571, tmp1090
	csel	x0, x0, x6, ne	// iftmp.59_573, D.63936.D.21280._M_allocated_capacity, tmp1082,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	add	x5, x4, x2	// __size, _568, _569
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_573
	bls	.L2715		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 384]	// D.63935.D.21280._M_allocated_capacity, D.63935.D.21280._M_allocated_capacity
	add	x7, sp, 384	// tmp836,,
	cmp	x1, x7	// pretmp_617, tmp836
	csel	x0, x0, x6, ne	// iftmp.59_578, D.63935.D.21280._M_allocated_capacity, tmp1082,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_578
	bls	.L2930		//,
.L2715:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	add	x0, sp, 336	// tmp1147,,
.LEHB35:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE35:
.L2902:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x2, sp, 416	// tmp840,,
	str	x2, [sp, 400]	// tmp840, MEM[(struct _Alloc_hider *)&D.63937]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x1, x0	// _581,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x2, [x0], 16	// _584, MEM[(const struct basic_string *)iftmp.58_583]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:544: 	if (__str._M_is_local())
	cmp	x2, x0	// _584, _585
	beq	.L2931		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x2, [sp, 400]	// _584, MEM[(char * *)&D.63937]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:552: 	    _M_capacity(__str._M_allocated_capacity);
	ldr	x2, [x1, 16]	// _587, MEM[(struct basic_string &)iftmp.58_583].D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x2, [sp, 416]	// _587, MEM[(size_type *)&D.63937 + 16B]
.L2719:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:558: 	_M_length(__str.length());
	ldr	x2, [x1, 8]	// _588, MEM[(const struct basic_string *)iftmp.58_583 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x2, [sp, 408]	// _588, MEM[(size_type *)&D.63937 + 8B]
	stp	x0, xzr, [x1]	// _585,, MEM[(char * *)iftmp.58_583]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	adrp	x0, _ZSt4cerr	// tmp844,
	add	x0, x0, :lo12:_ZSt4cerr	//, tmp844,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, 16]	//, MEM[(char_type &)iftmp.58_583 + 16]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	ldp	x1, x2, [sp, 400]	//,, MEM[(const struct basic_string *)&D.63937]
.LEHB36:
	bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l		//
	mov	x28, x0	// _539,
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	ldr	x0, [x0]	// _539->_vptr.basic_ostream, _539->_vptr.basic_ostream
	ldr	x0, [x0, -24]	// MEM[(long int *)_593 + -24B], MEM[(long int *)_593 + -24B]
	add	x0, x28, x0	// tmp847, _539, MEM[(long int *)_593 + -24B]
	ldr	x27, [x0, 240]	// _597, MEM[(const struct __ctype_type * *)_596 + 240B]
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:49:       if (!__f)
	cbz	x27, .L2932	// _597,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:874: 	if (_M_widen_ok)
	ldrb	w0, [x27, 56]	// MEM[(const struct ctype *)_597]._M_widen_ok, MEM[(const struct ctype *)_597]._M_widen_ok
	cbz	w0, .L2721	// MEM[(const struct ctype *)_597]._M_widen_ok,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:875: 	  return _M_widen[static_cast<unsigned char>(__c)];
	ldrb	w1, [x27, 67]	// _606, MEM[(const struct ctype *)_597]._M_widen
.L2722:
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	mov	x0, x28	//, _539
	bl	_ZNSo3putEc		//
// /usr/local/include/c++/8.3.0/ostream:613:     { return __os.flush(); }
	bl	_ZNSo5flushEv		//
.LEHE36:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 400]	// _540, MEM[(const struct basic_string *)&D.63937]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 416	// tmp854,,
	cmp	x0, x1	// _540, tmp854
	beq	.L2723		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2723:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 368]	// _541, MEM[(const struct basic_string *)&D.63935]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 384	// tmp856,,
	cmp	x0, x1	// _541, tmp856
	beq	.L2724		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2724:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 336]	// _542, MEM[(const struct basic_string *)&D.63936]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x0, x23	// _542, tmp1090
	beq	.L2725		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2725:
	ldr	x27, [sp, 304]	// prephitmp_616, MEM[(const struct basic_string *)&D.63924]
	b	.L2702		//
	.p2align 2
.L2923:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:440:       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
	ldr	x26, [sp, 344]	// _247, MEM[(const struct basic_string *)&D.63797 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	str	x25, [sp, 272]	// tmp1092, MEM[(struct _Alloc_hider *)&D.63809]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:211: 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
	cmn	x20, x26	// pretmp_1037, _247
	ccmp	x20, 0, 0, ne	// pretmp_1037,,,
	beq	.L2933		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:215: 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
	str	x26, [sp, 128]	// _247, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:217: 	if (__dnew > size_type(_S_local_capacity))
	cmp	x26, 15	// _247,
	bhi	.L2934		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:337: 	if (__n == 1)
	cmp	x26, 1	// _247,
	bne	.L2632		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:338: 	  traits_type::assign(*__d, *__s);
	ldrb	w0, [x20]	// _255, MEM[(const char_type &)pretmp_1037]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	w0, [sp, 288]	// _255, MEM[(char_type &)&D.63809 + 16]
.L2633:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:232: 	_M_set_length(__dnew);
	ldr	x1, [sp, 128]	// __dnew.53_256, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x1, [sp, 280]	// __dnew.53_256, MEM[(size_type *)&D.63809 + 8B]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	ldr	x2, [sp, 272]	// MEM[(const struct basic_string *)&D.63809], MEM[(const struct basic_string *)&D.63809]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	mov	x0, 9223372036854775807	// tmp591,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x2, x1]	//, MEM[(char_type &)_258]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	ldr	x1, [sp, 280]	// MEM[(const struct basic_string *)&D.63809 + 8B], MEM[(const struct basic_string *)&D.63809 + 8B]
	sub	x0, x0, x1	// tmp590, tmp591, MEM[(const struct basic_string *)&D.63809 + 8B]
	cmp	x0, 1	// tmp590,
	bls	.L2935		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1268: 	return _M_append(__s, __n);
	adrp	x1, .LC9	// tmp596,
	mov	x2, 2	//,
	add	x1, x1, :lo12:.LC9	//, tmp596,
	add	x0, sp, 272	// tmp1114,,
.LEHB37:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE37:
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	__errno_location		//
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	ldr	w0, [x0]	//, *_232
	bl	strerror		//
	mov	x20, x0	// _234,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x1, sp, 384	// tmp600,,
	str	x1, [sp, 368]	// tmp600, MEM[(struct _Alloc_hider *)&D.63808]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	mov	x2, -1	// iftmp.41_265,
	cbz	x0, .L2636	// _234,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:322: 	return __builtin_strlen(__s);
	bl	strlen		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	add	x2, x20, x0	// iftmp.41_265, _234,
.L2636:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	mov	x1, x20	//, _234
	mov	w3, 0	//,
	add	x0, sp, 368	// tmp1117,,
.LEHB38:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE38:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x3, x4, [sp, 272]	// _270, _267, MEM[(const struct basic_string *)&D.63809]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	mov	x6, 15	// tmp1074,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x1, x2, [sp, 368]	// pretmp_605, _268, MEM[(const struct basic_string *)&D.63808]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 288]	// D.63809.D.21280._M_allocated_capacity, D.63809.D.21280._M_allocated_capacity
	cmp	x3, x25	// _270, tmp1092
	csel	x0, x0, x6, ne	// iftmp.59_272, D.63809.D.21280._M_allocated_capacity, tmp1074,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	add	x5, x4, x2	// __size, _267, _268
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_272
	bls	.L2641		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 384]	// D.63808.D.21280._M_allocated_capacity, D.63808.D.21280._M_allocated_capacity
	add	x7, sp, 384	// tmp612,,
	cmp	x1, x7	// pretmp_605, tmp612
	csel	x0, x0, x6, ne	// iftmp.59_277, D.63808.D.21280._M_allocated_capacity, tmp1074,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_277
	bls	.L2936		//,
.L2641:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	add	x0, sp, 272	// tmp1120,,
.LEHB39:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE39:
.L2900:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x2, sp, 416	// tmp616,,
	str	x2, [sp, 400]	// tmp616, MEM[(struct _Alloc_hider *)&D.63810]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x1, x0	// _280,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x2, [x0], 16	// _283, MEM[(const struct basic_string *)iftmp.58_282]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:544: 	if (__str._M_is_local())
	cmp	x2, x0	// _283, _284
	beq	.L2937		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x2, [sp, 400]	// _283, MEM[(char * *)&D.63810]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:552: 	    _M_capacity(__str._M_allocated_capacity);
	ldr	x2, [x1, 16]	// _286, MEM[(struct basic_string &)iftmp.58_282].D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x2, [sp, 416]	// _286, MEM[(size_type *)&D.63810 + 16B]
.L2645:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:558: 	_M_length(__str.length());
	ldr	x2, [x1, 8]	// _287, MEM[(const struct basic_string *)iftmp.58_282 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x2, [sp, 408]	// _287, MEM[(size_type *)&D.63810 + 8B]
	stp	x0, xzr, [x1]	// _284,, MEM[(char * *)iftmp.58_282]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	adrp	x0, _ZSt4cerr	// tmp620,
	add	x0, x0, :lo12:_ZSt4cerr	//, tmp620,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, 16]	//, MEM[(char_type &)iftmp.58_282 + 16]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	ldp	x1, x2, [sp, 400]	//,, MEM[(const struct basic_string *)&D.63810]
.LEHB40:
	bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l		//
	mov	x26, x0	// _238,
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	ldr	x0, [x0]	// _238->_vptr.basic_ostream, _238->_vptr.basic_ostream
	ldr	x0, [x0, -24]	// MEM[(long int *)_292 + -24B], MEM[(long int *)_292 + -24B]
	add	x0, x26, x0	// tmp623, _238, MEM[(long int *)_292 + -24B]
	ldr	x20, [x0, 240]	// _296, MEM[(const struct __ctype_type * *)_295 + 240B]
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:49:       if (!__f)
	cbz	x20, .L2938	// _296,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:874: 	if (_M_widen_ok)
	ldrb	w0, [x20, 56]	// MEM[(const struct ctype *)_296]._M_widen_ok, MEM[(const struct ctype *)_296]._M_widen_ok
	cbz	w0, .L2647	// MEM[(const struct ctype *)_296]._M_widen_ok,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:875: 	  return _M_widen[static_cast<unsigned char>(__c)];
	ldrb	w1, [x20, 67]	// _305, MEM[(const struct ctype *)_296]._M_widen
.L2648:
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	mov	x0, x26	//, _238
	bl	_ZNSo3putEc		//
// /usr/local/include/c++/8.3.0/ostream:613:     { return __os.flush(); }
	bl	_ZNSo5flushEv		//
.LEHE40:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 400]	// _239, MEM[(const struct basic_string *)&D.63810]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 416	// tmp630,,
	cmp	x0, x1	// _239, tmp630
	beq	.L2649		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2649:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 368]	// _240, MEM[(const struct basic_string *)&D.63808]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 384	// tmp632,,
	cmp	x0, x1	// _240, tmp632
	beq	.L2650		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2650:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 272]	// _241, MEM[(const struct basic_string *)&D.63809]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x0, x25	// _241, tmp1092
	beq	.L2651		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2651:
	ldr	x20, [sp, 336]	// pretmp_1037, MEM[(const struct basic_string *)&D.63797]
	b	.L2628		//
.L2924:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:440:       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
	ldr	x27, [sp, 344]	// _334, MEM[(const struct basic_string *)&D.63796 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x26, sp, 304	// tmp1068,,
	add	x0, x26, 16	// tmp658, tmp1068,
	str	x0, [sp, 304]	// tmp658, MEM[(struct _Alloc_hider *)&D.63865]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:211: 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
	cmn	x20, x27	// prephitmp_598, _334
	ccmp	x20, 0, 0, ne	// prephitmp_598,,,
	beq	.L2939		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:215: 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
	str	x27, [sp, 136]	// _334, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:217: 	if (__dnew > size_type(_S_local_capacity))
	cmp	x27, 15	// _334,
	bhi	.L2940		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:337: 	if (__n == 1)
	cmp	x27, 1	// _334,
	bne	.L2665		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:338: 	  traits_type::assign(*__d, *__s);
	ldrb	w0, [x20]	// _342, MEM[(const char_type &)pretmp_633]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	w0, [sp, 320]	// _342, MEM[(char_type &)&D.63865 + 16]
.L2666:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:232: 	_M_set_length(__dnew);
	ldr	x1, [sp, 136]	// __dnew.53_343, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x1, [sp, 312]	// __dnew.53_343, MEM[(size_type *)&D.63865 + 8B]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	ldr	x2, [sp, 304]	// MEM[(const struct basic_string *)&D.63865], MEM[(const struct basic_string *)&D.63865]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	mov	x0, 9223372036854775807	// tmp677,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x2, x1]	//, MEM[(char_type &)_345]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	ldr	x1, [sp, 312]	// MEM[(const struct basic_string *)&D.63865 + 8B], MEM[(const struct basic_string *)&D.63865 + 8B]
	sub	x0, x0, x1	// tmp676, tmp677, MEM[(const struct basic_string *)&D.63865 + 8B]
	cmp	x0, 1	// tmp676,
	bls	.L2941		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1268: 	return _M_append(__s, __n);
	adrp	x1, .LC9	// tmp682,
	mov	x2, 2	//,
	add	x1, x1, :lo12:.LC9	//, tmp682,
	mov	x0, x26	//, tmp1068
.LEHB41:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE41:
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	__errno_location		//
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	ldr	w0, [x0]	//, *_319
	bl	strerror		//
	mov	x20, x0	// _321,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x1, sp, 384	// tmp685,,
	str	x1, [sp, 368]	// tmp685, MEM[(struct _Alloc_hider *)&D.63864]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	cbz	x0, .L2942	// _321,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:322: 	return __builtin_strlen(__s);
	bl	strlen		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	add	x2, x20, x0	// iftmp.41_353, _321,
.L2669:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	mov	x1, x20	//, _321
	mov	w3, 0	//,
	add	x0, sp, 368	// tmp1129,,
.LEHB42:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE42:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x3, x4, [sp, 304]	// _357, _354, MEM[(const struct basic_string *)&D.63865]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	add	x0, x26, 16	// tmp695, tmp1068,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x1, x2, [sp, 368]	// pretmp_572, _355, MEM[(const struct basic_string *)&D.63864]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	mov	x6, 15	// tmp1078,
	cmp	x3, x0	// _357, tmp695
	ldr	x0, [sp, 320]	// D.63865.D.21280._M_allocated_capacity, D.63865.D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	add	x5, x4, x2	// __size, _354, _355
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	csel	x0, x0, x6, ne	// iftmp.59_360, D.63865.D.21280._M_allocated_capacity, tmp1078,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_360
	bls	.L2674		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 384]	// D.63864.D.21280._M_allocated_capacity, D.63864.D.21280._M_allocated_capacity
	add	x7, sp, 384	// tmp697,,
	cmp	x1, x7	// pretmp_572, tmp697
	csel	x6, x0, x6, ne	// iftmp.59_364, D.63864.D.21280._M_allocated_capacity, tmp1078,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x6	// __size, iftmp.59_364
	bls	.L2943		//,
.L2674:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x0, x26	//, tmp1068
.LEHB43:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE43:
.L2901:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x2, sp, 416	// tmp701,,
	str	x2, [sp, 400]	// tmp701, MEM[(struct _Alloc_hider *)&D.63866]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x1, x0	// iftmp.58_369,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x2, [x0], 16	// _370, MEM[(const struct basic_string *)iftmp.58_369]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:544: 	if (__str._M_is_local())
	cmp	x2, x0	// _370, _371
	beq	.L2944		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x2, [sp, 400]	// _370, MEM[(char * *)&D.63866]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:552: 	    _M_capacity(__str._M_allocated_capacity);
	ldr	x2, [x1, 16]	// _373, MEM[(struct basic_string &)iftmp.58_369].D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x2, [sp, 416]	// _373, MEM[(size_type *)&D.63866 + 16B]
.L2678:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:558: 	_M_length(__str.length());
	ldr	x2, [x1, 8]	// _374, MEM[(const struct basic_string *)iftmp.58_369 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x2, [sp, 408]	// _374, MEM[(size_type *)&D.63866 + 8B]
	stp	x0, xzr, [x1]	// _371,, MEM[(char * *)iftmp.58_369]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	adrp	x0, _ZSt4cerr	// tmp703,
	add	x0, x0, :lo12:_ZSt4cerr	//, tmp703,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, 16]	//, MEM[(char_type &)iftmp.58_369 + 16]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	ldp	x1, x2, [sp, 400]	//,, MEM[(const struct basic_string *)&D.63866]
.LEHB44:
	bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l		//
	mov	x27, x0	// _325,
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	ldr	x0, [x0]	// _325->_vptr.basic_ostream, _325->_vptr.basic_ostream
	ldr	x0, [x0, -24]	// MEM[(long int *)_379 + -24B], MEM[(long int *)_379 + -24B]
	add	x0, x27, x0	// tmp706, _325, MEM[(long int *)_379 + -24B]
	ldr	x20, [x0, 240]	// _383, MEM[(const struct __ctype_type * *)_382 + 240B]
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:49:       if (!__f)
	cbz	x20, .L2945	// _383,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:874: 	if (_M_widen_ok)
	ldrb	w0, [x20, 56]	// MEM[(const struct ctype *)_383]._M_widen_ok, MEM[(const struct ctype *)_383]._M_widen_ok
	cbz	w0, .L2680	// MEM[(const struct ctype *)_383]._M_widen_ok,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:875: 	  return _M_widen[static_cast<unsigned char>(__c)];
	ldrb	w1, [x20, 67]	// _392, MEM[(const struct ctype *)_383]._M_widen
.L2681:
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	mov	x0, x27	//, _325
	bl	_ZNSo3putEc		//
// /usr/local/include/c++/8.3.0/ostream:613:     { return __os.flush(); }
	bl	_ZNSo5flushEv		//
.LEHE44:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 400]	// _326, MEM[(const struct basic_string *)&D.63866]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 416	// tmp713,,
	cmp	x0, x1	// _326, tmp713
	beq	.L2682		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2682:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 368]	// _327, MEM[(const struct basic_string *)&D.63864]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 384	// tmp715,,
	cmp	x0, x1	// _327, tmp715
	beq	.L2683		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2683:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 304]	// _328, MEM[(const struct basic_string *)&D.63865]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x26, x26, 16	// tmp717, tmp1068,
	cmp	x0, x26	// _328, tmp717
	beq	.L2684		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2684:
	ldr	x20, [sp, 336]	// prephitmp_598, MEM[(const struct basic_string *)&D.63796]
	b	.L2661		//
.L2926:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:440:       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
	ldr	x28, [sp, 312]	// _635, MEM[(const struct basic_string *)&D.63923 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x0, sp, 384	// tmp884,,
	str	x0, [sp, 368]	// tmp884, MEM[(struct _Alloc_hider *)&D.63992]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:211: 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
	cmn	x27, x28	// pretmp_659, _635
	ccmp	x27, 0, 0, ne	// pretmp_659,,,
	beq	.L2946		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:215: 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
	str	x28, [sp, 400]	// _635, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:217: 	if (__dnew > size_type(_S_local_capacity))
	cmp	x28, 15	// _635,
	bhi	.L2947		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:337: 	if (__n == 1)
	cmp	x28, 1	// _635,
	bne	.L2739		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:338: 	  traits_type::assign(*__d, *__s);
	ldrb	w0, [x27]	// _643, MEM[(const char_type &)pretmp_659]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	w0, [sp, 384]	// _643, MEM[(char_type &)&D.63992 + 16]
.L2740:
	ldr	x2, [sp, 368]	// MEM[(const struct basic_string *)&D.63992], MEM[(const struct basic_string *)&D.63992]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	mov	x0, 9223372036854775807	// tmp903,
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:232: 	_M_set_length(__dnew);
	ldr	x1, [sp, 400]	// __dnew.53_644, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x1, [sp, 376]	// __dnew.53_644, MEM[(size_type *)&D.63992 + 8B]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x2, x1]	//, MEM[(char_type &)_646]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	ldr	x1, [sp, 376]	// MEM[(const struct basic_string *)&D.63992 + 8B], MEM[(const struct basic_string *)&D.63992 + 8B]
	sub	x0, x0, x1	// tmp902, tmp903, MEM[(const struct basic_string *)&D.63992 + 8B]
	cmp	x0, 1	// tmp902,
	bls	.L2948		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1268: 	return _M_append(__s, __n);
	adrp	x1, .LC9	// tmp908,
	mov	x2, 2	//,
	add	x1, x1, :lo12:.LC9	//, tmp908,
	add	x0, sp, 368	// tmp1157,,
.LEHB45:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE45:
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	__errno_location		//
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	ldr	w0, [x0]	//, *_620
	bl	strerror		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	str	x23, [sp, 336]	// tmp1090, MEM[(struct _Alloc_hider *)&D.63991]._M_p
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	mov	x27, x0	// _622,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	cbz	x0, .L2949	// _622,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:322: 	return __builtin_strlen(__s);
	bl	strlen		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	add	x2, x27, x0	// iftmp.41_654, _622,
.L2743:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	mov	x1, x27	//, _622
	mov	w3, 0	//,
	add	x0, sp, 336	// tmp1159,,
.LEHB46:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE46:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x3, x4, [sp, 368]	// _658, _655, MEM[(const struct basic_string *)&D.63992]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	add	x0, sp, 384	// tmp921,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x1, x2, [sp, 336]	// pretmp_647, _656, MEM[(const struct basic_string *)&D.63991]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	mov	x6, 15	// tmp1086,
	cmp	x3, x0	// _658, tmp921
	ldr	x0, [sp, 384]	// D.63992.D.21280._M_allocated_capacity, D.63992.D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	add	x5, x4, x2	// __size, _655, _656
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	csel	x0, x0, x6, ne	// iftmp.59_661, D.63992.D.21280._M_allocated_capacity, tmp1086,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_661
	bls	.L2748		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 352]	// D.63991.D.21280._M_allocated_capacity, D.63991.D.21280._M_allocated_capacity
	cmp	x1, x23	// pretmp_647, tmp1090
	csel	x6, x0, x6, ne	// iftmp.59_665, D.63991.D.21280._M_allocated_capacity, tmp1086,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x6	// __size, iftmp.59_665
	bls	.L2950		//,
.L2748:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	add	x0, sp, 368	// tmp1162,,
.LEHB47:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE47:
.L2903:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x2, sp, 416	// tmp927,,
	str	x2, [sp, 400]	// tmp927, MEM[(struct _Alloc_hider *)&D.63993]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x1, x0	// iftmp.58_670,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x2, [x0], 16	// _671, MEM[(const struct basic_string *)iftmp.58_670]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:544: 	if (__str._M_is_local())
	cmp	x2, x0	// _671, _672
	beq	.L2951		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x2, [sp, 400]	// _671, MEM[(char * *)&D.63993]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:552: 	    _M_capacity(__str._M_allocated_capacity);
	ldr	x2, [x1, 16]	// _674, MEM[(struct basic_string &)iftmp.58_670].D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x2, [sp, 416]	// _674, MEM[(size_type *)&D.63993 + 16B]
.L2752:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:558: 	_M_length(__str.length());
	ldr	x2, [x1, 8]	// _675, MEM[(const struct basic_string *)iftmp.58_670 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x2, [sp, 408]	// _675, MEM[(size_type *)&D.63993 + 8B]
	stp	x0, xzr, [x1]	// _672,, MEM[(char * *)iftmp.58_670]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	adrp	x0, _ZSt4cerr	// tmp929,
	add	x0, x0, :lo12:_ZSt4cerr	//, tmp929,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, 16]	//, MEM[(char_type &)iftmp.58_670 + 16]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	ldp	x1, x2, [sp, 400]	//,, MEM[(const struct basic_string *)&D.63993]
.LEHB48:
	bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l		//
	mov	x28, x0	// _626,
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	ldr	x0, [x0]	// _626->_vptr.basic_ostream, _626->_vptr.basic_ostream
	ldr	x0, [x0, -24]	// MEM[(long int *)_680 + -24B], MEM[(long int *)_680 + -24B]
	add	x0, x28, x0	// tmp932, _626, MEM[(long int *)_680 + -24B]
	ldr	x27, [x0, 240]	// _684, MEM[(const struct __ctype_type * *)_683 + 240B]
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:49:       if (!__f)
	cbz	x27, .L2952	// _684,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:874: 	if (_M_widen_ok)
	ldrb	w0, [x27, 56]	// MEM[(const struct ctype *)_684]._M_widen_ok, MEM[(const struct ctype *)_684]._M_widen_ok
	cbz	w0, .L2754	// MEM[(const struct ctype *)_684]._M_widen_ok,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:875: 	  return _M_widen[static_cast<unsigned char>(__c)];
	ldrb	w1, [x27, 67]	// _693, MEM[(const struct ctype *)_684]._M_widen
.L2755:
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	mov	x0, x28	//, _626
	bl	_ZNSo3putEc		//
// /usr/local/include/c++/8.3.0/ostream:613:     { return __os.flush(); }
	bl	_ZNSo5flushEv		//
.LEHE48:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 400]	// _627, MEM[(const struct basic_string *)&D.63993]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 416	// tmp939,,
	cmp	x0, x1	// _627, tmp939
	beq	.L2756		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2756:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 336]	// _628, MEM[(const struct basic_string *)&D.63991]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x0, x23	// _628, tmp1090
	beq	.L2757		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2757:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 368]	// _629, MEM[(const struct basic_string *)&D.63992]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 384	// tmp943,,
	cmp	x0, x1	// _629, tmp943
	beq	.L2758		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2758:
	ldr	x27, [sp, 304]	// pretmp_659, MEM[(const struct basic_string *)&D.63923]
	b	.L2735		//
.L2921:
// bitmapdecoding.cpp:233:     printf("bogus\n.");
	adrp	x0, .LC15	// tmp982,
	add	x0, x0, :lo12:.LC15	//, tmp982,
.LEHB49:
	bl	printf		//
.LEHE49:
	b	.L2778		//
.L2632:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:350: 	if (__n == 0)
	cbz	x26, .L2633	// _247,
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:225: 	  { this->_S_copy_chars(_M_data(), __beg, __end); }
	mov	x0, x25	// _252, tmp1092
	b	.L2631		//
.L2706:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:350: 	if (__n == 0)
	cbz	x28, .L2707	// _548,
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:225: 	  { this->_S_copy_chars(_M_data(), __beg, __end); }
	mov	x0, x23	// _403, tmp1090
	b	.L2705		//
.L2940:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:219: 	    _M_data(_M_create(__dnew, size_type(0)));
	mov	x2, 0	//,
	add	x1, sp, 136	//,,
	mov	x0, x26	//, tmp1068
.LEHB50:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm		//
.LEHE50:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	ldr	x1, [sp, 136]	// __dnew, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x0, [sp, 304]	// _339, MEM[(char * *)&D.63865]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x1, [sp, 320]	// __dnew, MEM[(size_type *)&D.63865 + 16B]
.L2664:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x2, x27	//, _334
	mov	x1, x20	//, prephitmp_598
	bl	memcpy		//
	b	.L2666		//
.L2947:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:219: 	    _M_data(_M_create(__dnew, size_type(0)));
	mov	x2, 0	//,
	add	x1, sp, 400	// tmp1155,,
	add	x0, sp, 368	// tmp1156,,
.LEHB51:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm		//
.LEHE51:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	ldr	x1, [sp, 400]	// __dnew, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x0, [sp, 368]	// _375, MEM[(char * *)&D.63992]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x1, [sp, 384]	// __dnew, MEM[(size_type *)&D.63992 + 16B]
.L2738:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x2, x28	//, _635
	mov	x1, x27	//, pretmp_659
	bl	memcpy		//
	b	.L2740		//
.L2647:
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:876: 	this->_M_widen_init();
	mov	x0, x20	//, _296
.LEHB52:
	bl	_ZNKSt5ctypeIcE13_M_widen_initEv		//
.LEHE52:
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	ldr	x1, [x20]	// MEM[(const struct ctype *)_296].D.31376._vptr.facet, MEM[(const struct ctype *)_296].D.31376._vptr.facet
	adrp	x0, _ZNKSt5ctypeIcE8do_widenEc	// tmp627,
	add	x0, x0, :lo12:_ZNKSt5ctypeIcE8do_widenEc	// tmp626, tmp627,
	ldr	x2, [x1, 48]	// _307, MEM[(int (*) () *)_306 + 48B]
	cmp	x2, x0	// _307, tmp626
	bne	.L2953		//,
	mov	w1, 10	// _305,
	b	.L2648		//
.L2721:
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:876: 	this->_M_widen_init();
	mov	x0, x27	//, _597
.LEHB53:
	bl	_ZNKSt5ctypeIcE13_M_widen_initEv		//
.LEHE53:
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	ldr	x1, [x27]	// MEM[(const struct ctype *)_597].D.31376._vptr.facet, MEM[(const struct ctype *)_597].D.31376._vptr.facet
	adrp	x0, _ZNKSt5ctypeIcE8do_widenEc	// tmp851,
	add	x0, x0, :lo12:_ZNKSt5ctypeIcE8do_widenEc	// tmp850, tmp851,
	ldr	x2, [x1, 48]	// _608, MEM[(int (*) () *)_607 + 48B]
	cmp	x2, x0	// _608, tmp850
	bne	.L2954		//,
	mov	w1, 10	// _606,
	b	.L2722		//
.L2934:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:219: 	    _M_data(_M_create(__dnew, size_type(0)));
	mov	x2, 0	//,
	add	x1, sp, 128	//,,
	add	x0, sp, 272	// tmp1113,,
.LEHB54:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm		//
.LEHE54:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	ldr	x1, [sp, 128]	// __dnew, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x0, [sp, 272]	// _252, MEM[(char * *)&D.63809]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x1, [sp, 288]	// __dnew, MEM[(size_type *)&D.63809 + 16B]
.L2631:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x2, x26	//, _247
	mov	x1, x20	//, pretmp_1037
	bl	memcpy		//
	b	.L2633		//
.L2928:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:219: 	    _M_data(_M_create(__dnew, size_type(0)));
	mov	x2, 0	//,
	add	x1, sp, 144	//,,
	add	x0, sp, 336	// tmp1140,,
.LEHB55:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm		//
.LEHE55:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	ldr	x1, [sp, 144]	// __dnew, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x0, [sp, 336]	// _403, MEM[(char * *)&D.63936]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x1, [sp, 352]	// __dnew, MEM[(size_type *)&D.63936 + 16B]
.L2705:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x2, x28	//, _548
	mov	x1, x27	//, prephitmp_616
	bl	memcpy		//
	b	.L2707		//
.L2937:
	ldp	x2, x3, [x1, 16]	// _285, MEM[(char * {ref-all})iftmp.58_282 + 16B]
	stp	x2, x3, [sp, 416]	// _285, MEM[(char * {ref-all})&D.63810 + 16B]
	b	.L2645		//
.L2931:
	ldp	x2, x3, [x1, 16]	// _586, MEM[(char * {ref-all})iftmp.58_583 + 16B]
	stp	x2, x3, [sp, 416]	// _586, MEM[(char * {ref-all})&D.63937 + 16B]
	b	.L2719		//
.L2680:
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:876: 	this->_M_widen_init();
	mov	x0, x20	//, _383
.LEHB56:
	bl	_ZNKSt5ctypeIcE13_M_widen_initEv		//
.LEHE56:
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	ldr	x1, [x20]	// MEM[(const struct ctype *)_383].D.31376._vptr.facet, MEM[(const struct ctype *)_383].D.31376._vptr.facet
	adrp	x0, _ZNKSt5ctypeIcE8do_widenEc	// tmp710,
	add	x0, x0, :lo12:_ZNKSt5ctypeIcE8do_widenEc	// tmp709, tmp710,
	ldr	x2, [x1, 48]	// _394, MEM[(int (*) () *)_393 + 48B]
	cmp	x2, x0	// _394, tmp709
	bne	.L2955		//,
	mov	w1, 10	// _392,
	b	.L2681		//
.L2754:
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:876: 	this->_M_widen_init();
	mov	x0, x27	//, _684
.LEHB57:
	bl	_ZNKSt5ctypeIcE13_M_widen_initEv		//
.LEHE57:
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	ldr	x1, [x27]	// MEM[(const struct ctype *)_684].D.31376._vptr.facet, MEM[(const struct ctype *)_684].D.31376._vptr.facet
	adrp	x0, _ZNKSt5ctypeIcE8do_widenEc	// tmp936,
	add	x0, x0, :lo12:_ZNKSt5ctypeIcE8do_widenEc	// tmp935, tmp936,
	ldr	x2, [x1, 48]	// _695, MEM[(int (*) () *)_694 + 48B]
	cmp	x2, x0	// _695, tmp935
	bne	.L2956		//,
	mov	w1, 10	// _693,
	b	.L2755		//
.L2624:
	add	x24, sp, 200	// tmp1065,,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:827: 	  _M_default_append(__new_size - size());
	add	x0, sp, 176	//,,
.LEHB58:
	bl	_ZNSt6vectorIySaIyEE17_M_default_appendEm		//
.LEHE58:
	b	.L2626		//
.L2930:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1932: 			  _M_limit(__pos, __n1), __s, __n2);
	mov	x2, 0	//,
	mov	x1, 0	//,
	add	x0, sp, 368	// tmp1146,,
.LEHB59:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm		//
.LEHE59:
	b	.L2902		//
.L2936:
	mov	x2, 0	//,
	mov	x1, 0	//,
	add	x0, sp, 368	// tmp1119,,
.LEHB60:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm		//
.LEHE60:
	b	.L2900		//
.L2665:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:350: 	if (__n == 0)
	cbz	x27, .L2666	// _334,
	b	.L2664		//
.L2739:
	cbz	x28, .L2740	// _635,
	b	.L2738		//
.L2949:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	mov	x2, -1	// iftmp.41_654,
	b	.L2743		//
.L2944:
	ldp	x2, x3, [x1, 16]	// _372, MEM[(char * {ref-all})iftmp.58_369 + 16B]
	stp	x2, x3, [sp, 416]	// _372, MEM[(char * {ref-all})&D.63866 + 16B]
	b	.L2678		//
.L2942:
	mov	x2, -1	// iftmp.41_353,
	b	.L2669		//
.L2951:
	ldp	x2, x3, [x1, 16]	// _673, MEM[(char * {ref-all})iftmp.58_670 + 16B]
	stp	x2, x3, [sp, 416]	// _673, MEM[(char * {ref-all})&D.63993 + 16B]
	b	.L2752		//
.L2943:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1932: 			  _M_limit(__pos, __n1), __s, __n2);
	mov	x2, 0	//,
	mov	x1, 0	//,
	add	x0, sp, 368	// tmp1131,,
.LEHB61:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm		//
.LEHE61:
	b	.L2901		//
.L2950:
	mov	x2, 0	//,
	mov	x1, 0	//,
	add	x0, sp, 336	// tmp1161,,
.LEHB62:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm		//
.LEHE62:
	b	.L2903		//
.L2954:
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	mov	x0, x27	//, _597
	mov	w1, 10	//,
.LEHB63:
	blr	x2		// _608
.LEHE63:
	and	w1, w0, 255	// _606,
	b	.L2722		//
.L2953:
	mov	x0, x20	//, _296
	mov	w1, 10	//,
.LEHB64:
	blr	x2		// _307
.LEHE64:
	and	w1, w0, 255	// _305,
	b	.L2648		//
.L2955:
	mov	x0, x20	//, _383
	mov	w1, 10	//,
.LEHB65:
	blr	x2		// _394
.LEHE65:
	and	w1, w0, 255	// _392,
	b	.L2681		//
.L2956:
	mov	x0, x27	//, _684
	mov	w1, 10	//,
.LEHB66:
	blr	x2		// _695
.LEHE66:
	and	w1, w0, 255	// _693,
	b	.L2755		//
.L2946:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:212: 	  std::__throw_logic_error(__N("basic_string::"
	adrp	x0, .LC6	// tmp891,
	add	x0, x0, :lo12:.LC6	//, tmp891,
.LEHB67:
	bl	_ZSt19__throw_logic_errorPKc		//
.LEHE67:
.L2945:
.LEHB68:
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:50: 	__throw_bad_cast();
	bl	_ZSt16__throw_bad_castv		//
.LEHE68:
.L2929:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:312: 	  __throw_length_error(__N(__s));
	adrp	x0, .LC8	// tmp818,
	add	x0, x0, :lo12:.LC8	//, tmp818,
.LEHB69:
	bl	_ZSt20__throw_length_errorPKc		//
.LEHE69:
.L2948:
	adrp	x0, .LC8	// tmp906,
	add	x0, x0, :lo12:.LC8	//, tmp906,
.LEHB70:
	bl	_ZSt20__throw_length_errorPKc		//
.LEHE70:
.L2952:
.LEHB71:
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:50: 	__throw_bad_cast();
	bl	_ZSt16__throw_bad_castv		//
.LEHE71:
.L2941:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:312: 	  __throw_length_error(__N(__s));
	adrp	x0, .LC8	// tmp680,
	add	x0, x0, :lo12:.LC8	//, tmp680,
.LEHB72:
	bl	_ZSt20__throw_length_errorPKc		//
.LEHE72:
.L2932:
.LEHB73:
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:50: 	__throw_bad_cast();
	bl	_ZSt16__throw_bad_castv		//
.LEHE73:
.L2935:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:312: 	  __throw_length_error(__N(__s));
	adrp	x0, .LC8	// tmp594,
	add	x0, x0, :lo12:.LC8	//, tmp594,
.LEHB74:
	bl	_ZSt20__throw_length_errorPKc		//
.LEHE74:
.L2938:
.LEHB75:
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:50: 	__throw_bad_cast();
	bl	_ZSt16__throw_bad_castv		//
.LEHE75:
.L2933:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:212: 	  std::__throw_logic_error(__N("basic_string::"
	adrp	x0, .LC6	// tmp579,
	add	x0, x0, :lo12:.LC6	//, tmp579,
.LEHB76:
	bl	_ZSt19__throw_logic_errorPKc		//
.LEHE76:
.L2927:
	adrp	x0, .LC6	// tmp803,
	add	x0, x0, :lo12:.LC6	//, tmp803,
.LEHB77:
	bl	_ZSt19__throw_logic_errorPKc		//
.LEHE77:
.L2915:
	.cfi_restore 23
	.cfi_restore 24
.LEHB78:
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:102: 	  std::__throw_bad_alloc();
	bl	_ZSt17__throw_bad_allocv		//
.LEHE78:
.L2939:
	.cfi_offset 23, -560
	.cfi_offset 24, -552
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:212: 	  std::__throw_logic_error(__N("basic_string::"
	adrp	x0, .LC6	// tmp665,
	add	x0, x0, :lo12:.LC6	//, tmp665,
.LEHB79:
	bl	_ZSt19__throw_logic_errorPKc		//
.LEHE79:
.L2920:
.LEHB80:
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:102: 	  std::__throw_bad_alloc();
	bl	_ZSt17__throw_bad_allocv		//
.LEHE80:
.L2816:
	mov	x19, x0	// tmp688,
.L2672:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 336]	// _226,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 352	// tmp737,,
	cmp	x0, x1	// _226, tmp737
	beq	.L2696		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2696:
// bitmapdecoding.cpp:220:   std::vector<std::vector<unsigned long long>> allresults;
	mov	x0, x24	//, tmp1065
	bl	_ZNSt6vectorIS_IySaIyEESaIS1_EED1Ev		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 176]	// _78, results.D.43930._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbnz	x0, .L2957	// _78,
.L2793:
// bitmapdecoding.cpp:218:   LinuxEvents<PERF_TYPE_HARDWARE> unified(evts);
	add	x0, sp, 432	// tmp1178,,
	bl	_ZN11LinuxEventsILi0EED1Ev		//
.L2786:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 152]	// _79, evts.D.42966._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L2794	// _79,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2794:
	mov	x0, x19	//, tmp1043
.LEHB81:
	bl	_Unwind_Resume		//
.L2809:
	mov	x19, x0	// tmp734,
	b	.L2696		//
.L2825:
	mov	x19, x0	// tmp914,
.L2746:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 304]	// _526,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x26, x26, 16	// tmp968, tmp1068,
	cmp	x0, x26	// _526, tmp968
	beq	.L2696		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L2696		//
.L2822:
	mov	x19, x0	// tmp722,
.L2689:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 368]	// _330, MEM[(const struct basic_string *)&D.63864]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 384	// tmp727,,
	cmp	x0, x1	// _330, tmp727
	beq	.L2691		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2691:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 304]	// _331, MEM[(const struct basic_string *)&D.63865]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x26, x26, 16	// tmp731, tmp1068,
	cmp	x0, x26	// _331, tmp731
	beq	.L2672		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L2672		//
.L2957:
	bl	_ZdlPv		//
	b	.L2793		//
.L2826:
	mov	x19, x0	// tmp914,
	b	.L2746		//
.L2814:
	.cfi_restore 23
	.cfi_restore 24
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x1, [sp, 400]	// _75, D.62302.D.42966._M_impl._M_start
	mov	x19, x0	// tmp1044,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x1, .L2899	// _75,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _75
	bl	_ZdlPv		//
	stp	x23, x24, [sp, 48]	//,,
	.cfi_remember_state
	.cfi_offset 24, -552
	.cfi_offset 23, -560
	b	.L2786		//
.L2808:
	.cfi_restore_state
	mov	x19, x0	// tmp1043,
	stp	x23, x24, [sp, 48]	//,,
	.cfi_remember_state
	.cfi_offset 24, -552
	.cfi_offset 23, -560
	b	.L2786		//
.L2617:
	.cfi_restore_state
	stp	x23, x24, [sp, 48]	//,,
	.cfi_remember_state
	.cfi_offset 24, -552
	.cfi_offset 23, -560
// bitmapdecoding.cpp:209:   uint32_t *bigarray = new uint32_t[wordcount * 64];
	bl	__cxa_throw_bad_array_new_length		//
.LEHE81:
.L2899:
	.cfi_restore_state
	stp	x23, x24, [sp, 48]	//,,
	.cfi_offset 24, -552
	.cfi_offset 23, -560
	b	.L2786		//
.L2811:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x1, [sp, 248]	// _76, avg.D.45803._M_impl._M_start
	mov	x19, x0	// tmp1055,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x1, .L2789	// _76,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _76
	bl	_ZdlPv		//
.L2789:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 224]	// _77, mins.D.43930._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L2696	// _77,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L2696		//
.L2830:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 336]	// _550, MEM[(const struct basic_string *)&D.63936]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x2, sp, 352	// tmp826,,
	mov	x19, x0	// tmp828,
	cmp	x1, x2	// _550, tmp826
	beq	.L2746		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _637
.L2913:
	bl	_ZdlPv		//
	b	.L2746		//
.L2827:
	mov	x19, x0	// tmp869,
.L2732:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 336]	// _545, MEM[(const struct basic_string *)&D.63936]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 352	// tmp872,,
	cmp	x0, x1	// _545, tmp872
	beq	.L2746		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L2746		//
.L2828:
	mov	x19, x0	// tmp863,
.L2730:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 368]	// _544, MEM[(const struct basic_string *)&D.63935]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 384	// tmp868,,
	cmp	x0, x1	// _544, tmp868
	beq	.L2732		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L2732		//
.L2829:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 400]	// _543, MEM[(const struct basic_string *)&D.63937]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x2, sp, 416	// tmp862,,
	mov	x19, x0	// tmp864,
	cmp	x1, x2	// _543, tmp862
	beq	.L2730		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _543
	bl	_ZdlPv		//
	b	.L2730		//
.L2820:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 272]	// _249, MEM[(const struct basic_string *)&D.63809]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x2, sp, 288	// tmp602,,
	mov	x19, x0	// tmp604,
	cmp	x1, x2	// _249, tmp602
	beq	.L2672		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _336
.L2958:
	bl	_ZdlPv		//
	b	.L2672		//
.L2817:
	mov	x19, x0	// tmp645,
.L2658:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 272]	// _244, MEM[(const struct basic_string *)&D.63809]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 288	// tmp648,,
	cmp	x0, x1	// _244, tmp648
	beq	.L2672		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L2672		//
.L2818:
	mov	x19, x0	// tmp639,
.L2656:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 368]	// _243, MEM[(const struct basic_string *)&D.63808]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 384	// tmp644,,
	cmp	x0, x1	// _243, tmp644
	beq	.L2658		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L2658		//
.L2819:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 400]	// _242, MEM[(const struct basic_string *)&D.63810]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x2, sp, 416	// tmp638,,
	mov	x19, x0	// tmp640,
	cmp	x1, x2	// _242, tmp638
	beq	.L2656		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _242
	bl	_ZdlPv		//
	b	.L2656		//
.L2810:
	mov	x19, x0	// tmp1051,
	b	.L2789		//
.L2812:
	mov	x19, x0	// tmp1052,
	add	x0, sp, 400	// tmp1177,,
	bl	_ZNSt6vectorIS_IySaIyEESaIS1_EED1Ev		//
	b	.L2789		//
.L2813:
	mov	x19, x0	// tmp1048,
	add	x0, sp, 400	// tmp1176,,
	bl	_ZNSt6vectorIS_IySaIyEESaIS1_EED1Ev		//
	b	.L2696		//
.L2833:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 400]	// _630, MEM[(const struct basic_string *)&D.63993]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x2, sp, 416	// tmp947,,
	mov	x19, x0	// tmp949,
	cmp	x1, x2	// _630, tmp947
	beq	.L2763		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _630
	bl	_ZdlPv		//
.L2763:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 336]	// _631, MEM[(const struct basic_string *)&D.63991]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 352	// tmp953,,
	cmp	x0, x1	// _631, tmp953
	beq	.L2765		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2765:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 368]	// _632, MEM[(const struct basic_string *)&D.63992]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 384	// tmp957,,
	cmp	x0, x1	// _632, tmp957
	beq	.L2746		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L2746		//
.L2823:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 400]	// _329, MEM[(const struct basic_string *)&D.63866]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x2, sp, 416	// tmp721,,
	mov	x19, x0	// tmp723,
	cmp	x1, x2	// _329, tmp721
	beq	.L2689		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _329
	bl	_ZdlPv		//
	b	.L2689		//
.L2815:
	mov	x19, x0	// tmp688,
	b	.L2672		//
.L2832:
	mov	x19, x0	// tmp948,
	b	.L2763		//
.L2834:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 368]	// _637, MEM[(const struct basic_string *)&D.63992]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x2, sp, 384	// tmp913,,
	mov	x19, x0	// tmp915,
	cmp	x1, x2	// _637, tmp913
	beq	.L2746		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _637
	b	.L2913		//
.L2824:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 304]	// _336, MEM[(const struct basic_string *)&D.63865]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x26, x26, 16	// tmp687, tmp1068,
	mov	x19, x0	// tmp689,
	cmp	x1, x26	// _336, tmp687
	beq	.L2672		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _336
	b	.L2958		//
.L2821:
	mov	x19, x0	// tmp728,
	b	.L2691		//
.L2831:
	mov	x19, x0	// tmp954,
	b	.L2765		//
	.cfi_endproc
.LFE3176:
	.section	.gcc_except_table
.LLSDA3176:
	.byte	0xff
	.byte	0xff
	.byte	0x1
	.uleb128 .LLSDACSE3176-.LLSDACSB3176
.LLSDACSB3176:
	.uleb128 .LEHB24-.LFB3176
	.uleb128 .LEHE24-.LEHB24
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB25-.LFB3176
	.uleb128 .LEHE25-.LEHB25
	.uleb128 .L2808-.LFB3176
	.uleb128 0
	.uleb128 .LEHB26-.LFB3176
	.uleb128 .LEHE26-.LEHB26
	.uleb128 .L2814-.LFB3176
	.uleb128 0
	.uleb128 .LEHB27-.LFB3176
	.uleb128 .LEHE27-.LEHB27
	.uleb128 .L2809-.LFB3176
	.uleb128 0
	.uleb128 .LEHB28-.LFB3176
	.uleb128 .LEHE28-.LEHB28
	.uleb128 .L2813-.LFB3176
	.uleb128 0
	.uleb128 .LEHB29-.LFB3176
	.uleb128 .LEHE29-.LEHB29
	.uleb128 .L2810-.LFB3176
	.uleb128 0
	.uleb128 .LEHB30-.LFB3176
	.uleb128 .LEHE30-.LEHB30
	.uleb128 .L2812-.LFB3176
	.uleb128 0
	.uleb128 .LEHB31-.LFB3176
	.uleb128 .LEHE31-.LEHB31
	.uleb128 .L2811-.LFB3176
	.uleb128 0
	.uleb128 .LEHB32-.LFB3176
	.uleb128 .LEHE32-.LEHB32
	.uleb128 .L2809-.LFB3176
	.uleb128 0
	.uleb128 .LEHB33-.LFB3176
	.uleb128 .LEHE33-.LEHB33
	.uleb128 .L2830-.LFB3176
	.uleb128 0
	.uleb128 .LEHB34-.LFB3176
	.uleb128 .LEHE34-.LEHB34
	.uleb128 .L2827-.LFB3176
	.uleb128 0
	.uleb128 .LEHB35-.LFB3176
	.uleb128 .LEHE35-.LEHB35
	.uleb128 .L2828-.LFB3176
	.uleb128 0
	.uleb128 .LEHB36-.LFB3176
	.uleb128 .LEHE36-.LEHB36
	.uleb128 .L2829-.LFB3176
	.uleb128 0
	.uleb128 .LEHB37-.LFB3176
	.uleb128 .LEHE37-.LEHB37
	.uleb128 .L2820-.LFB3176
	.uleb128 0
	.uleb128 .LEHB38-.LFB3176
	.uleb128 .LEHE38-.LEHB38
	.uleb128 .L2817-.LFB3176
	.uleb128 0
	.uleb128 .LEHB39-.LFB3176
	.uleb128 .LEHE39-.LEHB39
	.uleb128 .L2818-.LFB3176
	.uleb128 0
	.uleb128 .LEHB40-.LFB3176
	.uleb128 .LEHE40-.LEHB40
	.uleb128 .L2819-.LFB3176
	.uleb128 0
	.uleb128 .LEHB41-.LFB3176
	.uleb128 .LEHE41-.LEHB41
	.uleb128 .L2824-.LFB3176
	.uleb128 0
	.uleb128 .LEHB42-.LFB3176
	.uleb128 .LEHE42-.LEHB42
	.uleb128 .L2821-.LFB3176
	.uleb128 0
	.uleb128 .LEHB43-.LFB3176
	.uleb128 .LEHE43-.LEHB43
	.uleb128 .L2822-.LFB3176
	.uleb128 0
	.uleb128 .LEHB44-.LFB3176
	.uleb128 .LEHE44-.LEHB44
	.uleb128 .L2823-.LFB3176
	.uleb128 0
	.uleb128 .LEHB45-.LFB3176
	.uleb128 .LEHE45-.LEHB45
	.uleb128 .L2834-.LFB3176
	.uleb128 0
	.uleb128 .LEHB46-.LFB3176
	.uleb128 .LEHE46-.LEHB46
	.uleb128 .L2831-.LFB3176
	.uleb128 0
	.uleb128 .LEHB47-.LFB3176
	.uleb128 .LEHE47-.LEHB47
	.uleb128 .L2832-.LFB3176
	.uleb128 0
	.uleb128 .LEHB48-.LFB3176
	.uleb128 .LEHE48-.LEHB48
	.uleb128 .L2833-.LFB3176
	.uleb128 0
	.uleb128 .LEHB49-.LFB3176
	.uleb128 .LEHE49-.LEHB49
	.uleb128 .L2809-.LFB3176
	.uleb128 0
	.uleb128 .LEHB50-.LFB3176
	.uleb128 .LEHE50-.LEHB50
	.uleb128 .L2815-.LFB3176
	.uleb128 0
	.uleb128 .LEHB51-.LFB3176
	.uleb128 .LEHE51-.LEHB51
	.uleb128 .L2825-.LFB3176
	.uleb128 0
	.uleb128 .LEHB52-.LFB3176
	.uleb128 .LEHE52-.LEHB52
	.uleb128 .L2819-.LFB3176
	.uleb128 0
	.uleb128 .LEHB53-.LFB3176
	.uleb128 .LEHE53-.LEHB53
	.uleb128 .L2829-.LFB3176
	.uleb128 0
	.uleb128 .LEHB54-.LFB3176
	.uleb128 .LEHE54-.LEHB54
	.uleb128 .L2816-.LFB3176
	.uleb128 0
	.uleb128 .LEHB55-.LFB3176
	.uleb128 .LEHE55-.LEHB55
	.uleb128 .L2826-.LFB3176
	.uleb128 0
	.uleb128 .LEHB56-.LFB3176
	.uleb128 .LEHE56-.LEHB56
	.uleb128 .L2823-.LFB3176
	.uleb128 0
	.uleb128 .LEHB57-.LFB3176
	.uleb128 .LEHE57-.LEHB57
	.uleb128 .L2833-.LFB3176
	.uleb128 0
	.uleb128 .LEHB58-.LFB3176
	.uleb128 .LEHE58-.LEHB58
	.uleb128 .L2809-.LFB3176
	.uleb128 0
	.uleb128 .LEHB59-.LFB3176
	.uleb128 .LEHE59-.LEHB59
	.uleb128 .L2828-.LFB3176
	.uleb128 0
	.uleb128 .LEHB60-.LFB3176
	.uleb128 .LEHE60-.LEHB60
	.uleb128 .L2818-.LFB3176
	.uleb128 0
	.uleb128 .LEHB61-.LFB3176
	.uleb128 .LEHE61-.LEHB61
	.uleb128 .L2822-.LFB3176
	.uleb128 0
	.uleb128 .LEHB62-.LFB3176
	.uleb128 .LEHE62-.LEHB62
	.uleb128 .L2832-.LFB3176
	.uleb128 0
	.uleb128 .LEHB63-.LFB3176
	.uleb128 .LEHE63-.LEHB63
	.uleb128 .L2829-.LFB3176
	.uleb128 0
	.uleb128 .LEHB64-.LFB3176
	.uleb128 .LEHE64-.LEHB64
	.uleb128 .L2819-.LFB3176
	.uleb128 0
	.uleb128 .LEHB65-.LFB3176
	.uleb128 .LEHE65-.LEHB65
	.uleb128 .L2823-.LFB3176
	.uleb128 0
	.uleb128 .LEHB66-.LFB3176
	.uleb128 .LEHE66-.LEHB66
	.uleb128 .L2833-.LFB3176
	.uleb128 0
	.uleb128 .LEHB67-.LFB3176
	.uleb128 .LEHE67-.LEHB67
	.uleb128 .L2825-.LFB3176
	.uleb128 0
	.uleb128 .LEHB68-.LFB3176
	.uleb128 .LEHE68-.LEHB68
	.uleb128 .L2823-.LFB3176
	.uleb128 0
	.uleb128 .LEHB69-.LFB3176
	.uleb128 .LEHE69-.LEHB69
	.uleb128 .L2830-.LFB3176
	.uleb128 0
	.uleb128 .LEHB70-.LFB3176
	.uleb128 .LEHE70-.LEHB70
	.uleb128 .L2834-.LFB3176
	.uleb128 0
	.uleb128 .LEHB71-.LFB3176
	.uleb128 .LEHE71-.LEHB71
	.uleb128 .L2833-.LFB3176
	.uleb128 0
	.uleb128 .LEHB72-.LFB3176
	.uleb128 .LEHE72-.LEHB72
	.uleb128 .L2824-.LFB3176
	.uleb128 0
	.uleb128 .LEHB73-.LFB3176
	.uleb128 .LEHE73-.LEHB73
	.uleb128 .L2829-.LFB3176
	.uleb128 0
	.uleb128 .LEHB74-.LFB3176
	.uleb128 .LEHE74-.LEHB74
	.uleb128 .L2820-.LFB3176
	.uleb128 0
	.uleb128 .LEHB75-.LFB3176
	.uleb128 .LEHE75-.LEHB75
	.uleb128 .L2819-.LFB3176
	.uleb128 0
	.uleb128 .LEHB76-.LFB3176
	.uleb128 .LEHE76-.LEHB76
	.uleb128 .L2816-.LFB3176
	.uleb128 0
	.uleb128 .LEHB77-.LFB3176
	.uleb128 .LEHE77-.LEHB77
	.uleb128 .L2826-.LFB3176
	.uleb128 0
	.uleb128 .LEHB78-.LFB3176
	.uleb128 .LEHE78-.LEHB78
	.uleb128 .L2808-.LFB3176
	.uleb128 0
	.uleb128 .LEHB79-.LFB3176
	.uleb128 .LEHE79-.LEHB79
	.uleb128 .L2815-.LFB3176
	.uleb128 0
	.uleb128 .LEHB80-.LFB3176
	.uleb128 .LEHE80-.LEHB80
	.uleb128 .L2809-.LFB3176
	.uleb128 0
	.uleb128 .LEHB81-.LFB3176
	.uleb128 .LEHE81-.LEHB81
	.uleb128 0
	.uleb128 0
.LLSDACSE3176:
	.text
	.size	_Z4testIXadL_ZL12fast_decoderPjRjjmEEEvPKcc.constprop.151, .-_Z4testIXadL_ZL12fast_decoderPjRjjmEEEvPKcc.constprop.151
	.section	.text._Z4testIXadL_Z13basic_decoderPjRjjmEEEvPKcc,"axG",@progbits,_Z4testIXadL_Z13basic_decoderPjRjjmEEEvPKcc,comdat
	.align	2
	.p2align 3,,7
	.weak	_Z4testIXadL_Z13basic_decoderPjRjjmEEEvPKcc
	.type	_Z4testIXadL_Z13basic_decoderPjRjjmEEEvPKcc, %function
_Z4testIXadL_Z13basic_decoderPjRjjmEEEvPKcc:
.LFB2327:
	.cfi_startproc
	.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
	.cfi_lsda 0x1b,.LLSDA2327
	sub	sp, sp, #656	//,,
	.cfi_def_cfa_offset 656
// bitmapdecoding.cpp:208:   uint64_t *array = build_bitmap(filename, target, &wordcount);
	add	x2, sp, 128	//,,
// bitmapdecoding.cpp:206: void test(const char *filename, char target) {
	stp	x29, x30, [sp]	//,,
	.cfi_offset 29, -656
	.cfi_offset 30, -648
	mov	x29, sp	//,
	stp	x19, x20, [sp, 16]	//,,
	stp	x21, x22, [sp, 32]	//,,
	stp	x23, x24, [sp, 48]	//,,
	stp	x25, x26, [sp, 64]	//,,
	stp	x27, x28, [sp, 80]	//,,
	str	d8, [sp, 96]	//,
	.cfi_offset 19, -640
	.cfi_offset 20, -632
	.cfi_offset 21, -624
	.cfi_offset 22, -616
	.cfi_offset 23, -608
	.cfi_offset 24, -600
	.cfi_offset 25, -592
	.cfi_offset 26, -584
	.cfi_offset 27, -576
	.cfi_offset 28, -568
	.cfi_offset 72, -560
.LEHB82:
// bitmapdecoding.cpp:208:   uint64_t *array = build_bitmap(filename, target, &wordcount);
	bl	_Z12build_bitmapPKccPm		//
	mov	x20, x0	// _62,
// bitmapdecoding.cpp:209:   uint32_t *bigarray = new uint32_t[wordcount * 64];
	mov	x1, 2305843009213693950	// tmp623,
// bitmapdecoding.cpp:209:   uint32_t *bigarray = new uint32_t[wordcount * 64];
	ldr	x0, [sp, 128]	// wordcount.147_1, wordcount
// bitmapdecoding.cpp:209:   uint32_t *bigarray = new uint32_t[wordcount * 64];
	cmp	x1, x0, lsl 6	// tmp623, wordcount.147_1,
	bcc	.L2960		//,
// bitmapdecoding.cpp:209:   uint32_t *bigarray = new uint32_t[wordcount * 64];
	lsl	x0, x0, 8	//, wordcount.147_1,
	bl	_Znam		//
.LEHE82:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	add	x1, sp, 480	// tmp1312,,
// bitmapdecoding.cpp:209:   uint32_t *bigarray = new uint32_t[wordcount * 64];
	mov	x19, x0	// _66,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	add	x0, sp, 168	// tmp1313,,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:96: 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [sp, 168]	//,, MEM[(struct _Vector_impl *)&evts]._M_start
	str	xzr, [sp, 184]	//, MEM[(struct _Vector_impl *)&evts]._M_end_of_storage
// bitmapdecoding.cpp:213:   evts.push_back(PERF_COUNT_HW_CPU_CYCLES);
	str	wzr, [sp, 480]	//, D.50542
.LEHB83:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	bl	_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_		//
// bitmapdecoding.cpp:214:   evts.push_back(PERF_COUNT_HW_INSTRUCTIONS);
	mov	w2, 1	// tmp628,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	add	x1, sp, 480	// tmp1314,,
	add	x0, sp, 168	// tmp1315,,
// bitmapdecoding.cpp:214:   evts.push_back(PERF_COUNT_HW_INSTRUCTIONS);
	str	w2, [sp, 480]	// tmp628, D.50543
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	bl	_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_		//
// bitmapdecoding.cpp:215:   evts.push_back(PERF_COUNT_HW_BRANCH_MISSES);
	mov	w2, 5	// tmp631,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	add	x1, sp, 480	// tmp1316,,
	add	x0, sp, 168	// tmp1317,,
// bitmapdecoding.cpp:215:   evts.push_back(PERF_COUNT_HW_BRANCH_MISSES);
	str	w2, [sp, 480]	// tmp631, D.50544
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	bl	_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_		//
// bitmapdecoding.cpp:216:   evts.push_back(PERF_COUNT_HW_CACHE_REFERENCES);
	mov	w2, 2	// tmp634,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	add	x1, sp, 480	// tmp1318,,
	add	x0, sp, 168	// tmp1319,,
// bitmapdecoding.cpp:216:   evts.push_back(PERF_COUNT_HW_CACHE_REFERENCES);
	str	w2, [sp, 480]	// tmp634, D.50545
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	bl	_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_		//
// bitmapdecoding.cpp:217:   evts.push_back(PERF_COUNT_HW_CACHE_MISSES);
	mov	w2, 3	// tmp637,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	add	x0, sp, 168	// tmp1320,,
	add	x1, sp, 480	// tmp1321,,
// bitmapdecoding.cpp:217:   evts.push_back(PERF_COUNT_HW_CACHE_MISSES);
	str	w2, [sp, 480]	// tmp637, D.50546
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	bl	_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:460: 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
	ldp	x1, x0, [sp, 168]	// pretmp_120, prephitmp_121, MEM[(int * *)&evts]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x25, x0, x1	// prephitmp_345, prephitmp_121, pretmp_120
	asr	x21, x25, 2	// _338, prephitmp_345,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	cbz	x21, .L3231	// _338,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	mov	x0, 4611686018427387903	// tmp641,
	cmp	x21, x0	// _338, tmp641
	bhi	.L3417		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x25	//, prephitmp_345
	bl	_Znwm		//
.LEHE83:
	mov	x26, x0	// _222,
	ldp	x1, x0, [sp, 168]	// pretmp_120, prephitmp_121, evts.D.42966._M_impl._M_start
	sub	x25, x0, x1	// prephitmp_345, prephitmp_121, pretmp_120
	asr	x22, x25, 2	// _343, prephitmp_345,
	mov	x21, x22	// _338, _343
.L2962:
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	cmp	x0, x1	// prephitmp_121, pretmp_120
	beq	.L2964		//,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:368: 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
	mov	x2, x25	//, prephitmp_345
	mov	x0, x26	//, _222
	bl	memmove		//
.L2964:
// linux-perf-events.h:27:     memset(&attribs, 0, sizeof(attribs));
	add	x0, sp, 480	// tmp1322,,
// linux-perf-events.h:26:   explicit LinuxEvents(std::vector<int> config_vec) : fd(0), working(true) {
	str	wzr, [sp, 480]	//, unified.fd
// linux-perf-events.h:30:     attribs.disabled = 1;
	mov	w1, 97	// tmp654,
// linux-perf-events.h:26:   explicit LinuxEvents(std::vector<int> config_vec) : fd(0), working(true) {
	mov	w4, 1	// tmp644,
// linux-perf-events.h:28:     attribs.type = TYPE;
	mov	x3, 481036337152	// tmp648,
// linux-perf-events.h:35:     attribs.read_format = PERF_FORMAT_GROUP | PERF_FORMAT_ID;
	mov	x2, 12	// tmp649,
// linux-perf-events.h:27:     memset(&attribs, 0, sizeof(attribs));
	stp	xzr, xzr, [x0, 32]	// MEM[(void *)&unified + 16B]
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:369: 	  return __result + _Num;
	add	x25, x26, x25	// _220, _222, prephitmp_345
// linux-perf-events.h:27:     memset(&attribs, 0, sizeof(attribs));
	stp	xzr, xzr, [x0, 48]	// MEM[(void *)&unified + 16B]
// linux-perf-events.h:30:     attribs.disabled = 1;
	strb	w1, [sp, 528]	// tmp654, MEM[(struct perf_event_attr *)&unified + 48B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:96: 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
	add	x1, sp, 512	//,,
// linux-perf-events.h:26:   explicit LinuxEvents(std::vector<int> config_vec) : fd(0), working(true) {
	strb	w4, [sp, 484]	// tmp644, unified.working
// linux-perf-events.h:28:     attribs.type = TYPE;
	str	x3, [sp, 488]	// tmp648, MEM[(unsigned int *)&unified + 8B]
// linux-perf-events.h:27:     memset(&attribs, 0, sizeof(attribs));
	stp	xzr, xzr, [sp, 496]	// MEM[(void *)&unified + 16B]
// linux-perf-events.h:35:     attribs.read_format = PERF_FORMAT_GROUP | PERF_FORMAT_ID;
	str	x2, [sp, 520]	// tmp649, unified.attribs.read_format
// linux-perf-events.h:41:     num_events = config_vec.size();
	str	w22, [sp, 600]	// _343, unified.num_events
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:96: 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [x1, 96]	//,,
	stp	xzr, xzr, [x1, 112]	//,,
	str	xzr, [sp, 640]	//, MEM[(struct _Vector_impl *)&unified + 152B]._M_finish
	str	xzr, [sp, 648]	//, MEM[(struct _Vector_impl *)&unified + 152B]._M_end_of_storage
// linux-perf-events.h:27:     memset(&attribs, 0, sizeof(attribs));
	stp	xzr, xzr, [x0, 64]	// MEM[(void *)&unified + 16B]
	stp	xzr, xzr, [x0, 80]	// MEM[(void *)&unified + 16B]
	stp	xzr, xzr, [x0, 96]	// MEM[(void *)&unified + 16B]
	str	xzr, [sp, 592]	//, MEM[(void *)&unified + 16B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:826: 	if (__new_size > size())
	cbnz	x21, .L2965	// _338,
.L2969:
// linux-perf-events.h:44:     for (auto config : config_vec) {
	cmp	x25, x26	// _220, _222
	mov	x22, x26	// ivtmp.1442, _222
	mov	w24, 0	// i,
	mov	w23, -1	// group,
	beq	.L3005		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x0, sp, 400	// tmp1301,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x27, sp, 304	// tmp1303,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	str	x0, [sp, 112]	// tmp1301, %sfp
	b	.L3004		//
	.p2align 2
.L2970:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:933: 	return *(this->_M_impl._M_start + __n);
	ldr	x2, [sp, 632]	// MEM[(long unsigned int * *)&unified + 152B], MEM[(long unsigned int * *)&unified + 152B]
// linux-perf-events.h:50:       ioctl(fd, PERF_EVENT_IOC_ID, &ids[i++]);
	mov	x1, 9223	//,
	movk	x1, 0x8008, lsl 16	//,,
	add	x22, x22, 4	// ivtmp.1442, ivtmp.1442,
// linux-perf-events.h:50:       ioctl(fd, PERF_EVENT_IOC_ID, &ids[i++]);
	add	w21, w24, 1	// i, i,
// linux-perf-events.h:50:       ioctl(fd, PERF_EVENT_IOC_ID, &ids[i++]);
	add	x2, x2, x24, uxtw 3	//, MEM[(long unsigned int * *)&unified + 152B], i,,
	bl	ioctl		//
// linux-perf-events.h:52:         group = fd;
	ldr	w0, [sp, 480]	//, unified.fd
	cmn	w23, #1	// group,
	csel	w23, w0, w23, eq	// group, unified.fd, group,
// linux-perf-events.h:44:     for (auto config : config_vec) {
	cmp	x25, x22	// _220, ivtmp.1442
	beq	.L3005		//,
// linux-perf-events.h:50:       ioctl(fd, PERF_EVENT_IOC_ID, &ids[i++]);
	mov	w24, w21	// i, i
.L3004:
// linux-perf-events.h:45:       attribs.config = config;
	ldrsw	x6, [x22]	// MEM[base: _1529, offset: 0], MEM[base: _1529, offset: 0]
// linux-perf-events.h:46:       fd = syscall(__NR_perf_event_open, &attribs, pid, cpu, group, flags);
	mov	x5, 0	//,
	mov	w4, w23	//, group
	mov	w3, -1	//,
	mov	w2, 0	//,
	add	x1, sp, 488	//,,
	mov	x0, 241	//,
// linux-perf-events.h:45:       attribs.config = config;
	str	x6, [sp, 496]	// MEM[base: _1529, offset: 0], unified.attribs.config
// linux-perf-events.h:46:       fd = syscall(__NR_perf_event_open, &attribs, pid, cpu, group, flags);
	bl	syscall		//
// linux-perf-events.h:46:       fd = syscall(__NR_perf_event_open, &attribs, pid, cpu, group, flags);
	str	w0, [sp, 480]	// _240, unified.fd
// linux-perf-events.h:47:       if (fd == -1) {
	cmn	w0, #1	// _240,
	bne	.L2970		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	ldr	x4, [sp, 112]	// tmp1301, %sfp
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x1, .LC7	// tmp670,
	adrp	x2, .LC7+15	// tmp672,
	add	x1, x1, :lo12:.LC7	//, tmp670,
	add	x2, x2, :lo12:.LC7+15	//, tmp672,
	mov	w3, 0	//,
	add	x0, sp, 384	// tmp1328,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	str	x4, [sp, 384]	// tmp1301, MEM[(struct _Alloc_hider *)&D.64225]._M_p
.LEHB84:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE84:
// linux-perf-events.h:88:     if (working)
	ldrb	w0, [sp, 484]	// unified.working, unified.working
	ldr	x21, [sp, 384]	// prephitmp_341, MEM[(const struct basic_string *)&D.64225]
	cbnz	w0, .L3418	// unified.working,
.L2971:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	ldr	x0, [sp, 112]	// tmp1301, %sfp
// linux-perf-events.h:90:     working = false;
	strb	wzr, [sp, 484]	//, unified.working
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x21, x0	// prephitmp_341, tmp1301
	beq	.L2996		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x21	//, prephitmp_341
	bl	_ZdlPv		//
.L2996:
	ldr	w0, [sp, 480]	//, unified.fd
	b	.L2970		//
.L3005:
// linux-perf-events.h:56:     temp_result_vec.resize(num_events * 2 + 1);
	ldr	w0, [sp, 600]	//, unified.num_events
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:826: 	if (__new_size > size())
	ldr	x3, [sp, 608]	// _355, MEM[(long unsigned int * *)&unified + 128B]
	ldr	x2, [sp, 616]	// _356, MEM[(long unsigned int * *)&unified + 136B]
// linux-perf-events.h:56:     temp_result_vec.resize(num_events * 2 + 1);
	lsl	w0, w0, 1	// tmp658, unified.num_events,
// linux-perf-events.h:56:     temp_result_vec.resize(num_events * 2 + 1);
	add	w0, w0, 1	// _254, tmp658,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x1, x2, x3	// tmp660, _356, _355
// linux-perf-events.h:56:     temp_result_vec.resize(num_events * 2 + 1);
	sxtw	x0, w0	// _255, _254
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	asr	x1, x1, 3	// tmp661, tmp660,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:826: 	if (__new_size > size())
	cmp	x0, x1	// _255, tmp661
	bhi	.L3419		//,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:828: 	else if (__new_size < size())
	bcc	.L3420		//,
.L3007:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x26, .L3014	// _222,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x26	//, _222
	bl	_ZdlPv		//
.L3014:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldp	x0, x1, [sp, 168]	// MEM[(int * *)&evts], MEM[(int * *)&evts + 8B], MEM[(int * *)&evts]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:96: 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [sp, 192]	//,, MEM[(struct _Vector_impl *)&results]._M_start
	stp	xzr, xzr, [sp, 208]	//,, MEM[(struct _Vector_impl *)&results]._M_end_of_storage
	stp	xzr, xzr, [sp, 224]	//,, MEM[(struct _Vector_impl *)&allresults]._M_finish
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x1, x1, x0	// tmp769, MEM[(int * *)&evts + 8B], MEM[(int * *)&evts]
	asr	x1, x1, 2	// tmp772, tmp769,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:826: 	if (__new_size > size())
	cbnz	x1, .L3015	// tmp772,
.L3017:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x26, sp, 400	// tmp1296,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x27, sp, 336	// tmp1299,,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	mov	w25, 10	// ivtmp_1571,
	.p2align 3
.L3016:
// linux-perf-events.h:62:     if (ioctl(fd, PERF_EVENT_IOC_RESET, PERF_IOC_FLAG_GROUP) == -1) {
	ldr	w0, [sp, 480]	//, unified.fd
	mov	w2, 1	//,
	mov	x1, 9219	//,
	bl	ioctl		//
// linux-perf-events.h:62:     if (ioctl(fd, PERF_EVENT_IOC_RESET, PERF_IOC_FLAG_GROUP) == -1) {
	cmn	w0, #1	//,
	beq	.L3421		//,
.L3018:
// linux-perf-events.h:66:     if (ioctl(fd, PERF_EVENT_IOC_ENABLE, PERF_IOC_FLAG_GROUP) == -1) {
	ldr	w0, [sp, 480]	//, unified.fd
	mov	w2, 1	//,
	mov	x1, 9216	//,
	bl	ioctl		//
// linux-perf-events.h:66:     if (ioctl(fd, PERF_EVENT_IOC_ENABLE, PERF_IOC_FLAG_GROUP) == -1) {
	cmn	w0, #1	//,
	beq	.L3422		//,
.L3051:
// bitmapdecoding.cpp:226:     for (size_t idx = 0; idx < wordcount; idx++) {
	ldr	x4, [sp, 128]	// wordcount.148_224, wordcount
	mov	w22, 0	// matches,
	cbz	x4, .L3084	// wordcount.148_224,
// bitmapdecoding.cpp:226:     for (size_t idx = 0; idx < wordcount; idx++) {
	mov	x3, 0	// idx,
	.p2align 3
.L3085:
// bitmapdecoding.cpp:227:       F(bigarray, matches, idx, array[idx]);
	ldr	x0, [x20, x3, lsl 3]	// bits, MEM[base: _62, index: idx_1151, step: 8, offset: 0B]
	mov	w2, w3	// _1534, idx
// bitmapdecoding.cpp:86:   while (bits != 0) {
	cbz	x0, .L3089	// bits,
	.p2align 3
.L3090:
// bitmapdecoding.cpp:26:   return __builtin_ctzll(input_num);
	rbit	x1, x0	// tmp950, bits
	clz	x1, x1	// tmp950, tmp950
// bitmapdecoding.cpp:87:     base_ptr[base] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	add	w1, w2, w1	// tmp953, _1534, tmp950
// bitmapdecoding.cpp:87:     base_ptr[base] = static_cast<uint32_t>(idx) + trailingzeroes(bits);
	str	w1, [x19, w22, uxtw 2]	// tmp953, *_102
// bitmapdecoding.cpp:88:     bits = bits & (bits - 1);
	sub	x1, x0, #1	// _100, bits,
// bitmapdecoding.cpp:89:     base++;
	add	w22, w22, 1	// matches, matches,
// bitmapdecoding.cpp:86:   while (bits != 0) {
	ands	x0, x0, x1	// bits, bits, _100
	bne	.L3090		//,
.L3089:
// bitmapdecoding.cpp:226:     for (size_t idx = 0; idx < wordcount; idx++) {
	add	x3, x3, 1	// idx, idx,
// bitmapdecoding.cpp:226:     for (size_t idx = 0; idx < wordcount; idx++) {
	cmp	x3, x4	// idx, wordcount.148_224
	bne	.L3085		//,
.L3084:
// linux-perf-events.h:72:     if (ioctl(fd, PERF_EVENT_IOC_DISABLE, PERF_IOC_FLAG_GROUP) == -1) {
	ldr	w0, [sp, 480]	//, unified.fd
	mov	w2, 1	//,
	mov	x1, 9217	//,
	bl	ioctl		//
// linux-perf-events.h:72:     if (ioctl(fd, PERF_EVENT_IOC_DISABLE, PERF_IOC_FLAG_GROUP) == -1) {
	cmn	w0, #1	//,
	beq	.L3423		//,
.L3091:
// linux-perf-events.h:76:     if (read(fd, temp_result_vec.data(), temp_result_vec.size() * 8) == -1) {
	ldr	w0, [sp, 480]	//, unified.fd
	add	x24, sp, 216	// tmp1367,,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldr	x3, [sp, 616]	// MEM[(long unsigned int * *)&unified + 136B], MEM[(long unsigned int * *)&unified + 136B]
// linux-perf-events.h:76:     if (read(fd, temp_result_vec.data(), temp_result_vec.size() * 8) == -1) {
	ldr	x2, [sp, 608]	// _557, MEM[(long unsigned int * *)&unified + 128B]
// linux-perf-events.h:76:     if (read(fd, temp_result_vec.data(), temp_result_vec.size() * 8) == -1) {
	mov	x1, x2	//, _557
	sub	x2, x3, x2	//, MEM[(long unsigned int * *)&unified + 136B], _557
.LEHB85:
	bl	read		//
// linux-perf-events.h:76:     if (read(fd, temp_result_vec.data(), temp_result_vec.size() * 8) == -1) {
	cmn	x0, #1	//,
	beq	.L3424		//,
.L3124:
// linux-perf-events.h:81:     for (uint32_t i = 1; i < temp_result_vec.size(); i += 2) {
	ldr	x5, [sp, 608]	// _303, MEM[(long unsigned int * *)&unified + 128B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldr	x4, [sp, 616]	// MEM[(long unsigned int * *)&unified + 136B], MEM[(long unsigned int * *)&unified + 136B]
	sub	x4, x4, x5	// tmp1126, MEM[(long unsigned int * *)&unified + 136B], _303
	asr	x4, x4, 3	// _212, tmp1126,
// linux-perf-events.h:81:     for (uint32_t i = 1; i < temp_result_vec.size(); i += 2) {
	cmp	x4, 1	// _212,
	bls	.L3157		//,
// linux-perf-events.h:82:       results[i / 2] = temp_result_vec[i];
	ldr	x6, [sp, 192]	// _574, MEM[(long long unsigned int * *)&results]
// linux-perf-events.h:81:     for (uint32_t i = 1; i < temp_result_vec.size(); i += 2) {
	mov	x1, 1	// _489,
// linux-perf-events.h:82:       results[i / 2] = temp_result_vec[i];
	mov	w0, w1	// i, _489
	.p2align 3
.L3158:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:933: 	return *(this->_M_impl._M_start + __n);
	lsr	w2, w0, 1	// tmp1130, i,
// linux-perf-events.h:81:     for (uint32_t i = 1; i < temp_result_vec.size(); i += 2) {
	add	w0, w0, 2	// i, i,
// linux-perf-events.h:82:       results[i / 2] = temp_result_vec[i];
	ldr	x3, [x5, x1, lsl 3]	// *_571, *_571
// linux-perf-events.h:81:     for (uint32_t i = 1; i < temp_result_vec.size(); i += 2) {
	uxtw	x1, w0	// _489, i
// linux-perf-events.h:82:       results[i / 2] = temp_result_vec[i];
	str	x3, [x6, x2, lsl 3]	// *_571, *_576
// linux-perf-events.h:81:     for (uint32_t i = 1; i < temp_result_vec.size(); i += 2) {
	cmp	x4, x1	// _212, _489
	bhi	.L3158		//,
.L3157:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1076: 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
	ldp	x21, x0, [sp, 224]	// _756, allresults.D.44829._M_impl._M_end_of_storage, allresults.D.44829._M_impl._M_finish
	cmp	x21, x0	// _756, allresults.D.44829._M_impl._M_end_of_storage
	beq	.L3161		//,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldp	x0, x23, [sp, 192]	// MEM[(long long unsigned int * *)&results], MEM[(long long unsigned int * *)&results + 8B], MEM[(long long unsigned int * *)&results]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [x21]	//,, MEM[(struct _Vector_impl *)_756]._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x24, x21	// pretmp_583, _756
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	str	xzr, [x21, 16]	//, MEM[(struct _Vector_impl *)_756]._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x3, 0	// _775,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x23, x23, x0	// _762, MEM[(long long unsigned int * *)&results + 8B], MEM[(long long unsigned int * *)&results]
	asr	x0, x23, 3	// tmp1140, _762,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	cbz	x0, .L3163	// tmp1140,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	mov	x1, 2305843009213693951	// tmp1141,
	add	x24, sp, 216	// tmp1259,,
	cmp	x0, x1	// tmp1140, tmp1141
	bhi	.L3425		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x23	//, _762
	bl	_Znwm		//
	ldr	x24, [sp, 224]	// pretmp_583, allresults.D.44829._M_impl._M_finish
	mov	x3, x0	// _775,
.L3163:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:312: 	this->_M_impl._M_finish = this->_M_impl._M_start;
	stp	x3, x3, [x21]	// _775, _775, MEM[(struct _Vector_base *)_756]._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	add	x23, x3, x23	// tmp1143, _775, _762
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:463: 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
	ldp	x1, x0, [sp, 192]	// _768, _769, MEM[(long long unsigned int * *)&results]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	str	x23, [x21, 16]	// tmp1143, MEM[(struct _Vector_base *)_756]._M_impl._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	cmp	x1, x0	// _768, _769
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:366: 	  const ptrdiff_t _Num = __last - __first;
	sub	x23, x0, x1	// _770, _769, _768
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	beq	.L3166		//,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:368: 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
	mov	x0, x3	//, _775
	mov	x2, x23	//, _770
	bl	memmove		//
	mov	x3, x0	// _775,
.L3166:
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:369: 	  return __result + _Num;
	add	x3, x3, x23	// tmp1144, _775, _770
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:462: 	this->_M_impl._M_finish =
	str	x3, [x21, 8]	// tmp1144, _756->D.43930._M_impl._M_finish
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1081: 	    ++this->_M_impl._M_finish;
	add	x0, x24, 24	// tmp1145, pretmp_583,
	str	x0, [sp, 224]	// tmp1145, allresults.D.44829._M_impl._M_finish
.L3167:
// bitmapdecoding.cpp:223:   for (uint32_t i = 0; i < iterations; i++) {
	subs	w25, w25, #1	// ivtmp_1571, ivtmp_1571,
	bne	.L3016		//,
// bitmapdecoding.cpp:232:   if (bigarray[0] == 0)
	ldr	w0, [x19]	//, *_66
	cbz	w0, .L3426	// *_66,
.L3168:
// bitmapdecoding.cpp:234:   printf("matches = %u words = %zu 1-bit density %4.3f %% \n", matches,
	ldr	d0, [sp, 128]	// wordcount.150_8, wordcount
// bitmapdecoding.cpp:235:          wordcount, double(matches) / (64 * wordcount) * 100);
	ucvtf	d8, w22	// _9, matches
// bitmapdecoding.cpp:234:   printf("matches = %u words = %zu 1-bit density %4.3f %% \n", matches,
	mov	x1, 4636737291354636288	// tmp1308,
	fmov	d1, x1	// tmp1155, tmp1308
	adrp	x0, .LC16	// tmp1157,
	mov	w1, w22	//, matches
	fmov	x2, d0	//, wordcount.150_8
// bitmapdecoding.cpp:235:          wordcount, double(matches) / (64 * wordcount) * 100);
	shl	d0, d0, 6	// tmp1151, wordcount.150_8,
	add	x24, sp, 216	// tmp1259,,
// bitmapdecoding.cpp:234:   printf("matches = %u words = %zu 1-bit density %4.3f %% \n", matches,
	add	x0, x0, :lo12:.LC16	//, tmp1157,
// bitmapdecoding.cpp:235:          wordcount, double(matches) / (64 * wordcount) * 100);
	ucvtf	d0, d0	// tmp1152, tmp1151
	fdiv	d0, d8, d0	// tmp1153, _9, tmp1152
// bitmapdecoding.cpp:234:   printf("matches = %u words = %zu 1-bit density %4.3f %% \n", matches,
	fmul	d0, d0, d1	//, tmp1153, tmp1155
	bl	printf		//
// bitmapdecoding.cpp:236:   printf("bytes per index = %4.3f \n", wordcount * 64.0 / matches);
	ldr	d0, [sp, 128]	// wordcount, wordcount
	mov	x0, 4634204016564240384	// tmp1307,
	fmov	d1, x0	// tmp1161, tmp1307
	add	x24, sp, 216	// tmp1259,,
// bitmapdecoding.cpp:236:   printf("bytes per index = %4.3f \n", wordcount * 64.0 / matches);
	adrp	x0, .LC17	// tmp1164,
	add	x0, x0, :lo12:.LC17	//, tmp1164,
// bitmapdecoding.cpp:236:   printf("bytes per index = %4.3f \n", wordcount * 64.0 / matches);
	ucvtf	d0, d0	// tmp1158, wordcount
	fmul	d0, d0, d1	// tmp1160, tmp1158, tmp1161
// bitmapdecoding.cpp:236:   printf("bytes per index = %4.3f \n", wordcount * 64.0 / matches);
	fdiv	d0, d0, d8	//, tmp1160, _9
	bl	printf		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:460: 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
	ldp	x23, x24, [sp, 216]	// pretmp_809, prephitmp_765, MEM[(struct vector * *)&allresults]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	mov	x1, -6148914691236517206	// tmp1167,
	movk	x1, 0xaaab, lsl 0	// tmp1167,,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [sp, 448]	//,, MEM[(struct _Vector_impl *)&D.50555]._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x25, 0	// __first,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	str	xzr, [sp, 464]	//, MEM[(struct _Vector_impl *)&D.50555]._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x21, x24, x23	// _779, prephitmp_765, pretmp_809
	asr	x0, x21, 3	// tmp1165, _779,
	mul	x0, x0, x1	// tmp1166, tmp1165, tmp1167
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	cbz	x0, .L3170	// tmp1166,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	mov	x1, -6148914691236517206	// tmp1168,
	add	x24, sp, 216	// tmp1259,,
	movk	x1, 0xaaa, lsl 48	// tmp1168,,
	cmp	x0, x1	// tmp1166, tmp1168
	bhi	.L3427		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x21	//, _779
	bl	_Znwm		//
.LEHE85:
	ldp	x23, x24, [sp, 216]	// pretmp_809, prephitmp_765, MEM[(struct vector * *)&allresults]
	mov	x25, x0	// __first,
.L3170:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	add	x21, x25, x21	// tmp1170, __first, _779
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:312: 	this->_M_impl._M_finish = this->_M_impl._M_start;
	stp	x25, x25, [sp, 448]	// __first, __first, MEM[(struct _Vector_base *)&D.50555]._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:79: 	  _ForwardIterator __cur = __result;
	mov	x22, x25	// __cur, __first
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	str	x21, [sp, 464]	// tmp1170, MEM[(struct _Vector_base *)&D.50555]._M_impl._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	cmp	x24, x23	// prephitmp_765, pretmp_809
	beq	.L3172		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	mov	x26, 2305843009213693951	// tmp1293,
	.p2align 3
.L3178:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldp	x0, x21, [x23]	// MEM[base: _1542, offset: 0B], MEM[base: _1542, offset: 8B], MEM[base: _1542, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [x22]	//,, MEM[base: __cur_1552, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x3, 0	// _819,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	str	xzr, [x22, 16]	//, MEM[base: __cur_1552, offset: 16B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x21, x21, x0	// _806, MEM[base: _1542, offset: 8B], MEM[base: _1542, offset: 0B]
	asr	x0, x21, 3	// tmp1173, _806,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	cbz	x0, .L3174	// tmp1173,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	cmp	x0, x26	// tmp1173, tmp1293
	bhi	.L3428		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x21	//, _806
.LEHB86:
	bl	_Znwm		//
.LEHE86:
	mov	x3, x0	// _819,
.L3174:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	add	x21, x3, x21	// tmp1176, _819, _806
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:312: 	this->_M_impl._M_finish = this->_M_impl._M_start;
	stp	x3, x3, [x22]	// _819, _819, MEM[base: __cur_1552, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	str	x21, [x22, 16]	// tmp1176, MEM[base: __cur_1552, offset: 16B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:463: 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
	ldp	x1, x0, [x23]	// _812, _813, MEM[base: _1542, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	cmp	x1, x0	// _812, _813
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:366: 	  const ptrdiff_t _Num = __last - __first;
	sub	x21, x0, x1	// _814, _813, _812
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	beq	.L3177		//,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:368: 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
	mov	x0, x3	//, _819
	mov	x2, x21	//, _814
	bl	memmove		//
	mov	x3, x0	// _819,
.L3177:
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:369: 	  return __result + _Num;
	add	x3, x3, x21	// tmp1177, _819, _814
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:462: 	this->_M_impl._M_finish =
	str	x3, [x22, 8]	// tmp1177, MEM[base: __cur_1552, offset: 8B]
	add	x23, x23, 24	// ivtmp.1416, ivtmp.1416,
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	add	x22, x22, 24	// __cur, __cur,
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	cmp	x24, x23	// prephitmp_765, ivtmp.1416
	bne	.L3178		//,
.L3172:
// bitmapdecoding.cpp:237:   std::vector<unsigned long long> mins = compute_mins(allresults);
	add	x21, sp, 448	// tmp1265,,
	add	x8, sp, 240	//,,
	mov	x0, x21	//, tmp1265
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:462: 	this->_M_impl._M_finish =
	str	x22, [sp, 456]	// __cur, D.50555.D.44829._M_impl._M_finish
.LEHB87:
// bitmapdecoding.cpp:237:   std::vector<unsigned long long> mins = compute_mins(allresults);
	bl	_Z12compute_minsSt6vectorIS_IySaIyEESaIS1_EE		//
.LEHE87:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldp	x22, x23, [sp, 448]	// __first, prephitmp_739, D.50555.D.44829._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x22, x23	// __first, prephitmp_739
	beq	.L3186		//,
	.p2align 3
.L3188:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [x22]	// _836, MEM[base: __first_1551, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3187	// _836,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3187:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	add	x22, x22, 24	// __first, __first,
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x23, x22	// prephitmp_739, __first
	bne	.L3188		//,
	ldr	x23, [sp, 448]	// prephitmp_739, MEM[(struct _Vector_base *)&D.50555]._M_impl._M_start
.L3186:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x23, .L3189	// prephitmp_739,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x23	//, prephitmp_739
	bl	_ZdlPv		//
.L3189:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:460: 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
	ldp	x24, x25, [sp, 216]	// pretmp_744, pretmp_746, MEM[(struct vector * *)&allresults]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	mov	x1, -6148914691236517206	// tmp1187,
	movk	x1, 0xaaab, lsl 0	// tmp1187,,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [sp, 448]	//,, MEM[(struct _Vector_impl *)&D.50558]._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x26, 0	// __first,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	str	xzr, [sp, 464]	//, MEM[(struct _Vector_impl *)&D.50558]._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x22, x25, x24	// _823, pretmp_746, pretmp_744
	asr	x0, x22, 3	// tmp1185, _823,
	mul	x0, x0, x1	// tmp1186, tmp1185, tmp1187
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	cbz	x0, .L3191	// tmp1186,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	mov	x1, -6148914691236517206	// tmp1188,
	movk	x1, 0xaaa, lsl 48	// tmp1188,,
	cmp	x0, x1	// tmp1186, tmp1188
	bhi	.L3429		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x22	//, _823
.LEHB88:
	bl	_Znwm		//
.LEHE88:
	ldp	x24, x25, [sp, 216]	// pretmp_744, pretmp_746, MEM[(struct vector * *)&allresults]
	mov	x26, x0	// __first,
.L3191:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	add	x22, x26, x22	// tmp1190, __first, _823
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:312: 	this->_M_impl._M_finish = this->_M_impl._M_start;
	stp	x26, x26, [sp, 448]	// __first, __first, MEM[(struct _Vector_base *)&D.50558]._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	cmp	x24, x25	// pretmp_744, pretmp_746
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	str	x22, [sp, 464]	// tmp1190, MEM[(struct _Vector_base *)&D.50558]._M_impl._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:79: 	  _ForwardIterator __cur = __result;
	mov	x22, x26	// __cur, __first
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	beq	.L3193		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	mov	x27, 2305843009213693951	// tmp1291,
	.p2align 3
.L3199:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldp	x0, x23, [x24]	// MEM[base: _1562, offset: 0B], MEM[base: _1562, offset: 8B], MEM[base: _1562, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [x22]	//,, MEM[base: __cur_1549, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x3, 0	// _869,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	str	xzr, [x22, 16]	//, MEM[base: __cur_1549, offset: 16B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x23, x23, x0	// _856, MEM[base: _1562, offset: 8B], MEM[base: _1562, offset: 0B]
	asr	x0, x23, 3	// tmp1193, _856,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	cbz	x0, .L3195	// tmp1193,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	cmp	x0, x27	// tmp1193, tmp1291
	bhi	.L3430		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x23	//, _856
.LEHB89:
	bl	_Znwm		//
.LEHE89:
	mov	x3, x0	// _869,
.L3195:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	add	x23, x3, x23	// tmp1196, _869, _856
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:312: 	this->_M_impl._M_finish = this->_M_impl._M_start;
	stp	x3, x3, [x22]	// _869, _869, MEM[base: __cur_1549, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	str	x23, [x22, 16]	// tmp1196, MEM[base: __cur_1549, offset: 16B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:463: 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
	ldp	x1, x0, [x24]	// _862, _863, MEM[base: _1562, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	cmp	x1, x0	// _862, _863
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:366: 	  const ptrdiff_t _Num = __last - __first;
	sub	x23, x0, x1	// _864, _863, _862
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	beq	.L3198		//,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:368: 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
	mov	x0, x3	//, _869
	mov	x2, x23	//, _864
	bl	memmove		//
	mov	x3, x0	// _869,
.L3198:
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:369: 	  return __result + _Num;
	add	x3, x3, x23	// tmp1197, _869, _864
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:462: 	this->_M_impl._M_finish =
	str	x3, [x22, 8]	// tmp1197, MEM[base: __cur_1549, offset: 8B]
	add	x24, x24, 24	// ivtmp.1403, ivtmp.1403,
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	add	x22, x22, 24	// __cur, __cur,
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	cmp	x25, x24	// pretmp_746, ivtmp.1403
	bne	.L3199		//,
.L3193:
// bitmapdecoding.cpp:238:   std::vector<double> avg = compute_averages(allresults);
	add	x8, sp, 264	//,,
	mov	x0, x21	//, tmp1265
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:462: 	this->_M_impl._M_finish =
	str	x22, [sp, 456]	// __cur, D.50558.D.44829._M_impl._M_finish
.LEHB90:
// bitmapdecoding.cpp:238:   std::vector<double> avg = compute_averages(allresults);
	bl	_Z16compute_averagesSt6vectorIS_IySaIyEESaIS1_EE		//
.LEHE90:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldp	x21, x22, [sp, 448]	// __first, prephitmp_614, D.50558.D.44829._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x21, x22	// __first, prephitmp_614
	beq	.L3208		//,
	.p2align 3
.L3210:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [x21]	// _874, MEM[base: __first_363, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3209	// _874,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3209:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	add	x21, x21, 24	// __first, __first,
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x22, x21	// prephitmp_614, __first
	bne	.L3210		//,
	ldr	x22, [sp, 448]	// prephitmp_614, MEM[(struct _Vector_base *)&D.50558]._M_impl._M_start
.L3208:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x22, .L3211	// prephitmp_614,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x22	//, prephitmp_614
	bl	_ZdlPv		//
.L3211:
// bitmapdecoding.cpp:243:          double(mins[1]) / mins[0], double(mins[0]) / matches,
	ldr	x1, [sp, 240]	// _142, MEM[(long long unsigned int * *)&mins]
// bitmapdecoding.cpp:239:   printf("instructions per cycle %4.2f, cycles per value set:  "
	adrp	x0, .LC18	// tmp1216,
	ldr	d4, [sp, 128]	// wordcount, wordcount
	add	x0, x0, :lo12:.LC18	//, tmp1216,
	ldp	d0, d5, [x1]	// MEM[(value_type &)_142], MEM[(value_type &)_142 + 8], MEM[(value_type &)_142]
	ucvtf	d4, d4	// _26, wordcount
	ucvtf	d0, d0	// _21, MEM[(value_type &)_142]
	ucvtf	d5, d5	// _19, MEM[(value_type &)_142 + 8]
	fdiv	d3, d0, d4	//, _21, _26
	fdiv	d1, d0, d8	//, _21, _9
	fdiv	d4, d5, d4	//, _19, _26
	fdiv	d2, d5, d8	//, _19, _9
	fdiv	d0, d5, d0	//, _19, _21
.LEHB91:
	bl	printf		//
// bitmapdecoding.cpp:247:          double(mins[0]) / (64 * wordcount),
	ldr	d0, [sp, 128]	// wordcount, wordcount
// bitmapdecoding.cpp:246:   printf(" cycles per input byte %4.2f instructions per input byte %4.2f \n",
	adrp	x0, .LC19	// tmp1226,
// bitmapdecoding.cpp:247:          double(mins[0]) / (64 * wordcount),
	ldr	x1, [sp, 240]	// _143, MEM[(long long unsigned int * *)&mins]
// bitmapdecoding.cpp:246:   printf(" cycles per input byte %4.2f instructions per input byte %4.2f \n",
	add	x0, x0, :lo12:.LC19	//, tmp1226,
// bitmapdecoding.cpp:247:          double(mins[0]) / (64 * wordcount),
	shl	d0, d0, 6	// tmp1217, wordcount,
// bitmapdecoding.cpp:246:   printf(" cycles per input byte %4.2f instructions per input byte %4.2f \n",
	ldp	d2, d1, [x1]	// MEM[(value_type &)_143], MEM[(value_type &)_143 + 8], MEM[(value_type &)_143]
	ucvtf	d0, d0	// _33, tmp1217
	ucvtf	d2, d2	// tmp1222, MEM[(value_type &)_143]
	ucvtf	d1, d1	// tmp1219, MEM[(value_type &)_143 + 8]
	fdiv	d1, d1, d0	//, tmp1219, _33
	fdiv	d0, d2, d0	//, tmp1222, _33
	bl	printf		//
// bitmapdecoding.cpp:250:   printf("min: %8llu cycles, %8llu instructions, \t%8llu branch mis., %8llu "
	ldr	x5, [sp, 240]	// _144, MEM[(long long unsigned int * *)&mins]
	adrp	x0, .LC20	// tmp1233,
	add	x0, x0, :lo12:.LC20	//, tmp1233,
	ldp	x1, x2, [x5]	//,, MEM[(value_type &)_144]
	ldp	x3, x4, [x5, 16]	//,, MEM[(value_type &)_144 + 16]
	ldr	x5, [x5, 32]	//, MEM[(value_type &)_144 + 32]
	bl	printf		//
// bitmapdecoding.cpp:253:   printf("avg: %8.1f cycles, %8.1f instructions, \t%8.1f branch mis., %8.1f "
	ldr	x1, [sp, 264]	// _145, MEM[(double * *)&avg]
	adrp	x0, .LC21	// tmp1240,
	add	x0, x0, :lo12:.LC21	//, tmp1240,
	ldp	d0, d1, [x1]	//,, MEM[(value_type &)_145]
	ldp	d2, d3, [x1, 16]	//,, MEM[(value_type &)_145 + 16]
	ldr	d4, [x1, 32]	//, MEM[(value_type &)_145 + 32]
	bl	printf		//
// bitmapdecoding.cpp:256:   printf("\n");
	mov	w0, 10	//,
	bl	putchar		//
.LEHE91:
// bitmapdecoding.cpp:257:   delete[] array;
	cbz	x20, .L3212	// _62,
// bitmapdecoding.cpp:257:   delete[] array;
	mov	x0, x20	//, _62
	bl	_ZdaPv		//
.L3212:
// bitmapdecoding.cpp:258:   delete[] bigarray;
	mov	x0, x19	//, _66
	bl	_ZdaPv		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 264]	// _151, avg.D.45803._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3213	// _151,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3213:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 240]	// _150, mins.D.43930._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3214	// _150,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3214:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldp	x19, x20, [sp, 216]	// __first, prephitmp_584, allresults.D.44829._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x19, x20	// __first, prephitmp_584
	beq	.L3215		//,
	.p2align 3
.L3217:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [x19]	// _880, MEM[base: __first_364, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3216	// _880,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3216:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	add	x19, x19, 24	// __first, __first,
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x20, x19	// prephitmp_584, __first
	bne	.L3217		//,
	ldr	x20, [sp, 216]	// prephitmp_584, MEM[(struct _Vector_base *)&allresults]._M_impl._M_start
.L3215:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x20, .L3218	// prephitmp_584,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x20	//, prephitmp_584
	bl	_ZdlPv		//
.L3218:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 192]	// _149, results.D.43930._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3219	// _149,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3219:
// linux-perf-events.h:59:   ~LinuxEvents() { close(fd); }
	ldr	w0, [sp, 480]	//, unified.fd
	bl	close		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 632]	// _884, MEM[(struct vector *)&unified + 152B].D.42087._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3220	// _884,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3220:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 608]	// _885, MEM[(struct vector *)&unified + 128B].D.42087._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3221	// _885,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3221:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 168]	// _148, evts.D.42966._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L2959	// _148,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2959:
// bitmapdecoding.cpp:259: }
	ldp	x29, x30, [sp]	//,,
	ldp	x19, x20, [sp, 16]	//,,
	ldp	x21, x22, [sp, 32]	//,,
	ldp	x23, x24, [sp, 48]	//,,
	ldp	x25, x26, [sp, 64]	//,,
	ldp	x27, x28, [sp, 80]	//,,
	ldr	d8, [sp, 96]	//,
	add	sp, sp, 656	//,,
	.cfi_remember_state
	.cfi_restore 72
	.cfi_restore 29
	.cfi_restore 30
	.cfi_restore 27
	.cfi_restore 28
	.cfi_restore 25
	.cfi_restore 26
	.cfi_restore 23
	.cfi_restore 24
	.cfi_restore 21
	.cfi_restore 22
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
	ret	
.L3423:
	.cfi_restore_state
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x23, sp, 352	// tmp1262,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x1, .LC13	// tmp958,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x4, x23, 16	// tmp956, tmp1262,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x2, .LC13+29	// tmp960,
	mov	x0, x23	//, tmp1262
	add	x1, x1, :lo12:.LC13	//, tmp958,
	mov	w3, 0	//,
	add	x2, x2, :lo12:.LC13+29	//, tmp960,
	add	x24, sp, 216	// tmp1359,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	str	x4, [sp, 352]	// tmp956, MEM[(struct _Alloc_hider *)&D.64416]._M_p
.LEHB92:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
// linux-perf-events.h:88:     if (working)
	ldrb	w0, [sp, 484]	// unified.working, unified.working
	ldr	x21, [sp, 352]	// pretmp_382, MEM[(const struct basic_string *)&D.64416]
	cbnz	w0, .L3431	// unified.working,
.L3092:
// linux-perf-events.h:90:     working = false;
	strb	wzr, [sp, 484]	//, unified.working
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp1026, tmp1262,
	cmp	x21, x23	// pretmp_382, tmp1026
	beq	.L3091		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x21	//, pretmp_382
	bl	_ZdlPv		//
	b	.L3091		//
.L3421:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x1, .LC11	// tmp778,
	adrp	x2, .LC11+27	// tmp780,
	add	x1, x1, :lo12:.LC11	//, tmp778,
	add	x2, x2, :lo12:.LC11+27	//, tmp780,
	mov	w3, 0	//,
	add	x24, sp, 216	// tmp1348,,
	add	x0, sp, 384	// tmp1349,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	str	x26, [sp, 384]	// tmp1296, MEM[(struct _Alloc_hider *)&D.64295]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
// linux-perf-events.h:88:     if (working)
	ldrb	w0, [sp, 484]	// unified.working, unified.working
	ldr	x21, [sp, 384]	// prephitmp_543, MEM[(const struct basic_string *)&D.64295]
	cbnz	w0, .L3432	// unified.working,
.L3019:
// linux-perf-events.h:90:     working = false;
	strb	wzr, [sp, 484]	//, unified.working
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x21, x26	// prephitmp_543, tmp1296
	beq	.L3018		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x21	//, prephitmp_543
	bl	_ZdlPv		//
// linux-perf-events.h:66:     if (ioctl(fd, PERF_EVENT_IOC_ENABLE, PERF_IOC_FLAG_GROUP) == -1) {
	ldr	w0, [sp, 480]	//, unified.fd
	mov	w2, 1	//,
	mov	x1, 9216	//,
	bl	ioctl		//
// linux-perf-events.h:66:     if (ioctl(fd, PERF_EVENT_IOC_ENABLE, PERF_IOC_FLAG_GROUP) == -1) {
	cmn	w0, #1	//,
	bne	.L3051		//,
.L3422:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x1, .LC12	// tmp863,
	adrp	x2, .LC12+28	// tmp865,
	add	x1, x1, :lo12:.LC12	//, tmp863,
	add	x2, x2, :lo12:.LC12+28	//, tmp865,
	mov	w3, 0	//,
	add	x24, sp, 216	// tmp1355,,
	add	x0, sp, 384	// tmp1356,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	str	x26, [sp, 384]	// tmp1296, MEM[(struct _Alloc_hider *)&D.64294]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
// linux-perf-events.h:88:     if (working)
	ldrb	w0, [sp, 484]	// unified.working, unified.working
	ldr	x21, [sp, 384]	// prephitmp_484, MEM[(const struct basic_string *)&D.64294]
	cbnz	w0, .L3433	// unified.working,
.L3052:
// linux-perf-events.h:90:     working = false;
	strb	wzr, [sp, 484]	//, unified.working
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x21, x26	// prephitmp_484, tmp1296
	beq	.L3051		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x21	//, prephitmp_484
	bl	_ZdlPv		//
	b	.L3051		//
.L3161:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1085: 	  _M_realloc_insert(end(), __x);
	add	x24, sp, 216	// tmp1375,,
	mov	x1, x21	//, _756
	add	x2, sp, 192	//,,
	mov	x0, x24	// tmp1376, tmp1375
	bl	_ZNSt6vectorIS_IySaIyEESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_		//
	b	.L3167		//
.L3424:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x23, sp, 352	// tmp1262,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x1, .LC14	// tmp1045,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x4, x23, 16	// tmp1043, tmp1262,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x2, .LC14+4	// tmp1047,
	mov	x0, x23	//, tmp1262
	add	x1, x1, :lo12:.LC14	//, tmp1045,
	mov	w3, 0	//,
	add	x2, x2, :lo12:.LC14+4	//, tmp1047,
	add	x24, sp, 216	// tmp1368,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	str	x4, [sp, 352]	// tmp1043, MEM[(struct _Alloc_hider *)&D.64415]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE92:
// linux-perf-events.h:88:     if (working)
	ldrb	w0, [sp, 484]	// unified.working, unified.working
	ldr	x21, [sp, 352]	// prephitmp_657, MEM[(const struct basic_string *)&D.64415]
	cbnz	w0, .L3434	// unified.working,
.L3125:
// linux-perf-events.h:90:     working = false;
	strb	wzr, [sp, 484]	//, unified.working
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp1113, tmp1262,
	cmp	x21, x23	// prephitmp_657, tmp1113
	beq	.L3124		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x21	//, prephitmp_657
	bl	_ZdlPv		//
	b	.L3124		//
.L3431:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:440:       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
	ldr	x24, [sp, 360]	// _602, MEM[(const struct basic_string *)&D.64416 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	str	x26, [sp, 384]	// tmp1296, MEM[(struct _Alloc_hider *)&D.64428]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:211: 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
	cmn	x21, x24	// pretmp_382, _602
	ccmp	x21, 0, 0, ne	// pretmp_382,,,
	beq	.L3435		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:215: 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
	str	x24, [sp, 160]	// _602, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:217: 	if (__dnew > size_type(_S_local_capacity))
	cmp	x24, 15	// _602,
	bhi	.L3436		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:337: 	if (__n == 1)
	cmp	x24, 1	// _602,
	bne	.L3096		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:338: 	  traits_type::assign(*__d, *__s);
	ldrb	w1, [x21]	// _610, MEM[(const char_type &)pretmp_382]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	mov	x0, x26	// pretmp_644, tmp1296
	strb	w1, [sp, 400]	// _610, MEM[(char_type &)&D.64428 + 16]
	b	.L3097		//
.L3432:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:440:       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
	ldr	x22, [sp, 392]	// _399, MEM[(const struct basic_string *)&D.64295 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	str	x27, [sp, 320]	// tmp1299, MEM[(struct _Alloc_hider *)&D.64307]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:211: 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
	cmn	x21, x22	// prephitmp_543, _399
	ccmp	x21, 0, 0, ne	// prephitmp_543,,,
	beq	.L3437		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:215: 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
	str	x22, [sp, 144]	// _399, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:217: 	if (__dnew > size_type(_S_local_capacity))
	cmp	x22, 15	// _399,
	bhi	.L3438		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:337: 	if (__n == 1)
	cmp	x22, 1	// _399,
	bne	.L3023		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:338: 	  traits_type::assign(*__d, *__s);
	ldrb	w1, [x21]	// _407, MEM[(const char_type &)pretmp_1285]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	mov	x0, x27	// prephitmp_1282, tmp1299
	strb	w1, [sp, 336]	// _407, MEM[(char_type &)&D.64307 + 16]
	b	.L3024		//
.L3418:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:440:       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
	ldr	x28, [sp, 392]	// _288, MEM[(const struct basic_string *)&D.64225 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	str	x27, [sp, 288]	// tmp1303, MEM[(struct _Alloc_hider *)&D.64240]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:211: 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
	cmn	x21, x28	// prephitmp_341, _288
	ccmp	x21, 0, 0, ne	// prephitmp_341,,,
	beq	.L3439		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:215: 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
	str	x28, [sp, 136]	// _288, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:217: 	if (__dnew > size_type(_S_local_capacity))
	cmp	x28, 15	// _288,
	bhi	.L3440		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:337: 	if (__n == 1)
	cmp	x28, 1	// _288,
	bne	.L2975		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:338: 	  traits_type::assign(*__d, *__s);
	ldrb	w1, [x21]	// _296, MEM[(const char_type &)pretmp_354]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	mov	x0, x27	// pretmp_319, tmp1303
	strb	w1, [sp, 304]	// _296, MEM[(char_type &)&D.64240 + 16]
	b	.L2976		//
.L3433:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:440:       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
	ldr	x22, [sp, 392]	// prephitmp_467, MEM[(const struct basic_string *)&D.64294 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x23, sp, 352	// tmp1262,,
	add	x0, x23, 16	// tmp868, tmp1262,
	str	x0, [sp, 352]	// tmp868, MEM[(struct _Alloc_hider *)&D.64363]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:211: 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
	cmn	x21, x22	// prephitmp_484, prephitmp_467
	ccmp	x21, 0, 0, ne	// prephitmp_484,,,
	beq	.L3441		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:215: 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
	str	x22, [sp, 152]	// prephitmp_467, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:217: 	if (__dnew > size_type(_S_local_capacity))
	cmp	x22, 15	// prephitmp_467,
	bhi	.L3442		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:337: 	if (__n == 1)
	cmp	x22, 1	// prephitmp_467,
	bne	.L3056		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:338: 	  traits_type::assign(*__d, *__s);
	ldrb	w2, [x21]	// _494, MEM[(const char_type &)pretmp_626]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	mov	x1, x0	// pretmp_466, tmp868
	strb	w2, [sp, 368]	// _494, MEM[(char_type &)&D.64363 + 16]
.L3057:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x22, [sp, 360]	// prephitmp_467, MEM[(size_type *)&D.64363 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	mov	x0, 9223372036854775807	// tmp886,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, x22]	//, MEM[(char_type &)_497]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	ldr	x1, [sp, 360]	// MEM[(const struct basic_string *)&D.64363 + 8B], MEM[(const struct basic_string *)&D.64363 + 8B]
	sub	x0, x0, x1	// tmp885, tmp886, MEM[(const struct basic_string *)&D.64363 + 8B]
	cmp	x0, 1	// tmp885,
	bls	.L3443		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1268: 	return _M_append(__s, __n);
	adrp	x1, .LC9	// tmp891,
	mov	x2, 2	//,
	add	x1, x1, :lo12:.LC9	//, tmp891,
	mov	x0, x23	//, tmp1262
.LEHB93:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE93:
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	__errno_location		//
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	ldr	w0, [x0]	//, *_471
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x24, sp, 416	// tmp1264,,
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	strerror		//
	mov	x21, x0	// _473,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x1, x24, 16	// tmp895, tmp1264,
	str	x1, [sp, 416]	// tmp895, MEM[(struct _Alloc_hider *)&D.64362]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	mov	x2, -1	// iftmp.41_504,
	cbz	x0, .L3060	// _473,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:322: 	return __builtin_strlen(__s);
	bl	strlen		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	add	x2, x21, x0	// iftmp.41_504, _473,
.L3060:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	mov	x1, x21	//, _473
	mov	w3, 0	//,
	mov	x0, x24	//, tmp1264
.LEHB94:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE94:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x3, x4, [sp, 352]	// _509, _506, MEM[(const struct basic_string *)&D.64363]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	add	x0, x23, 16	// tmp905, tmp1262,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x1, x2, [sp, 416]	// pretmp_449, _507, MEM[(const struct basic_string *)&D.64362]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	mov	x6, 15	// tmp1279,
	cmp	x3, x0	// _509, tmp905
	ldr	x0, [sp, 368]	// D.64363.D.21280._M_allocated_capacity, D.64363.D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	add	x5, x4, x2	// __size, _506, _507
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	csel	x0, x0, x6, ne	// iftmp.59_511, D.64363.D.21280._M_allocated_capacity, tmp1279,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_511
	bls	.L3065		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 432]	// D.64362.D.21280._M_allocated_capacity, D.64362.D.21280._M_allocated_capacity
	add	x7, x24, 16	// tmp907, tmp1264,
	cmp	x1, x7	// pretmp_449, tmp907
	csel	x0, x0, x6, ne	// iftmp.59_515, D.64362.D.21280._M_allocated_capacity, tmp1279,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_515
	bls	.L3444		//,
.L3065:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x0, x23	//, tmp1262
.LEHB95:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE95:
.L3404:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x21, sp, 448	// tmp1265,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x1, x0	// _519,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x2, x21, 16	// tmp911, tmp1265,
	str	x2, [sp, 448]	// tmp911, MEM[(struct _Alloc_hider *)&D.64364]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x2, [x0], 16	// _522, MEM[(const struct basic_string *)iftmp.58_521]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:544: 	if (__str._M_is_local())
	cmp	x2, x0	// _522, _523
	beq	.L3445		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x2, [sp, 448]	// _522, MEM[(char * *)&D.64364]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:552: 	    _M_capacity(__str._M_allocated_capacity);
	ldr	x2, [x1, 16]	// _525, MEM[(struct basic_string &)iftmp.58_521].D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x2, [sp, 464]	// _525, MEM[(size_type *)&D.64364 + 16B]
.L3069:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:558: 	_M_length(__str.length());
	ldr	x2, [x1, 8]	// _526, MEM[(const struct basic_string *)iftmp.58_521 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x2, [sp, 456]	// _526, MEM[(size_type *)&D.64364 + 8B]
	stp	x0, xzr, [x1]	// _523,, MEM[(char * *)iftmp.58_521]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	adrp	x0, _ZSt4cerr	// tmp915,
	add	x0, x0, :lo12:_ZSt4cerr	//, tmp915,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, 16]	//, MEM[(char_type &)iftmp.58_521 + 16]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	ldp	x1, x2, [sp, 448]	//,, MEM[(const struct basic_string *)&D.64364]
.LEHB96:
	bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l		//
	mov	x28, x0	// _477,
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	ldr	x0, [x0]	// _477->_vptr.basic_ostream, _477->_vptr.basic_ostream
	ldr	x0, [x0, -24]	// MEM[(long int *)_531 + -24B], MEM[(long int *)_531 + -24B]
	add	x0, x28, x0	// tmp918, _477, MEM[(long int *)_531 + -24B]
	ldr	x22, [x0, 240]	// _535, MEM[(const struct __ctype_type * *)_534 + 240B]
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:49:       if (!__f)
	cbz	x22, .L3446	// _535,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:874: 	if (_M_widen_ok)
	ldrb	w0, [x22, 56]	// MEM[(const struct ctype *)_535]._M_widen_ok, MEM[(const struct ctype *)_535]._M_widen_ok
	cbz	w0, .L3071	// MEM[(const struct ctype *)_535]._M_widen_ok,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:875: 	  return _M_widen[static_cast<unsigned char>(__c)];
	ldrb	w1, [x22, 67]	// _542, MEM[(const struct ctype *)_535]._M_widen
.L3072:
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	mov	x0, x28	//, _477
	bl	_ZNSo3putEc		//
// /usr/local/include/c++/8.3.0/ostream:613:     { return __os.flush(); }
	bl	_ZNSo5flushEv		//
.LEHE96:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 448]	// _478, MEM[(const struct basic_string *)&D.64364]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x21, x21, 16	// tmp925, tmp1265,
	cmp	x0, x21	// _478, tmp925
	beq	.L3073		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3073:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _479, MEM[(const struct basic_string *)&D.64362]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x24, x24, 16	// tmp927, tmp1264,
	cmp	x0, x24	// _479, tmp927
	beq	.L3074		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3074:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 352]	// _480, MEM[(const struct basic_string *)&D.64363]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp929, tmp1262,
	cmp	x0, x23	// _480, tmp929
	beq	.L3075		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3075:
	ldr	x21, [sp, 384]	// prephitmp_484, MEM[(const struct basic_string *)&D.64294]
	b	.L3052		//
.L3434:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:440:       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
	ldr	x28, [sp, 360]	// _689, MEM[(const struct basic_string *)&D.64415 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x24, sp, 416	// tmp1264,,
	add	x0, x24, 16	// tmp1050, tmp1264,
	str	x0, [sp, 416]	// tmp1050, MEM[(struct _Alloc_hider *)&D.64484]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:211: 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
	cmn	x21, x28	// prephitmp_657, _689
	ccmp	x21, 0, 0, ne	// prephitmp_657,,,
	beq	.L3447		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:215: 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
	str	x28, [sp, 448]	// _689, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:217: 	if (__dnew > size_type(_S_local_capacity))
	cmp	x28, 15	// _689,
	bhi	.L3448		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:337: 	if (__n == 1)
	cmp	x28, 1	// _689,
	bne	.L3129		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:338: 	  traits_type::assign(*__d, *__s);
	ldrb	w2, [x21]	// _697, MEM[(const char_type &)pretmp_1427]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	mov	x1, x0	// pretmp_668, tmp1050
	strb	w2, [sp, 432]	// _697, MEM[(char_type &)&D.64484 + 16]
.L3130:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x28, [sp, 424]	// _689, MEM[(size_type *)&D.64484 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	mov	x0, 9223372036854775807	// tmp1068,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, x28]	//, MEM[(char_type &)_700]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	ldr	x1, [sp, 424]	// MEM[(const struct basic_string *)&D.64484 + 8B], MEM[(const struct basic_string *)&D.64484 + 8B]
	sub	x0, x0, x1	// tmp1067, tmp1068, MEM[(const struct basic_string *)&D.64484 + 8B]
	cmp	x0, 1	// tmp1067,
	bls	.L3449		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1268: 	return _M_append(__s, __n);
	adrp	x1, .LC9	// tmp1073,
	mov	x2, 2	//,
	add	x1, x1, :lo12:.LC9	//, tmp1073,
	mov	x0, x24	//, tmp1264
.LEHB97:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE97:
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	__errno_location		//
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	ldr	w0, [x0]	//, *_674
	bl	strerror		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	str	x26, [sp, 384]	// tmp1296, MEM[(struct _Alloc_hider *)&D.64483]._M_p
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	mov	x21, x0	// _676,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	mov	x2, -1	// iftmp.41_707,
	cbz	x0, .L3133	// _676,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:322: 	return __builtin_strlen(__s);
	bl	strlen		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	add	x2, x21, x0	// iftmp.41_707, _676,
.L3133:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	mov	x1, x21	//, _676
	mov	w3, 0	//,
	add	x0, sp, 384	// tmp1369,,
.LEHB98:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE98:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x3, x4, [sp, 416]	// _712, _709, MEM[(const struct basic_string *)&D.64484]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	add	x0, x24, 16	// tmp1087, tmp1264,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x1, x2, [sp, 384]	// pretmp_659, _710, MEM[(const struct basic_string *)&D.64483]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	mov	x6, 15	// tmp1287,
	cmp	x3, x0	// _712, tmp1087
	ldr	x0, [sp, 432]	// D.64484.D.21280._M_allocated_capacity, D.64484.D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	add	x5, x4, x2	// __size, _709, _710
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	csel	x0, x0, x6, ne	// iftmp.59_714, D.64484.D.21280._M_allocated_capacity, tmp1287,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_714
	bls	.L3138		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 400]	// D.64483.D.21280._M_allocated_capacity, D.64483.D.21280._M_allocated_capacity
	cmp	x1, x26	// pretmp_659, tmp1296
	csel	x0, x0, x6, ne	// iftmp.59_718, D.64483.D.21280._M_allocated_capacity, tmp1287,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_718
	bls	.L3450		//,
.L3138:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x0, x24	//, tmp1264
.LEHB99:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE99:
.L3406:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x21, sp, 448	// tmp1265,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x1, x0	// _722,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x2, x21, 16	// tmp1093, tmp1265,
	str	x2, [sp, 448]	// tmp1093, MEM[(struct _Alloc_hider *)&D.64485]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x2, [x0], 16	// _725, MEM[(const struct basic_string *)iftmp.58_724]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:544: 	if (__str._M_is_local())
	cmp	x2, x0	// _725, _726
	beq	.L3451		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x2, [sp, 448]	// _725, MEM[(char * *)&D.64485]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:552: 	    _M_capacity(__str._M_allocated_capacity);
	ldr	x2, [x1, 16]	// _728, MEM[(struct basic_string &)iftmp.58_724].D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x2, [sp, 464]	// _728, MEM[(size_type *)&D.64485 + 16B]
.L3142:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:558: 	_M_length(__str.length());
	ldr	x2, [x1, 8]	// _729, MEM[(const struct basic_string *)iftmp.58_724 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x2, [sp, 456]	// _729, MEM[(size_type *)&D.64485 + 8B]
	stp	x0, xzr, [x1]	// _726,, MEM[(char * *)iftmp.58_724]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	adrp	x0, _ZSt4cerr	// tmp1097,
	add	x0, x0, :lo12:_ZSt4cerr	//, tmp1097,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, 16]	//, MEM[(char_type &)iftmp.58_724 + 16]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	ldp	x1, x2, [sp, 448]	//,, MEM[(const struct basic_string *)&D.64485]
.LEHB100:
	bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l		//
	mov	x1, x0	// _680,
	str	x1, [sp, 112]	// _680, %sfp
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	ldr	x0, [x0]	// _680->_vptr.basic_ostream, _680->_vptr.basic_ostream
	ldr	x0, [x0, -24]	// MEM[(long int *)_734 + -24B], MEM[(long int *)_734 + -24B]
	add	x0, x1, x0	// tmp1100, _680, MEM[(long int *)_734 + -24B]
	ldr	x28, [x0, 240]	// _738, MEM[(const struct __ctype_type * *)_737 + 240B]
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:49:       if (!__f)
	cbz	x28, .L3452	// _738,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:874: 	if (_M_widen_ok)
	ldrb	w0, [x28, 56]	// MEM[(const struct ctype *)_738]._M_widen_ok, MEM[(const struct ctype *)_738]._M_widen_ok
	cbz	w0, .L3144	// MEM[(const struct ctype *)_738]._M_widen_ok,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:875: 	  return _M_widen[static_cast<unsigned char>(__c)];
	ldrb	w1, [x28, 67]	// _745, MEM[(const struct ctype *)_738]._M_widen
.L3145:
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	ldr	x0, [sp, 112]	//, %sfp
	bl	_ZNSo3putEc		//
// /usr/local/include/c++/8.3.0/ostream:613:     { return __os.flush(); }
	bl	_ZNSo5flushEv		//
.LEHE100:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 448]	// _681, MEM[(const struct basic_string *)&D.64485]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x21, x21, 16	// tmp1107, tmp1265,
	cmp	x0, x21	// _681, tmp1107
	beq	.L3146		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3146:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 384]	// _682, MEM[(const struct basic_string *)&D.64483]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x0, x26	// _682, tmp1296
	beq	.L3147		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3147:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _683, MEM[(const struct basic_string *)&D.64484]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x24, x24, 16	// tmp1111, tmp1264,
	cmp	x0, x24	// _683, tmp1111
	beq	.L3148		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3148:
	ldr	x21, [sp, 352]	// prephitmp_657, MEM[(const struct basic_string *)&D.64415]
	b	.L3125		//
.L3426:
// bitmapdecoding.cpp:233:     printf("bogus\n.");
	adrp	x0, .LC15	// tmp1150,
	add	x24, sp, 216	// tmp1259,,
	add	x0, x0, :lo12:.LC15	//, tmp1150,
.LEHB101:
	bl	printf		//
.LEHE101:
	b	.L3168		//
.L3420:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:829: 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
	add	x0, x3, x0, lsl 3	// _362, _355, _255,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1656: 	if (size_type __n = this->_M_impl._M_finish - __pos)
	cmp	x2, x0	// _356, _362
	beq	.L3007		//,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1660: 	    this->_M_impl._M_finish = __pos;
	str	x0, [sp, 616]	// _362, MEM[(long unsigned int * *)&unified + 136B]
	b	.L3007		//
.L3023:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:350: 	if (__n == 0)
	mov	x0, x27	// prephitmp_1282, tmp1299
	cbnz	x22, .L3022	// _399,
.L3024:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x22, [sp, 328]	// _399, MEM[(size_type *)&D.64307 + 8B]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x0, x22]	//, MEM[(char_type &)_410]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	mov	x0, 9223372036854775807	// tmp801,
	ldr	x1, [sp, 328]	// MEM[(const struct basic_string *)&D.64307 + 8B], MEM[(const struct basic_string *)&D.64307 + 8B]
	sub	x0, x0, x1	// tmp800, tmp801, MEM[(const struct basic_string *)&D.64307 + 8B]
	cmp	x0, 1	// tmp800,
	bls	.L3453		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1268: 	return _M_append(__s, __n);
	adrp	x1, .LC9	// tmp806,
	mov	x2, 2	//,
	add	x1, x1, :lo12:.LC9	//, tmp806,
	add	x0, sp, 320	// tmp1351,,
.LEHB102:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE102:
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	__errno_location		//
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	ldr	w0, [x0]	//, *_384
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x24, sp, 416	// tmp1264,,
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	strerror		//
	mov	x21, x0	// _386,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x1, x24, 16	// tmp810, tmp1264,
	str	x1, [sp, 416]	// tmp810, MEM[(struct _Alloc_hider *)&D.64306]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	mov	x2, -1	// iftmp.41_417,
	cbz	x0, .L3027	// _386,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:322: 	return __builtin_strlen(__s);
	bl	strlen		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	add	x2, x21, x0	// iftmp.41_417, _386,
.L3027:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	mov	x1, x21	//, _386
	mov	w3, 0	//,
	mov	x0, x24	//, tmp1264
.LEHB103:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE103:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x3, x4, [sp, 320]	// _422, _419, MEM[(const struct basic_string *)&D.64307]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	mov	x6, 15	// tmp1275,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x1, x2, [sp, 416]	// pretmp_552, _420, MEM[(const struct basic_string *)&D.64306]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 336]	// D.64307.D.21280._M_allocated_capacity, D.64307.D.21280._M_allocated_capacity
	cmp	x3, x27	// _422, tmp1299
	csel	x0, x0, x6, ne	// iftmp.59_424, D.64307.D.21280._M_allocated_capacity, tmp1275,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	add	x5, x4, x2	// __size, _419, _420
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_424
	bls	.L3032		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 432]	// D.64306.D.21280._M_allocated_capacity, D.64306.D.21280._M_allocated_capacity
	add	x7, x24, 16	// tmp822, tmp1264,
	cmp	x1, x7	// pretmp_552, tmp822
	csel	x0, x0, x6, ne	// iftmp.59_428, D.64306.D.21280._M_allocated_capacity, tmp1275,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_428
	bls	.L3454		//,
.L3032:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	add	x0, sp, 320	// tmp1353,,
.LEHB104:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE104:
.L3403:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x21, sp, 448	// tmp1265,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x1, x0	// _432,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x2, x21, 16	// tmp826, tmp1265,
	str	x2, [sp, 448]	// tmp826, MEM[(struct _Alloc_hider *)&D.64308]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x2, [x0], 16	// _435, MEM[(const struct basic_string *)iftmp.58_434]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:544: 	if (__str._M_is_local())
	cmp	x2, x0	// _435, _436
	beq	.L3455		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x2, [sp, 448]	// _435, MEM[(char * *)&D.64308]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:552: 	    _M_capacity(__str._M_allocated_capacity);
	ldr	x2, [x1, 16]	// _438, MEM[(struct basic_string &)iftmp.58_434].D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x2, [sp, 464]	// _438, MEM[(size_type *)&D.64308 + 16B]
.L3036:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:558: 	_M_length(__str.length());
	ldr	x2, [x1, 8]	// _439, MEM[(const struct basic_string *)iftmp.58_434 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x2, [sp, 456]	// _439, MEM[(size_type *)&D.64308 + 8B]
	stp	x0, xzr, [x1]	// _436,, MEM[(char * *)iftmp.58_434]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	adrp	x0, _ZSt4cerr	// tmp830,
	add	x0, x0, :lo12:_ZSt4cerr	//, tmp830,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, 16]	//, MEM[(char_type &)iftmp.58_434 + 16]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	ldp	x1, x2, [sp, 448]	//,, MEM[(const struct basic_string *)&D.64308]
.LEHB105:
	bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l		//
	mov	x23, x0	// _390,
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	ldr	x0, [x0]	// _390->_vptr.basic_ostream, _390->_vptr.basic_ostream
	ldr	x0, [x0, -24]	// MEM[(long int *)_444 + -24B], MEM[(long int *)_444 + -24B]
	add	x0, x23, x0	// tmp833, _390, MEM[(long int *)_444 + -24B]
	ldr	x22, [x0, 240]	// _448, MEM[(const struct __ctype_type * *)_447 + 240B]
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:49:       if (!__f)
	cbz	x22, .L3456	// _448,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:874: 	if (_M_widen_ok)
	ldrb	w0, [x22, 56]	// MEM[(const struct ctype *)_448]._M_widen_ok, MEM[(const struct ctype *)_448]._M_widen_ok
	cbz	w0, .L3038	// MEM[(const struct ctype *)_448]._M_widen_ok,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:875: 	  return _M_widen[static_cast<unsigned char>(__c)];
	ldrb	w1, [x22, 67]	// _455, MEM[(const struct ctype *)_448]._M_widen
.L3039:
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	mov	x0, x23	//, _390
	bl	_ZNSo3putEc		//
// /usr/local/include/c++/8.3.0/ostream:613:     { return __os.flush(); }
	bl	_ZNSo5flushEv		//
.LEHE105:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 448]	// _391, MEM[(const struct basic_string *)&D.64308]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x21, x21, 16	// tmp840, tmp1265,
	cmp	x0, x21	// _391, tmp840
	beq	.L3040		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3040:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _392, MEM[(const struct basic_string *)&D.64306]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x24, x24, 16	// tmp842, tmp1264,
	cmp	x0, x24	// _392, tmp842
	beq	.L3041		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3041:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 320]	// _393, MEM[(const struct basic_string *)&D.64307]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x0, x27	// _393, tmp1299
	beq	.L3042		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3042:
	ldr	x21, [sp, 384]	// prephitmp_543, MEM[(const struct basic_string *)&D.64295]
	b	.L3019		//
.L3096:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:350: 	if (__n == 0)
	mov	x0, x26	// pretmp_644, tmp1296
	cbnz	x24, .L3095	// _602,
.L3097:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x24, [sp, 392]	// _602, MEM[(size_type *)&D.64428 + 8B]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x0, x24]	//, MEM[(char_type &)_613]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	mov	x0, 9223372036854775807	// tmp981,
	ldr	x1, [sp, 392]	// MEM[(const struct basic_string *)&D.64428 + 8B], MEM[(const struct basic_string *)&D.64428 + 8B]
	sub	x0, x0, x1	// tmp980, tmp981, MEM[(const struct basic_string *)&D.64428 + 8B]
	cmp	x0, 1	// tmp980,
	bls	.L3457		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1268: 	return _M_append(__s, __n);
	adrp	x1, .LC9	// tmp986,
	mov	x2, 2	//,
	add	x1, x1, :lo12:.LC9	//, tmp986,
	add	x0, sp, 384	// tmp1361,,
.LEHB106:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE106:
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	__errno_location		//
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	ldr	w0, [x0]	//, *_587
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x24, sp, 416	// tmp1264,,
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	strerror		//
	mov	x21, x0	// _589,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x1, x24, 16	// tmp990, tmp1264,
	str	x1, [sp, 416]	// tmp990, MEM[(struct _Alloc_hider *)&D.64427]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	mov	x2, -1	// iftmp.41_620,
	cbz	x0, .L3100	// _589,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:322: 	return __builtin_strlen(__s);
	bl	strlen		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	add	x2, x21, x0	// iftmp.41_620, _589,
.L3100:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	mov	x1, x21	//, _589
	mov	w3, 0	//,
	mov	x0, x24	//, tmp1264
.LEHB107:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE107:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x3, x4, [sp, 384]	// _625, _622, MEM[(const struct basic_string *)&D.64428]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	mov	x6, 15	// tmp1283,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x1, x2, [sp, 416]	// pretmp_630, _623, MEM[(const struct basic_string *)&D.64427]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 400]	// D.64428.D.21280._M_allocated_capacity, D.64428.D.21280._M_allocated_capacity
	cmp	x3, x26	// _625, tmp1296
	csel	x0, x0, x6, ne	// iftmp.59_627, D.64428.D.21280._M_allocated_capacity, tmp1283,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	add	x5, x4, x2	// __size, _622, _623
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_627
	bls	.L3105		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 432]	// D.64427.D.21280._M_allocated_capacity, D.64427.D.21280._M_allocated_capacity
	add	x7, x24, 16	// tmp1002, tmp1264,
	cmp	x1, x7	// pretmp_630, tmp1002
	csel	x0, x0, x6, ne	// iftmp.59_631, D.64427.D.21280._M_allocated_capacity, tmp1283,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_631
	bls	.L3458		//,
.L3105:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	add	x0, sp, 384	// tmp1363,,
.LEHB108:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE108:
.L3405:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x21, sp, 448	// tmp1265,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x1, x0	// _635,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x2, x21, 16	// tmp1006, tmp1265,
	str	x2, [sp, 448]	// tmp1006, MEM[(struct _Alloc_hider *)&D.64429]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x2, [x0], 16	// _638, MEM[(const struct basic_string *)iftmp.58_637]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:544: 	if (__str._M_is_local())
	cmp	x2, x0	// _638, _639
	beq	.L3459		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x2, [sp, 448]	// _638, MEM[(char * *)&D.64429]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:552: 	    _M_capacity(__str._M_allocated_capacity);
	ldr	x2, [x1, 16]	// _641, MEM[(struct basic_string &)iftmp.58_637].D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x2, [sp, 464]	// _641, MEM[(size_type *)&D.64429 + 16B]
.L3109:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:558: 	_M_length(__str.length());
	ldr	x2, [x1, 8]	// _642, MEM[(const struct basic_string *)iftmp.58_637 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x2, [sp, 456]	// _642, MEM[(size_type *)&D.64429 + 8B]
	stp	x0, xzr, [x1]	// _639,, MEM[(char * *)iftmp.58_637]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	adrp	x0, _ZSt4cerr	// tmp1010,
	add	x0, x0, :lo12:_ZSt4cerr	//, tmp1010,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, 16]	//, MEM[(char_type &)iftmp.58_637 + 16]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	ldp	x1, x2, [sp, 448]	//,, MEM[(const struct basic_string *)&D.64429]
.LEHB109:
	bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l		//
	mov	x1, x0	// _593,
	str	x1, [sp, 112]	// _593, %sfp
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	ldr	x0, [x0]	// _593->_vptr.basic_ostream, _593->_vptr.basic_ostream
	ldr	x0, [x0, -24]	// MEM[(long int *)_647 + -24B], MEM[(long int *)_647 + -24B]
	add	x0, x1, x0	// tmp1013, _593, MEM[(long int *)_647 + -24B]
	ldr	x28, [x0, 240]	// _651, MEM[(const struct __ctype_type * *)_650 + 240B]
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:49:       if (!__f)
	cbz	x28, .L3460	// _651,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:874: 	if (_M_widen_ok)
	ldrb	w0, [x28, 56]	// MEM[(const struct ctype *)_651]._M_widen_ok, MEM[(const struct ctype *)_651]._M_widen_ok
	cbz	w0, .L3111	// MEM[(const struct ctype *)_651]._M_widen_ok,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:875: 	  return _M_widen[static_cast<unsigned char>(__c)];
	ldrb	w1, [x28, 67]	// _658, MEM[(const struct ctype *)_651]._M_widen
.L3112:
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	ldr	x0, [sp, 112]	//, %sfp
	bl	_ZNSo3putEc		//
// /usr/local/include/c++/8.3.0/ostream:613:     { return __os.flush(); }
	bl	_ZNSo5flushEv		//
.LEHE109:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 448]	// _594, MEM[(const struct basic_string *)&D.64429]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x21, x21, 16	// tmp1020, tmp1265,
	cmp	x0, x21	// _594, tmp1020
	beq	.L3113		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3113:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _595, MEM[(const struct basic_string *)&D.64427]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x24, x24, 16	// tmp1022, tmp1264,
	cmp	x0, x24	// _595, tmp1022
	beq	.L3114		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3114:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 384]	// _596, MEM[(const struct basic_string *)&D.64428]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x0, x26	// _596, tmp1296
	beq	.L3115		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3115:
	ldr	x21, [sp, 352]	// pretmp_382, MEM[(const struct basic_string *)&D.64416]
	b	.L3092		//
.L2975:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:350: 	if (__n == 0)
	mov	x0, x27	// pretmp_319, tmp1303
	cbnz	x28, .L2974	// _288,
.L2976:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x28, [sp, 296]	// _288, MEM[(size_type *)&D.64240 + 8B]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x0, x28]	//, MEM[(char_type &)_299]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	mov	x0, 9223372036854775807	// tmp693,
	ldr	x1, [sp, 296]	// MEM[(const struct basic_string *)&D.64240 + 8B], MEM[(const struct basic_string *)&D.64240 + 8B]
	sub	x0, x0, x1	// tmp692, tmp693, MEM[(const struct basic_string *)&D.64240 + 8B]
	cmp	x0, 1	// tmp692,
	bls	.L3461		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1268: 	return _M_append(__s, __n);
	adrp	x1, .LC9	// tmp698,
	mov	x2, 2	//,
	add	x1, x1, :lo12:.LC9	//, tmp698,
	add	x0, sp, 288	// tmp1331,,
.LEHB110:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE110:
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	__errno_location		//
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	ldr	w0, [x0]	//, *_273
	bl	strerror		//
	mov	x21, x0	// _275,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x1, sp, 432	// tmp702,,
	str	x1, [sp, 416]	// tmp702, MEM[(struct _Alloc_hider *)&D.64239]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	mov	x2, -1	// iftmp.41_306,
	cbz	x0, .L2979	// _275,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:322: 	return __builtin_strlen(__s);
	bl	strlen		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	add	x2, x21, x0	// iftmp.41_306, _275,
.L2979:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	mov	x1, x21	//, _275
	mov	w3, 0	//,
	add	x0, sp, 416	// tmp1334,,
.LEHB111:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE111:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x3, x4, [sp, 288]	// _311, _308, MEM[(const struct basic_string *)&D.64240]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	mov	x6, 15	// tmp1268,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x1, x2, [sp, 416]	// pretmp_755, _309, MEM[(const struct basic_string *)&D.64239]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 304]	// D.64240.D.21280._M_allocated_capacity, D.64240.D.21280._M_allocated_capacity
	cmp	x3, x27	// _311, tmp1303
	csel	x0, x0, x6, ne	// iftmp.59_313, D.64240.D.21280._M_allocated_capacity, tmp1268,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	add	x5, x4, x2	// __size, _308, _309
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_313
	bls	.L2984		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 432]	// D.64239.D.21280._M_allocated_capacity, D.64239.D.21280._M_allocated_capacity
	add	x7, sp, 432	// tmp714,,
	cmp	x1, x7	// pretmp_755, tmp714
	csel	x0, x0, x6, ne	// iftmp.59_317, D.64239.D.21280._M_allocated_capacity, tmp1268,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_317
	bls	.L3462		//,
.L2984:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	add	x0, sp, 288	// tmp1337,,
.LEHB112:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE112:
.L3402:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x21, sp, 448	// tmp1265,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x1, x0	// _321,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x2, x21, 16	// tmp718, tmp1265,
	str	x2, [sp, 448]	// tmp718, MEM[(struct _Alloc_hider *)&D.64241]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x2, [x0], 16	// _324, MEM[(const struct basic_string *)iftmp.58_323]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:544: 	if (__str._M_is_local())
	cmp	x2, x0	// _324, _325
	beq	.L3463		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x2, [sp, 448]	// _324, MEM[(char * *)&D.64241]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:552: 	    _M_capacity(__str._M_allocated_capacity);
	ldr	x2, [x1, 16]	// _327, MEM[(struct basic_string &)iftmp.58_323].D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x2, [sp, 464]	// _327, MEM[(size_type *)&D.64241 + 16B]
.L2988:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:558: 	_M_length(__str.length());
	ldr	x2, [x1, 8]	// _328, MEM[(const struct basic_string *)iftmp.58_323 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x2, [sp, 456]	// _328, MEM[(size_type *)&D.64241 + 8B]
	stp	x0, xzr, [x1]	// _325,, MEM[(char * *)iftmp.58_323]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	adrp	x0, _ZSt4cerr	// tmp722,
	add	x0, x0, :lo12:_ZSt4cerr	//, tmp722,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, 16]	//, MEM[(char_type &)iftmp.58_323 + 16]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	ldp	x1, x2, [sp, 448]	//,, MEM[(const struct basic_string *)&D.64241]
.LEHB113:
	bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l		//
	mov	x1, x0	// _279,
	str	x1, [sp, 120]	// _279, %sfp
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	ldr	x0, [x0]	// _279->_vptr.basic_ostream, _279->_vptr.basic_ostream
	ldr	x0, [x0, -24]	// MEM[(long int *)_333 + -24B], MEM[(long int *)_333 + -24B]
	add	x0, x1, x0	// tmp725, _279, MEM[(long int *)_333 + -24B]
	ldr	x28, [x0, 240]	// _337, MEM[(const struct __ctype_type * *)_336 + 240B]
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:49:       if (!__f)
	cbz	x28, .L3464	// _337,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:874: 	if (_M_widen_ok)
	ldrb	w0, [x28, 56]	// MEM[(const struct ctype *)_337]._M_widen_ok, MEM[(const struct ctype *)_337]._M_widen_ok
	cbz	w0, .L2990	// MEM[(const struct ctype *)_337]._M_widen_ok,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:875: 	  return _M_widen[static_cast<unsigned char>(__c)];
	ldrb	w1, [x28, 67]	// _344, MEM[(const struct ctype *)_337]._M_widen
.L2991:
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	ldr	x0, [sp, 120]	//, %sfp
	bl	_ZNSo3putEc		//
// /usr/local/include/c++/8.3.0/ostream:613:     { return __os.flush(); }
	bl	_ZNSo5flushEv		//
.LEHE113:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 448]	// _280, MEM[(const struct basic_string *)&D.64241]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x21, x21, 16	// tmp732, tmp1265,
	cmp	x0, x21	// _280, tmp732
	beq	.L2992		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2992:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _281, MEM[(const struct basic_string *)&D.64239]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 432	// tmp734,,
	cmp	x0, x1	// _281, tmp734
	beq	.L2993		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2993:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 288]	// _282, MEM[(const struct basic_string *)&D.64240]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x0, x27	// _282, tmp1303
	beq	.L2994		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2994:
	ldr	x21, [sp, 384]	// prephitmp_341, MEM[(const struct basic_string *)&D.64225]
	b	.L2971		//
.L3442:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:219: 	    _M_data(_M_create(__dnew, size_type(0)));
	mov	x2, 0	//,
	add	x1, sp, 152	//,,
	mov	x0, x23	//, tmp1262
.LEHB114:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm		//
.LEHE114:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	ldr	x1, [sp, 152]	// __dnew, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x0, [sp, 352]	// _491, MEM[(char * *)&D.64363]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x1, [sp, 368]	// __dnew, MEM[(size_type *)&D.64363 + 16B]
.L3055:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x2, x22	//, prephitmp_467
	mov	x1, x21	//, prephitmp_484
	bl	memcpy		//
	ldr	x22, [sp, 152]	// prephitmp_467, __dnew
	ldr	x1, [sp, 352]	// pretmp_466, MEM[(const struct basic_string *)&D.64363]
	b	.L3057		//
.L3448:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:219: 	    _M_data(_M_create(__dnew, size_type(0)));
	mov	x2, 0	//,
	add	x1, sp, 448	//,,
	mov	x0, x24	//, tmp1264
.LEHB115:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm		//
.LEHE115:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	ldr	x1, [sp, 448]	// __dnew, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x0, [sp, 416]	// _694, MEM[(char * *)&D.64484]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x1, [sp, 432]	// __dnew, MEM[(size_type *)&D.64484 + 16B]
.L3128:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x2, x28	//, _689
	mov	x1, x21	//, prephitmp_657
	bl	memcpy		//
	ldr	x1, [sp, 416]	// pretmp_668, MEM[(const struct basic_string *)&D.64484]
	ldr	x28, [sp, 448]	// _689, __dnew
	b	.L3130		//
.L3111:
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:876: 	this->_M_widen_init();
	mov	x0, x28	//, _651
.LEHB116:
	bl	_ZNKSt5ctypeIcE13_M_widen_initEv		//
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	ldr	x2, [x28]	// MEM[(const struct ctype *)_651].D.31376._vptr.facet, MEM[(const struct ctype *)_651].D.31376._vptr.facet
	adrp	x0, _ZNKSt5ctypeIcE8do_widenEc	// tmp1017,
	add	x0, x0, :lo12:_ZNKSt5ctypeIcE8do_widenEc	// tmp1016, tmp1017,
	mov	w1, 10	// _658,
	ldr	x2, [x2, 48]	// _662, MEM[(int (*) () *)_661 + 48B]
	cmp	x2, x0	// _662, tmp1016
	beq	.L3112		//,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	mov	x0, x28	//, _651
	blr	x2		// _662
.LEHE116:
	and	w1, w0, 255	// _658,
	b	.L3112		//
.L3038:
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:876: 	this->_M_widen_init();
	mov	x0, x22	//, _448
.LEHB117:
	bl	_ZNKSt5ctypeIcE13_M_widen_initEv		//
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	ldr	x2, [x22]	// MEM[(const struct ctype *)_448].D.31376._vptr.facet, MEM[(const struct ctype *)_448].D.31376._vptr.facet
	adrp	x0, _ZNKSt5ctypeIcE8do_widenEc	// tmp837,
	add	x0, x0, :lo12:_ZNKSt5ctypeIcE8do_widenEc	// tmp836, tmp837,
	mov	w1, 10	// _455,
	ldr	x2, [x2, 48]	// _459, MEM[(int (*) () *)_458 + 48B]
	cmp	x2, x0	// _459, tmp836
	beq	.L3039		//,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	mov	x0, x22	//, _448
	blr	x2		// _459
.LEHE117:
	and	w1, w0, 255	// _455,
	b	.L3039		//
.L2990:
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:876: 	this->_M_widen_init();
	mov	x0, x28	//, _337
.LEHB118:
	bl	_ZNKSt5ctypeIcE13_M_widen_initEv		//
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	ldr	x2, [x28]	// MEM[(const struct ctype *)_337].D.31376._vptr.facet, MEM[(const struct ctype *)_337].D.31376._vptr.facet
	adrp	x0, _ZNKSt5ctypeIcE8do_widenEc	// tmp729,
	add	x0, x0, :lo12:_ZNKSt5ctypeIcE8do_widenEc	// tmp728, tmp729,
	mov	w1, 10	// _344,
	ldr	x2, [x2, 48]	// _348, MEM[(int (*) () *)_347 + 48B]
	cmp	x2, x0	// _348, tmp728
	beq	.L2991		//,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	mov	x0, x28	//, _337
	blr	x2		// _348
.LEHE118:
	and	w1, w0, 255	// _344,
	b	.L2991		//
.L3459:
	ldp	x2, x3, [x1, 16]	// _640, MEM[(char * {ref-all})iftmp.58_637 + 16B]
	stp	x2, x3, [sp, 464]	// _640, MEM[(char * {ref-all})&D.64429 + 16B]
	b	.L3109		//
.L3436:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:219: 	    _M_data(_M_create(__dnew, size_type(0)));
	mov	x2, 0	//,
	add	x1, sp, 160	//,,
	add	x0, sp, 384	// tmp1360,,
.LEHB119:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm		//
.LEHE119:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	ldr	x1, [sp, 160]	// __dnew, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x0, [sp, 384]	// _607, MEM[(char * *)&D.64428]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x1, [sp, 400]	// __dnew, MEM[(size_type *)&D.64428 + 16B]
.L3095:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x2, x24	//, _602
	mov	x1, x21	//, pretmp_382
	bl	memcpy		//
	ldr	x24, [sp, 160]	// _602, __dnew
	ldr	x0, [sp, 384]	// pretmp_644, MEM[(const struct basic_string *)&D.64428]
	b	.L3097		//
.L3438:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:219: 	    _M_data(_M_create(__dnew, size_type(0)));
	mov	x2, 0	//,
	add	x1, sp, 144	//,,
	add	x0, sp, 320	// tmp1350,,
.LEHB120:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm		//
.LEHE120:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	ldr	x1, [sp, 144]	// __dnew, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x0, [sp, 320]	// _404, MEM[(char * *)&D.64307]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x1, [sp, 336]	// __dnew, MEM[(size_type *)&D.64307 + 16B]
.L3022:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x2, x22	//, _399
	mov	x1, x21	//, prephitmp_543
	bl	memcpy		//
	ldr	x22, [sp, 144]	// _399, __dnew
	ldr	x0, [sp, 320]	// prephitmp_1282, MEM[(const struct basic_string *)&D.64307]
	b	.L3024		//
.L3455:
	ldp	x2, x3, [x1, 16]	// _437, MEM[(char * {ref-all})iftmp.58_434 + 16B]
	stp	x2, x3, [sp, 464]	// _437, MEM[(char * {ref-all})&D.64308 + 16B]
	b	.L3036		//
.L3440:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:219: 	    _M_data(_M_create(__dnew, size_type(0)));
	mov	x2, 0	//,
	add	x1, sp, 136	//,,
	add	x0, sp, 288	// tmp1330,,
.LEHB121:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm		//
.LEHE121:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	ldr	x1, [sp, 136]	// __dnew, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x0, [sp, 288]	// _293, MEM[(char * *)&D.64240]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x1, [sp, 304]	// __dnew, MEM[(size_type *)&D.64240 + 16B]
.L2974:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x2, x28	//, _288
	mov	x1, x21	//, prephitmp_341
	bl	memcpy		//
	ldr	x28, [sp, 136]	// _288, __dnew
	ldr	x0, [sp, 288]	// pretmp_319, MEM[(const struct basic_string *)&D.64240]
	b	.L2976		//
.L3463:
	ldp	x2, x3, [x1, 16]	// _326, MEM[(char * {ref-all})iftmp.58_323 + 16B]
	stp	x2, x3, [sp, 464]	// _326, MEM[(char * {ref-all})&D.64241 + 16B]
	b	.L2988		//
.L3071:
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:876: 	this->_M_widen_init();
	mov	x0, x22	//, _535
.LEHB122:
	bl	_ZNKSt5ctypeIcE13_M_widen_initEv		//
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	ldr	x2, [x22]	// MEM[(const struct ctype *)_535].D.31376._vptr.facet, MEM[(const struct ctype *)_535].D.31376._vptr.facet
	adrp	x0, _ZNKSt5ctypeIcE8do_widenEc	// tmp922,
	add	x0, x0, :lo12:_ZNKSt5ctypeIcE8do_widenEc	// tmp921, tmp922,
	mov	w1, 10	// _542,
	ldr	x2, [x2, 48]	// _546, MEM[(int (*) () *)_545 + 48B]
	cmp	x2, x0	// _546, tmp921
	beq	.L3072		//,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	mov	x0, x22	//, _535
	blr	x2		// _546
.LEHE122:
	and	w1, w0, 255	// _542,
	b	.L3072		//
.L3231:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x22, 0	// _343,
	mov	x26, 0	// _222,
	b	.L2962		//
.L3419:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:827: 	  _M_default_append(__new_size - size());
	sub	x1, x0, x1	//, _255, tmp661
	add	x0, sp, 608	//,,
.LEHB123:
	bl	_ZNSt6vectorImSaImEE17_M_default_appendEm		//
	b	.L3007		//
.L2965:
	mov	x1, x21	//, _338
	add	x0, sp, 632	//,,
	bl	_ZNSt6vectorImSaImEE17_M_default_appendEm		//
.LEHE123:
	b	.L2969		//
.L3144:
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:876: 	this->_M_widen_init();
	mov	x0, x28	//, _738
.LEHB124:
	bl	_ZNKSt5ctypeIcE13_M_widen_initEv		//
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	ldr	x2, [x28]	// MEM[(const struct ctype *)_738].D.31376._vptr.facet, MEM[(const struct ctype *)_738].D.31376._vptr.facet
	adrp	x0, _ZNKSt5ctypeIcE8do_widenEc	// tmp1104,
	add	x0, x0, :lo12:_ZNKSt5ctypeIcE8do_widenEc	// tmp1103, tmp1104,
	mov	w1, 10	// _745,
	ldr	x2, [x2, 48]	// _749, MEM[(int (*) () *)_748 + 48B]
	cmp	x2, x0	// _749, tmp1103
	beq	.L3145		//,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	mov	x0, x28	//, _738
	blr	x2		// _749
.LEHE124:
	and	w1, w0, 255	// _745,
	b	.L3145		//
.L3015:
	add	x24, sp, 216	// tmp1259,,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:827: 	  _M_default_append(__new_size - size());
	add	x0, sp, 192	//,,
.LEHB125:
	bl	_ZNSt6vectorIySaIyEE17_M_default_appendEm		//
.LEHE125:
	b	.L3017		//
.L3129:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:350: 	if (__n == 0)
	mov	x1, x0	// pretmp_668, tmp1050
	cbz	x28, .L3130	// _689,
	b	.L3128		//
	.p2align 2
.L3056:
	mov	x1, x0	// pretmp_466, tmp868
	cbz	x22, .L3057	// prephitmp_467,
	b	.L3055		//
	.p2align 2
.L3462:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1932: 			  _M_limit(__pos, __n1), __s, __n2);
	mov	x2, 0	//,
	mov	x1, 0	//,
	add	x0, sp, 416	// tmp1336,,
.LEHB126:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm		//
.LEHE126:
	b	.L3402		//
.L3454:
	mov	x2, 0	//,
	mov	x1, 0	//,
	mov	x0, x24	//, tmp1264
.LEHB127:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm		//
.LEHE127:
	b	.L3403		//
.L3458:
	mov	x2, 0	//,
	mov	x1, 0	//,
	mov	x0, x24	//, tmp1264
.LEHB128:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm		//
.LEHE128:
	b	.L3405		//
.L3445:
	ldp	x2, x3, [x1, 16]	// _524, MEM[(char * {ref-all})iftmp.58_521 + 16B]
	stp	x2, x3, [sp, 464]	// _524, MEM[(char * {ref-all})&D.64364 + 16B]
	b	.L3069		//
.L3451:
	ldp	x2, x3, [x1, 16]	// _727, MEM[(char * {ref-all})iftmp.58_724 + 16B]
	stp	x2, x3, [sp, 464]	// _727, MEM[(char * {ref-all})&D.64485 + 16B]
	b	.L3142		//
.L3444:
	mov	x2, 0	//,
	mov	x1, 0	//,
	mov	x0, x24	//, tmp1264
.LEHB129:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm		//
.LEHE129:
	b	.L3404		//
.L3450:
	mov	x2, 0	//,
	mov	x1, 0	//,
	add	x0, sp, 384	// tmp1370,,
.LEHB130:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm		//
.LEHE130:
	b	.L3406		//
.L3464:
.LEHB131:
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:50: 	__throw_bad_cast();
	bl	_ZSt16__throw_bad_castv		//
.LEHE131:
.L3435:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:212: 	  std::__throw_logic_error(__N("basic_string::"
	adrp	x0, .LC6	// tmp970,
	add	x0, x0, :lo12:.LC6	//, tmp970,
.LEHB132:
	bl	_ZSt19__throw_logic_errorPKc		//
.LEHE132:
.L3439:
	adrp	x0, .LC6	// tmp682,
	add	x0, x0, :lo12:.LC6	//, tmp682,
.LEHB133:
	bl	_ZSt19__throw_logic_errorPKc		//
.LEHE133:
.L3437:
	adrp	x0, .LC6	// tmp790,
	add	x0, x0, :lo12:.LC6	//, tmp790,
.LEHB134:
	bl	_ZSt19__throw_logic_errorPKc		//
.LEHE134:
.L3417:
.LEHB135:
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:102: 	  std::__throw_bad_alloc();
	bl	_ZSt17__throw_bad_allocv		//
.LEHE135:
.L3447:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:212: 	  std::__throw_logic_error(__N("basic_string::"
	adrp	x0, .LC6	// tmp1057,
	add	x0, x0, :lo12:.LC6	//, tmp1057,
.LEHB136:
	bl	_ZSt19__throw_logic_errorPKc		//
.LEHE136:
.L3441:
	adrp	x0, .LC6	// tmp875,
	add	x0, x0, :lo12:.LC6	//, tmp875,
.LEHB137:
	bl	_ZSt19__throw_logic_errorPKc		//
.LEHE137:
	.p2align 2
.L3425:
.LEHB138:
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:102: 	  std::__throw_bad_alloc();
	bl	_ZSt17__throw_bad_allocv		//
.LEHE138:
.L3430:
.LEHB139:
	bl	_ZSt17__throw_bad_allocv		//
.LEHE139:
.L3429:
.LEHB140:
	bl	_ZSt17__throw_bad_allocv		//
.LEHE140:
.L3428:
.LEHB141:
	bl	_ZSt17__throw_bad_allocv		//
.LEHE141:
.L3427:
.LEHB142:
	bl	_ZSt17__throw_bad_allocv		//
.LEHE142:
.L3449:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:312: 	  __throw_length_error(__N(__s));
	adrp	x0, .LC8	// tmp1071,
	add	x0, x0, :lo12:.LC8	//, tmp1071,
.LEHB143:
	bl	_ZSt20__throw_length_errorPKc		//
.LEHE143:
.L3452:
.LEHB144:
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:50: 	__throw_bad_cast();
	bl	_ZSt16__throw_bad_castv		//
.LEHE144:
.L3443:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:312: 	  __throw_length_error(__N(__s));
	adrp	x0, .LC8	// tmp889,
	add	x0, x0, :lo12:.LC8	//, tmp889,
.LEHB145:
	bl	_ZSt20__throw_length_errorPKc		//
.LEHE145:
.L3456:
.LEHB146:
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:50: 	__throw_bad_cast();
	bl	_ZSt16__throw_bad_castv		//
.LEHE146:
.L3457:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:312: 	  __throw_length_error(__N(__s));
	adrp	x0, .LC8	// tmp984,
	add	x0, x0, :lo12:.LC8	//, tmp984,
.LEHB147:
	bl	_ZSt20__throw_length_errorPKc		//
.LEHE147:
.L3446:
.LEHB148:
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:50: 	__throw_bad_cast();
	bl	_ZSt16__throw_bad_castv		//
.LEHE148:
.L3453:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:312: 	  __throw_length_error(__N(__s));
	adrp	x0, .LC8	// tmp804,
	add	x0, x0, :lo12:.LC8	//, tmp804,
.LEHB149:
	bl	_ZSt20__throw_length_errorPKc		//
.LEHE149:
.L3460:
.LEHB150:
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:50: 	__throw_bad_cast();
	bl	_ZSt16__throw_bad_castv		//
.LEHE150:
.L3461:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:312: 	  __throw_length_error(__N(__s));
	adrp	x0, .LC8	// tmp696,
	add	x0, x0, :lo12:.LC8	//, tmp696,
.LEHB151:
	bl	_ZSt20__throw_length_errorPKc		//
.LEHE151:
.L3269:
	mov	x19, x0	// tmp898,
.L3063:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 384]	// _378,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 400	// tmp949,,
	cmp	x0, x1	// _378, tmp949
	beq	.L3228		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3228:
	add	x24, sp, 216	// tmp1259,,
.L3087:
// bitmapdecoding.cpp:220:   std::vector<std::vector<unsigned long long>> allresults;
	mov	x0, x24	//, tmp1259
	bl	_ZNSt6vectorIS_IySaIyEESaIS1_EED1Ev		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 192]	// _155, results.D.43930._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3229	// _155,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3229:
// bitmapdecoding.cpp:218:   LinuxEvents<PERF_TYPE_HARDWARE> unified(evts);
	add	x0, sp, 480	// tmp1377,,
	bl	_ZN11LinuxEventsILi0EED1Ev		//
.L3223:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 168]	// _156, evts.D.42966._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3230	// _156,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3230:
	mov	x0, x19	//, tmp1242
.LEHB152:
	bl	_Unwind_Resume		//
.L3279:
	mov	x19, x0	// tmp1080,
.L3136:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 352]	// _580,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp1136, tmp1262,
	cmp	x0, x23	// _580, tmp1136
	beq	.L3228		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L3228		//
.L3278:
	mov	x19, x0	// tmp1080,
	b	.L3136		//
.L3266:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 448]	// _283, MEM[(const struct basic_string *)&D.64241]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x21, x21, 16	// tmp740, tmp1265,
	mov	x19, x0	// tmp742,
	cmp	x1, x21	// _283, tmp740
	beq	.L2999		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _283
	bl	_ZdlPv		//
.L2999:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _284, MEM[(const struct basic_string *)&D.64239]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 432	// tmp746,,
	cmp	x0, x1	// _284, tmp746
	beq	.L3001		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3001:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 288]	// _285, MEM[(const struct basic_string *)&D.64240]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 304	// tmp750,,
	cmp	x0, x1	// _285, tmp750
	beq	.L2982		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L2982:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 384]	// _256, MEM[(const struct basic_string *)&D.64225]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 400	// tmp762,,
	cmp	x0, x1	// _256, tmp762
	beq	.L3009		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3009:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 632]	// _257, MEM[(struct vector *)&unified + 152B].D.42087._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3010	// _257,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3010:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 608]	// _258, MEM[(struct vector *)&unified + 128B].D.42087._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3011	// _258,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3011:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x26, .L3223	// _222,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x26	//, _222
	bl	_ZdlPv		//
	b	.L3223		//
.L3283:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 384]	// _604, MEM[(const struct basic_string *)&D.64428]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x2, sp, 400	// tmp992,,
	mov	x19, x0	// tmp994,
	cmp	x1, x2	// _604, tmp992
	beq	.L3136		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _691
.L3415:
	bl	_ZdlPv		//
	b	.L3136		//
.L3263:
	mov	x19, x0	// tmp705,
	b	.L2982		//
.L3267:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 288]	// _290, MEM[(const struct basic_string *)&D.64240]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x2, sp, 304	// tmp704,,
	mov	x19, x0	// tmp706,
	cmp	x1, x2	// _290, tmp704
	beq	.L2982		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _290
	bl	_ZdlPv		//
	b	.L2982		//
.L3264:
	mov	x19, x0	// tmp747,
	b	.L3001		//
.L3265:
	mov	x19, x0	// tmp741,
	b	.L2999		//
.L3268:
	mov	x19, x0	// tmp898,
	b	.L3063		//
.L3277:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 352]	// _488, MEM[(const struct basic_string *)&D.64363]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp897, tmp1262,
	mov	x19, x0	// tmp899,
	cmp	x1, x23	// _488, tmp897
	beq	.L3063		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _488
.L3412:
	bl	_ZdlPv		//
	b	.L3063		//
.L3274:
	mov	x19, x0	// tmp940,
.L3082:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 352]	// _483, MEM[(const struct basic_string *)&D.64363]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp943, tmp1262,
	cmp	x0, x23	// _483, tmp943
	beq	.L3063		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L3063		//
.L3258:
	mov	x19, x0	// tmp946, tmp1245
	add	x24, sp, 216	// tmp1259,,
	mov	x0, x21	//, tmp1265
	bl	_ZNSt6vectorIS_IySaIyEESaIS1_EED1Ev		//
	b	.L3087		//
.L3275:
	mov	x19, x0	// tmp934,
.L3080:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _482, MEM[(const struct basic_string *)&D.64362]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x24, x24, 16	// tmp939, tmp1264,
	cmp	x0, x24	// _482, tmp939
	beq	.L3082		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L3082		//
.L2960:
// bitmapdecoding.cpp:209:   uint32_t *bigarray = new uint32_t[wordcount * 64];
	bl	__cxa_throw_bad_array_new_length		//
.LEHE152:
.L3291:
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:86: 	  __catch(...)
	bl	__cxa_begin_catch		//
.L3204:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x26, x22	// __first, __cur
	bne	.L3465		//,
.LEHB153:
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:89: 	      __throw_exception_again;
	bl	__cxa_rethrow		//
.LEHE153:
.L3259:
	mov	x19, x0	// tmp1205,
.L3207:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 240]	// _154, mins.D.43930._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3228	// _154,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L3228		//
.L3465:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [x26]	// _852, MEM[base: __first_851, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3203	// _852,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3203:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	add	x26, x26, 24	// __first, __first,
	b	.L3204		//
.L3290:
	mov	x19, x0	// tmp1202,
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:86: 	  __catch(...)
	bl	__cxa_end_catch		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:285: 	_M_deallocate(_M_impl._M_start,
	ldr	x0, [sp, 448]	// _832, MEM[(struct _Vector_base *)&D.50558]._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3207	// _832,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L3207		//
.L3257:
	mov	x19, x0	// tmp946,
	b	.L3087		//
.L3284:
	mov	x19, x0	// tmp1122,
.L3155:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _686, MEM[(const struct basic_string *)&D.64484]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x24, x24, 16	// tmp1125, tmp1264,
	cmp	x0, x24	// _686, tmp1125
	beq	.L3136		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L3136		//
.L3262:
	mov	x19, x0	// tmp763,
	b	.L3009		//
.L3287:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 416]	// _691, MEM[(const struct basic_string *)&D.64484]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x24, x24, 16	// tmp1079, tmp1264,
	mov	x19, x0	// tmp1081,
	cmp	x1, x24	// _691, tmp1079
	beq	.L3136		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _691
	b	.L3415		//
.L3270:
	mov	x19, x0	// tmp855,
.L3049:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 320]	// _396, MEM[(const struct basic_string *)&D.64307]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 336	// tmp858,,
	cmp	x0, x1	// _396, tmp858
	beq	.L3063		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L3063		//
.L3289:
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:86: 	  __catch(...)
	bl	__cxa_begin_catch		//
.L3183:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x25, x22	// __first, __cur
	bne	.L3466		//,
.LEHB154:
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:89: 	      __throw_exception_again;
	bl	__cxa_rethrow		//
.LEHE154:
.L3466:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [x25]	// _802, MEM[base: __first_801, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3182	// _802,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3182:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	add	x25, x25, 24	// __first, __first,
	b	.L3183		//
.L3282:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 448]	// _597, MEM[(const struct basic_string *)&D.64429]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x21, x21, 16	// tmp1028, tmp1265,
	mov	x19, x0	// tmp1030,
	cmp	x1, x21	// _597, tmp1028
	beq	.L3120		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _597
	bl	_ZdlPv		//
.L3120:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _598, MEM[(const struct basic_string *)&D.64427]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x24, x24, 16	// tmp1034, tmp1264,
	cmp	x0, x24	// _598, tmp1034
	beq	.L3122		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3122:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 384]	// _599, MEM[(const struct basic_string *)&D.64428]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 400	// tmp1038,,
	cmp	x0, x1	// _599, tmp1038
	beq	.L3136		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L3136		//
.L3271:
	mov	x19, x0	// tmp849,
	b	.L3047		//
.L3256:
	mov	x19, x0	// tmp1242,
	b	.L3223		//
.L3286:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 448]	// _684, MEM[(const struct basic_string *)&D.64485]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x21, x21, 16	// tmp1115, tmp1265,
	mov	x19, x0	// tmp1117,
	cmp	x1, x21	// _684, tmp1115
	beq	.L3153		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _684
	bl	_ZdlPv		//
.L3153:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 384]	// _685, MEM[(const struct basic_string *)&D.64483]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 400	// tmp1121,,
	cmp	x0, x1	// _685, tmp1121
	beq	.L3155		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L3155		//
.L3280:
	mov	x19, x0	// tmp1035,
	b	.L3122		//
.L3281:
	mov	x19, x0	// tmp1029,
	b	.L3120		//
.L3261:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x1, [sp, 264]	// _153, avg.D.45803._M_impl._M_start
	mov	x19, x0	// tmp1250,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x1, .L3207	// _153,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _153
	bl	_ZdlPv		//
	b	.L3207		//
.L3260:
	mov	x19, x0	// tmp1248,
	mov	x0, x21	//, tmp1265
	bl	_ZNSt6vectorIS_IySaIyEESaIS1_EED1Ev		//
	b	.L3207		//
.L3288:
	mov	x19, x0	// tmp1182,
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:86: 	  __catch(...)
	bl	__cxa_end_catch		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:285: 	_M_deallocate(_M_impl._M_start,
	ldr	x0, [sp, 448]	// _788, MEM[(struct _Vector_base *)&D.50555]._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3228	// _788,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L3228		//
.L3276:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 448]	// _481, MEM[(const struct basic_string *)&D.64364]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x21, x21, 16	// tmp933, tmp1265,
	mov	x19, x0	// tmp935,
	cmp	x1, x21	// _481, tmp933
	beq	.L3080		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _481
	bl	_ZdlPv		//
	b	.L3080		//
.L3285:
	mov	x19, x0	// tmp1116,
	b	.L3153		//
.L3272:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 448]	// _394, MEM[(const struct basic_string *)&D.64308]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x21, x21, 16	// tmp848, tmp1265,
	mov	x19, x0	// tmp850,
	cmp	x1, x21	// _394, tmp848
	beq	.L3047		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _394
	bl	_ZdlPv		//
.L3047:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _395, MEM[(const struct basic_string *)&D.64306]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x24, x24, 16	// tmp854, tmp1264,
	cmp	x0, x24	// _395, tmp854
	beq	.L3049		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L3049		//
.L3273:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 320]	// _401, MEM[(const struct basic_string *)&D.64307]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x2, sp, 336	// tmp812,,
	mov	x19, x0	// tmp814,
	cmp	x1, x2	// _401, tmp812
	beq	.L3063		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _488
	b	.L3412		//
	.cfi_endproc
.LFE2327:
	.section	.gcc_except_table
	.align	2
.LLSDA2327:
	.byte	0xff
	.byte	0x9b
	.uleb128 .LLSDATT2327-.LLSDATTD2327
.LLSDATTD2327:
	.byte	0x1
	.uleb128 .LLSDACSE2327-.LLSDACSB2327
.LLSDACSB2327:
	.uleb128 .LEHB82-.LFB2327
	.uleb128 .LEHE82-.LEHB82
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB83-.LFB2327
	.uleb128 .LEHE83-.LEHB83
	.uleb128 .L3256-.LFB2327
	.uleb128 0
	.uleb128 .LEHB84-.LFB2327
	.uleb128 .LEHE84-.LEHB84
	.uleb128 .L3262-.LFB2327
	.uleb128 0
	.uleb128 .LEHB85-.LFB2327
	.uleb128 .LEHE85-.LEHB85
	.uleb128 .L3257-.LFB2327
	.uleb128 0
	.uleb128 .LEHB86-.LFB2327
	.uleb128 .LEHE86-.LEHB86
	.uleb128 .L3289-.LFB2327
	.uleb128 0x1
	.uleb128 .LEHB87-.LFB2327
	.uleb128 .LEHE87-.LEHB87
	.uleb128 .L3258-.LFB2327
	.uleb128 0
	.uleb128 .LEHB88-.LFB2327
	.uleb128 .LEHE88-.LEHB88
	.uleb128 .L3259-.LFB2327
	.uleb128 0
	.uleb128 .LEHB89-.LFB2327
	.uleb128 .LEHE89-.LEHB89
	.uleb128 .L3291-.LFB2327
	.uleb128 0x1
	.uleb128 .LEHB90-.LFB2327
	.uleb128 .LEHE90-.LEHB90
	.uleb128 .L3260-.LFB2327
	.uleb128 0
	.uleb128 .LEHB91-.LFB2327
	.uleb128 .LEHE91-.LEHB91
	.uleb128 .L3261-.LFB2327
	.uleb128 0
	.uleb128 .LEHB92-.LFB2327
	.uleb128 .LEHE92-.LEHB92
	.uleb128 .L3257-.LFB2327
	.uleb128 0
	.uleb128 .LEHB93-.LFB2327
	.uleb128 .LEHE93-.LEHB93
	.uleb128 .L3277-.LFB2327
	.uleb128 0
	.uleb128 .LEHB94-.LFB2327
	.uleb128 .LEHE94-.LEHB94
	.uleb128 .L3274-.LFB2327
	.uleb128 0
	.uleb128 .LEHB95-.LFB2327
	.uleb128 .LEHE95-.LEHB95
	.uleb128 .L3275-.LFB2327
	.uleb128 0
	.uleb128 .LEHB96-.LFB2327
	.uleb128 .LEHE96-.LEHB96
	.uleb128 .L3276-.LFB2327
	.uleb128 0
	.uleb128 .LEHB97-.LFB2327
	.uleb128 .LEHE97-.LEHB97
	.uleb128 .L3287-.LFB2327
	.uleb128 0
	.uleb128 .LEHB98-.LFB2327
	.uleb128 .LEHE98-.LEHB98
	.uleb128 .L3284-.LFB2327
	.uleb128 0
	.uleb128 .LEHB99-.LFB2327
	.uleb128 .LEHE99-.LEHB99
	.uleb128 .L3285-.LFB2327
	.uleb128 0
	.uleb128 .LEHB100-.LFB2327
	.uleb128 .LEHE100-.LEHB100
	.uleb128 .L3286-.LFB2327
	.uleb128 0
	.uleb128 .LEHB101-.LFB2327
	.uleb128 .LEHE101-.LEHB101
	.uleb128 .L3257-.LFB2327
	.uleb128 0
	.uleb128 .LEHB102-.LFB2327
	.uleb128 .LEHE102-.LEHB102
	.uleb128 .L3273-.LFB2327
	.uleb128 0
	.uleb128 .LEHB103-.LFB2327
	.uleb128 .LEHE103-.LEHB103
	.uleb128 .L3270-.LFB2327
	.uleb128 0
	.uleb128 .LEHB104-.LFB2327
	.uleb128 .LEHE104-.LEHB104
	.uleb128 .L3271-.LFB2327
	.uleb128 0
	.uleb128 .LEHB105-.LFB2327
	.uleb128 .LEHE105-.LEHB105
	.uleb128 .L3272-.LFB2327
	.uleb128 0
	.uleb128 .LEHB106-.LFB2327
	.uleb128 .LEHE106-.LEHB106
	.uleb128 .L3283-.LFB2327
	.uleb128 0
	.uleb128 .LEHB107-.LFB2327
	.uleb128 .LEHE107-.LEHB107
	.uleb128 .L3280-.LFB2327
	.uleb128 0
	.uleb128 .LEHB108-.LFB2327
	.uleb128 .LEHE108-.LEHB108
	.uleb128 .L3281-.LFB2327
	.uleb128 0
	.uleb128 .LEHB109-.LFB2327
	.uleb128 .LEHE109-.LEHB109
	.uleb128 .L3282-.LFB2327
	.uleb128 0
	.uleb128 .LEHB110-.LFB2327
	.uleb128 .LEHE110-.LEHB110
	.uleb128 .L3267-.LFB2327
	.uleb128 0
	.uleb128 .LEHB111-.LFB2327
	.uleb128 .LEHE111-.LEHB111
	.uleb128 .L3264-.LFB2327
	.uleb128 0
	.uleb128 .LEHB112-.LFB2327
	.uleb128 .LEHE112-.LEHB112
	.uleb128 .L3265-.LFB2327
	.uleb128 0
	.uleb128 .LEHB113-.LFB2327
	.uleb128 .LEHE113-.LEHB113
	.uleb128 .L3266-.LFB2327
	.uleb128 0
	.uleb128 .LEHB114-.LFB2327
	.uleb128 .LEHE114-.LEHB114
	.uleb128 .L3268-.LFB2327
	.uleb128 0
	.uleb128 .LEHB115-.LFB2327
	.uleb128 .LEHE115-.LEHB115
	.uleb128 .L3278-.LFB2327
	.uleb128 0
	.uleb128 .LEHB116-.LFB2327
	.uleb128 .LEHE116-.LEHB116
	.uleb128 .L3282-.LFB2327
	.uleb128 0
	.uleb128 .LEHB117-.LFB2327
	.uleb128 .LEHE117-.LEHB117
	.uleb128 .L3272-.LFB2327
	.uleb128 0
	.uleb128 .LEHB118-.LFB2327
	.uleb128 .LEHE118-.LEHB118
	.uleb128 .L3266-.LFB2327
	.uleb128 0
	.uleb128 .LEHB119-.LFB2327
	.uleb128 .LEHE119-.LEHB119
	.uleb128 .L3279-.LFB2327
	.uleb128 0
	.uleb128 .LEHB120-.LFB2327
	.uleb128 .LEHE120-.LEHB120
	.uleb128 .L3269-.LFB2327
	.uleb128 0
	.uleb128 .LEHB121-.LFB2327
	.uleb128 .LEHE121-.LEHB121
	.uleb128 .L3263-.LFB2327
	.uleb128 0
	.uleb128 .LEHB122-.LFB2327
	.uleb128 .LEHE122-.LEHB122
	.uleb128 .L3276-.LFB2327
	.uleb128 0
	.uleb128 .LEHB123-.LFB2327
	.uleb128 .LEHE123-.LEHB123
	.uleb128 .L3262-.LFB2327
	.uleb128 0
	.uleb128 .LEHB124-.LFB2327
	.uleb128 .LEHE124-.LEHB124
	.uleb128 .L3286-.LFB2327
	.uleb128 0
	.uleb128 .LEHB125-.LFB2327
	.uleb128 .LEHE125-.LEHB125
	.uleb128 .L3257-.LFB2327
	.uleb128 0
	.uleb128 .LEHB126-.LFB2327
	.uleb128 .LEHE126-.LEHB126
	.uleb128 .L3265-.LFB2327
	.uleb128 0
	.uleb128 .LEHB127-.LFB2327
	.uleb128 .LEHE127-.LEHB127
	.uleb128 .L3271-.LFB2327
	.uleb128 0
	.uleb128 .LEHB128-.LFB2327
	.uleb128 .LEHE128-.LEHB128
	.uleb128 .L3281-.LFB2327
	.uleb128 0
	.uleb128 .LEHB129-.LFB2327
	.uleb128 .LEHE129-.LEHB129
	.uleb128 .L3275-.LFB2327
	.uleb128 0
	.uleb128 .LEHB130-.LFB2327
	.uleb128 .LEHE130-.LEHB130
	.uleb128 .L3285-.LFB2327
	.uleb128 0
	.uleb128 .LEHB131-.LFB2327
	.uleb128 .LEHE131-.LEHB131
	.uleb128 .L3266-.LFB2327
	.uleb128 0
	.uleb128 .LEHB132-.LFB2327
	.uleb128 .LEHE132-.LEHB132
	.uleb128 .L3279-.LFB2327
	.uleb128 0
	.uleb128 .LEHB133-.LFB2327
	.uleb128 .LEHE133-.LEHB133
	.uleb128 .L3263-.LFB2327
	.uleb128 0
	.uleb128 .LEHB134-.LFB2327
	.uleb128 .LEHE134-.LEHB134
	.uleb128 .L3269-.LFB2327
	.uleb128 0
	.uleb128 .LEHB135-.LFB2327
	.uleb128 .LEHE135-.LEHB135
	.uleb128 .L3256-.LFB2327
	.uleb128 0
	.uleb128 .LEHB136-.LFB2327
	.uleb128 .LEHE136-.LEHB136
	.uleb128 .L3278-.LFB2327
	.uleb128 0
	.uleb128 .LEHB137-.LFB2327
	.uleb128 .LEHE137-.LEHB137
	.uleb128 .L3268-.LFB2327
	.uleb128 0
	.uleb128 .LEHB138-.LFB2327
	.uleb128 .LEHE138-.LEHB138
	.uleb128 .L3257-.LFB2327
	.uleb128 0
	.uleb128 .LEHB139-.LFB2327
	.uleb128 .LEHE139-.LEHB139
	.uleb128 .L3291-.LFB2327
	.uleb128 0x1
	.uleb128 .LEHB140-.LFB2327
	.uleb128 .LEHE140-.LEHB140
	.uleb128 .L3259-.LFB2327
	.uleb128 0
	.uleb128 .LEHB141-.LFB2327
	.uleb128 .LEHE141-.LEHB141
	.uleb128 .L3289-.LFB2327
	.uleb128 0x1
	.uleb128 .LEHB142-.LFB2327
	.uleb128 .LEHE142-.LEHB142
	.uleb128 .L3257-.LFB2327
	.uleb128 0
	.uleb128 .LEHB143-.LFB2327
	.uleb128 .LEHE143-.LEHB143
	.uleb128 .L3287-.LFB2327
	.uleb128 0
	.uleb128 .LEHB144-.LFB2327
	.uleb128 .LEHE144-.LEHB144
	.uleb128 .L3286-.LFB2327
	.uleb128 0
	.uleb128 .LEHB145-.LFB2327
	.uleb128 .LEHE145-.LEHB145
	.uleb128 .L3277-.LFB2327
	.uleb128 0
	.uleb128 .LEHB146-.LFB2327
	.uleb128 .LEHE146-.LEHB146
	.uleb128 .L3272-.LFB2327
	.uleb128 0
	.uleb128 .LEHB147-.LFB2327
	.uleb128 .LEHE147-.LEHB147
	.uleb128 .L3283-.LFB2327
	.uleb128 0
	.uleb128 .LEHB148-.LFB2327
	.uleb128 .LEHE148-.LEHB148
	.uleb128 .L3276-.LFB2327
	.uleb128 0
	.uleb128 .LEHB149-.LFB2327
	.uleb128 .LEHE149-.LEHB149
	.uleb128 .L3273-.LFB2327
	.uleb128 0
	.uleb128 .LEHB150-.LFB2327
	.uleb128 .LEHE150-.LEHB150
	.uleb128 .L3282-.LFB2327
	.uleb128 0
	.uleb128 .LEHB151-.LFB2327
	.uleb128 .LEHE151-.LEHB151
	.uleb128 .L3267-.LFB2327
	.uleb128 0
	.uleb128 .LEHB152-.LFB2327
	.uleb128 .LEHE152-.LEHB152
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB153-.LFB2327
	.uleb128 .LEHE153-.LEHB153
	.uleb128 .L3290-.LFB2327
	.uleb128 0
	.uleb128 .LEHB154-.LFB2327
	.uleb128 .LEHE154-.LEHB154
	.uleb128 .L3288-.LFB2327
	.uleb128 0
.LLSDACSE2327:
	.byte	0x1
	.byte	0
	.align	2
	.4byte	0

.LLSDATT2327:
	.section	.text._Z4testIXadL_Z13basic_decoderPjRjjmEEEvPKcc,"axG",@progbits,_Z4testIXadL_Z13basic_decoderPjRjjmEEEvPKcc,comdat
	.size	_Z4testIXadL_Z13basic_decoderPjRjjmEEEvPKcc, .-_Z4testIXadL_Z13basic_decoderPjRjjmEEEvPKcc
	.section	.text._Z4testIXadL_Z16simdjson_decoderPjRjjmEEEvPKcc,"axG",@progbits,_Z4testIXadL_Z16simdjson_decoderPjRjjmEEEvPKcc,comdat
	.align	2
	.p2align 3,,7
	.weak	_Z4testIXadL_Z16simdjson_decoderPjRjjmEEEvPKcc
	.type	_Z4testIXadL_Z16simdjson_decoderPjRjjmEEEvPKcc, %function
_Z4testIXadL_Z16simdjson_decoderPjRjjmEEEvPKcc:
.LFB2325:
	.cfi_startproc
	.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
	.cfi_lsda 0x1b,.LLSDA2325
	sub	sp, sp, #656	//,,
	.cfi_def_cfa_offset 656
// bitmapdecoding.cpp:208:   uint64_t *array = build_bitmap(filename, target, &wordcount);
	add	x2, sp, 128	//,,
// bitmapdecoding.cpp:206: void test(const char *filename, char target) {
	stp	x29, x30, [sp]	//,,
	.cfi_offset 29, -656
	.cfi_offset 30, -648
	mov	x29, sp	//,
	stp	x19, x20, [sp, 16]	//,,
	stp	x21, x22, [sp, 32]	//,,
	stp	x23, x24, [sp, 48]	//,,
	stp	x25, x26, [sp, 64]	//,,
	stp	x27, x28, [sp, 80]	//,,
	.cfi_offset 19, -640
	.cfi_offset 20, -632
	.cfi_offset 21, -624
	.cfi_offset 22, -616
	.cfi_offset 23, -608
	.cfi_offset 24, -600
	.cfi_offset 25, -592
	.cfi_offset 26, -584
	.cfi_offset 27, -576
	.cfi_offset 28, -568
.LEHB155:
// bitmapdecoding.cpp:208:   uint64_t *array = build_bitmap(filename, target, &wordcount);
	bl	_Z12build_bitmapPKccPm		//
	mov	x20, x0	// _67,
// bitmapdecoding.cpp:209:   uint32_t *bigarray = new uint32_t[wordcount * 64];
	ldr	x0, [sp, 128]	// wordcount.126_1, wordcount
// bitmapdecoding.cpp:209:   uint32_t *bigarray = new uint32_t[wordcount * 64];
	mov	x1, 2305843009213693950	// tmp622,
	cmp	x1, x0, lsl 6	// tmp622, wordcount.126_1,
	bcc	.L3468		//,
// bitmapdecoding.cpp:209:   uint32_t *bigarray = new uint32_t[wordcount * 64];
	lsl	x0, x0, 8	//, wordcount.126_1,
	bl	_Znam		//
.LEHE155:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	add	x1, sp, 480	// tmp1316,,
// bitmapdecoding.cpp:209:   uint32_t *bigarray = new uint32_t[wordcount * 64];
	mov	x19, x0	// _71,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	add	x0, sp, 168	// tmp1317,,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:96: 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [sp, 168]	//,, MEM[(struct _Vector_impl *)&evts]._M_start
	str	xzr, [sp, 184]	//, MEM[(struct _Vector_impl *)&evts]._M_end_of_storage
// bitmapdecoding.cpp:213:   evts.push_back(PERF_COUNT_HW_CPU_CYCLES);
	str	wzr, [sp, 480]	//, D.50492
.LEHB156:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	bl	_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_		//
// bitmapdecoding.cpp:214:   evts.push_back(PERF_COUNT_HW_INSTRUCTIONS);
	mov	w2, 1	// tmp627,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	add	x1, sp, 480	// tmp1318,,
	add	x0, sp, 168	// tmp1319,,
// bitmapdecoding.cpp:214:   evts.push_back(PERF_COUNT_HW_INSTRUCTIONS);
	str	w2, [sp, 480]	// tmp627, D.50493
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	bl	_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_		//
// bitmapdecoding.cpp:215:   evts.push_back(PERF_COUNT_HW_BRANCH_MISSES);
	mov	w2, 5	// tmp630,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	add	x1, sp, 480	// tmp1320,,
	add	x0, sp, 168	// tmp1321,,
// bitmapdecoding.cpp:215:   evts.push_back(PERF_COUNT_HW_BRANCH_MISSES);
	str	w2, [sp, 480]	// tmp630, D.50494
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	bl	_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_		//
// bitmapdecoding.cpp:216:   evts.push_back(PERF_COUNT_HW_CACHE_REFERENCES);
	mov	w2, 2	// tmp633,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	add	x1, sp, 480	// tmp1322,,
	add	x0, sp, 168	// tmp1323,,
// bitmapdecoding.cpp:216:   evts.push_back(PERF_COUNT_HW_CACHE_REFERENCES);
	str	w2, [sp, 480]	// tmp633, D.50495
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	bl	_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_		//
// bitmapdecoding.cpp:217:   evts.push_back(PERF_COUNT_HW_CACHE_MISSES);
	mov	w2, 3	// tmp636,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	add	x0, sp, 168	// tmp1324,,
	add	x1, sp, 480	// tmp1325,,
// bitmapdecoding.cpp:217:   evts.push_back(PERF_COUNT_HW_CACHE_MISSES);
	str	w2, [sp, 480]	// tmp636, D.50496
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	bl	_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:460: 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
	ldp	x1, x0, [sp, 168]	// prephitmp_261, pretmp_459, MEM[(int * *)&evts]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x25, x0, x1	// _1108, pretmp_459, prephitmp_261
	asr	x21, x25, 2	// prephitmp_328, _1108,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	cbz	x21, .L3738	// prephitmp_328,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	mov	x0, 4611686018427387903	// tmp640,
	cmp	x21, x0	// prephitmp_328, tmp640
	bhi	.L3920		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x25	//, _1108
	bl	_Znwm		//
.LEHE156:
	mov	x27, x0	// _212,
	ldp	x1, x0, [sp, 168]	// prephitmp_261, pretmp_459, evts.D.42966._M_impl._M_start
	sub	x25, x0, x1	// _1108, pretmp_459, prephitmp_261
	asr	x22, x25, 2	// prephitmp_333, _1108,
	mov	x21, x22	// prephitmp_328, prephitmp_333
.L3470:
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	cmp	x1, x0	// prephitmp_261, pretmp_459
	beq	.L3472		//,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:368: 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
	mov	x2, x25	//, _1108
	mov	x0, x27	//, _212
	bl	memmove		//
.L3472:
// linux-perf-events.h:27:     memset(&attribs, 0, sizeof(attribs));
	add	x0, sp, 480	// tmp1326,,
// linux-perf-events.h:26:   explicit LinuxEvents(std::vector<int> config_vec) : fd(0), working(true) {
	str	wzr, [sp, 480]	//, unified.fd
// linux-perf-events.h:30:     attribs.disabled = 1;
	mov	w1, 97	// tmp653,
// linux-perf-events.h:26:   explicit LinuxEvents(std::vector<int> config_vec) : fd(0), working(true) {
	mov	w4, 1	// tmp643,
// linux-perf-events.h:28:     attribs.type = TYPE;
	mov	x3, 481036337152	// tmp647,
// linux-perf-events.h:35:     attribs.read_format = PERF_FORMAT_GROUP | PERF_FORMAT_ID;
	mov	x2, 12	// tmp648,
// linux-perf-events.h:27:     memset(&attribs, 0, sizeof(attribs));
	stp	xzr, xzr, [x0, 32]	// MEM[(void *)&unified + 16B]
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:369: 	  return __result + _Num;
	add	x25, x27, x25	// _210, _212, _1108
// linux-perf-events.h:27:     memset(&attribs, 0, sizeof(attribs));
	stp	xzr, xzr, [x0, 48]	// MEM[(void *)&unified + 16B]
// linux-perf-events.h:30:     attribs.disabled = 1;
	strb	w1, [sp, 528]	// tmp653, MEM[(struct perf_event_attr *)&unified + 48B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:96: 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
	add	x1, sp, 512	//,,
// linux-perf-events.h:26:   explicit LinuxEvents(std::vector<int> config_vec) : fd(0), working(true) {
	strb	w4, [sp, 484]	// tmp643, unified.working
// linux-perf-events.h:28:     attribs.type = TYPE;
	str	x3, [sp, 488]	// tmp647, MEM[(unsigned int *)&unified + 8B]
// linux-perf-events.h:27:     memset(&attribs, 0, sizeof(attribs));
	stp	xzr, xzr, [sp, 496]	// MEM[(void *)&unified + 16B]
// linux-perf-events.h:35:     attribs.read_format = PERF_FORMAT_GROUP | PERF_FORMAT_ID;
	str	x2, [sp, 520]	// tmp648, unified.attribs.read_format
// linux-perf-events.h:41:     num_events = config_vec.size();
	str	w22, [sp, 600]	// prephitmp_333, unified.num_events
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:96: 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [x1, 96]	//,,
	stp	xzr, xzr, [x1, 112]	//,,
	str	xzr, [sp, 640]	//, MEM[(struct _Vector_impl *)&unified + 152B]._M_finish
	str	xzr, [sp, 648]	//, MEM[(struct _Vector_impl *)&unified + 152B]._M_end_of_storage
// linux-perf-events.h:27:     memset(&attribs, 0, sizeof(attribs));
	stp	xzr, xzr, [x0, 64]	// MEM[(void *)&unified + 16B]
	stp	xzr, xzr, [x0, 80]	// MEM[(void *)&unified + 16B]
	stp	xzr, xzr, [x0, 96]	// MEM[(void *)&unified + 16B]
	str	xzr, [sp, 592]	//, MEM[(void *)&unified + 16B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:826: 	if (__new_size > size())
	cbnz	x21, .L3473	// prephitmp_328,
.L3477:
// linux-perf-events.h:44:     for (auto config : config_vec) {
	cmp	x25, x27	// _210, _212
	mov	x21, x27	// ivtmp.1504, _212
	mov	w24, 0	// i,
	mov	w22, -1	// group,
	beq	.L3513		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x0, sp, 304	// tmp1307,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x26, sp, 400	// tmp1305,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	str	x0, [sp, 96]	// tmp1307, %sfp
	b	.L3512		//
	.p2align 2
.L3478:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:933: 	return *(this->_M_impl._M_start + __n);
	ldr	x2, [sp, 632]	// MEM[(long unsigned int * *)&unified + 152B], MEM[(long unsigned int * *)&unified + 152B]
// linux-perf-events.h:50:       ioctl(fd, PERF_EVENT_IOC_ID, &ids[i++]);
	mov	x1, 9223	//,
	movk	x1, 0x8008, lsl 16	//,,
	add	x21, x21, 4	// ivtmp.1504, ivtmp.1504,
// linux-perf-events.h:50:       ioctl(fd, PERF_EVENT_IOC_ID, &ids[i++]);
	add	w23, w24, 1	// i, i,
// linux-perf-events.h:50:       ioctl(fd, PERF_EVENT_IOC_ID, &ids[i++]);
	add	x2, x2, x24, uxtw 3	//, MEM[(long unsigned int * *)&unified + 152B], i,,
	bl	ioctl		//
// linux-perf-events.h:52:         group = fd;
	ldr	w0, [sp, 480]	//, unified.fd
	cmn	w22, #1	// group,
	csel	w22, w0, w22, eq	// group, unified.fd, group,
// linux-perf-events.h:44:     for (auto config : config_vec) {
	cmp	x25, x21	// _210, ivtmp.1504
	beq	.L3513		//,
// linux-perf-events.h:50:       ioctl(fd, PERF_EVENT_IOC_ID, &ids[i++]);
	mov	w24, w23	// i, i
.L3512:
// linux-perf-events.h:45:       attribs.config = config;
	ldrsw	x6, [x21]	// MEM[base: _1523, offset: 0], MEM[base: _1523, offset: 0]
// linux-perf-events.h:46:       fd = syscall(__NR_perf_event_open, &attribs, pid, cpu, group, flags);
	mov	x5, 0	//,
	mov	w4, w22	//, group
	mov	w3, -1	//,
	mov	w2, 0	//,
	add	x1, sp, 488	//,,
	mov	x0, 241	//,
// linux-perf-events.h:45:       attribs.config = config;
	str	x6, [sp, 496]	// MEM[base: _1523, offset: 0], unified.attribs.config
// linux-perf-events.h:46:       fd = syscall(__NR_perf_event_open, &attribs, pid, cpu, group, flags);
	bl	syscall		//
// linux-perf-events.h:46:       fd = syscall(__NR_perf_event_open, &attribs, pid, cpu, group, flags);
	str	w0, [sp, 480]	// _230, unified.fd
// linux-perf-events.h:47:       if (fd == -1) {
	cmn	w0, #1	// _230,
	bne	.L3478		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x1, .LC7	// tmp669,
	adrp	x2, .LC7+15	// tmp671,
	add	x1, x1, :lo12:.LC7	//, tmp669,
	add	x2, x2, :lo12:.LC7+15	//, tmp671,
	mov	w3, 0	//,
	add	x0, sp, 384	// tmp1332,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	str	x26, [sp, 384]	// tmp1305, MEM[(struct _Alloc_hider *)&D.64868]._M_p
.LEHB157:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE157:
// linux-perf-events.h:88:     if (working)
	ldrb	w0, [sp, 484]	// unified.working, unified.working
	ldr	x23, [sp, 384]	// prephitmp_312, MEM[(const struct basic_string *)&D.64868]
	cbnz	w0, .L3921	// unified.working,
.L3479:
// linux-perf-events.h:90:     working = false;
	strb	wzr, [sp, 484]	//, unified.working
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x23, x26	// prephitmp_312, tmp1305
	beq	.L3504		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x23	//, prephitmp_312
	bl	_ZdlPv		//
.L3504:
	ldr	w0, [sp, 480]	//, unified.fd
	b	.L3478		//
	.p2align 2
.L3513:
// linux-perf-events.h:56:     temp_result_vec.resize(num_events * 2 + 1);
	ldr	w0, [sp, 600]	//, unified.num_events
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:826: 	if (__new_size > size())
	ldr	x3, [sp, 608]	// _345, MEM[(long unsigned int * *)&unified + 128B]
	ldr	x2, [sp, 616]	// _346, MEM[(long unsigned int * *)&unified + 136B]
// linux-perf-events.h:56:     temp_result_vec.resize(num_events * 2 + 1);
	lsl	w0, w0, 1	// tmp657, unified.num_events,
// linux-perf-events.h:56:     temp_result_vec.resize(num_events * 2 + 1);
	add	w0, w0, 1	// _244, tmp657,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x1, x2, x3	// tmp659, _346, _345
// linux-perf-events.h:56:     temp_result_vec.resize(num_events * 2 + 1);
	sxtw	x0, w0	// _245, _244
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	asr	x1, x1, 3	// tmp660, tmp659,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:826: 	if (__new_size > size())
	cmp	x0, x1	// _245, tmp660
	bhi	.L3922		//,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:828: 	else if (__new_size < size())
	bcc	.L3923		//,
.L3515:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x27, .L3522	// _212,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x27	//, _212
	bl	_ZdlPv		//
.L3522:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldp	x0, x1, [sp, 168]	// MEM[(int * *)&evts], MEM[(int * *)&evts + 8B], MEM[(int * *)&evts]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:96: 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [sp, 192]	//,, MEM[(struct _Vector_impl *)&results]._M_start
	stp	xzr, xzr, [sp, 208]	//,, MEM[(struct _Vector_impl *)&results]._M_end_of_storage
	stp	xzr, xzr, [sp, 224]	//,, MEM[(struct _Vector_impl *)&allresults]._M_finish
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x1, x1, x0	// tmp768, MEM[(int * *)&evts + 8B], MEM[(int * *)&evts]
	asr	x1, x1, 2	// tmp771, tmp768,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:826: 	if (__new_size > size())
	cbnz	x1, .L3523	// tmp771,
.L3525:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x22, sp, 400	// tmp1300,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x24, sp, 336	// tmp1303,,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	mov	w21, 10	// ivtmp_1560,
	.p2align 3
.L3524:
// linux-perf-events.h:62:     if (ioctl(fd, PERF_EVENT_IOC_RESET, PERF_IOC_FLAG_GROUP) == -1) {
	ldr	w0, [sp, 480]	//, unified.fd
	mov	w2, 1	//,
	mov	x1, 9219	//,
// bitmapdecoding.cpp:224:     matches = 0;
	str	wzr, [sp, 124]	//, matches
// linux-perf-events.h:62:     if (ioctl(fd, PERF_EVENT_IOC_RESET, PERF_IOC_FLAG_GROUP) == -1) {
	bl	ioctl		//
// linux-perf-events.h:62:     if (ioctl(fd, PERF_EVENT_IOC_RESET, PERF_IOC_FLAG_GROUP) == -1) {
	cmn	w0, #1	//,
	beq	.L3924		//,
.L3526:
// linux-perf-events.h:66:     if (ioctl(fd, PERF_EVENT_IOC_ENABLE, PERF_IOC_FLAG_GROUP) == -1) {
	ldr	w0, [sp, 480]	//, unified.fd
	mov	w2, 1	//,
	mov	x1, 9216	//,
	bl	ioctl		//
// linux-perf-events.h:66:     if (ioctl(fd, PERF_EVENT_IOC_ENABLE, PERF_IOC_FLAG_GROUP) == -1) {
	cmn	w0, #1	//,
	beq	.L3925		//,
.L3559:
// bitmapdecoding.cpp:226:     for (size_t idx = 0; idx < wordcount; idx++) {
	ldr	x0, [sp, 128]	// wordcount, wordcount
	mov	x12, 0	// idx,
	cbz	x0, .L3598	// wordcount,
	.p2align 3
.L3592:
// bitmapdecoding.cpp:227:       F(bigarray, matches, idx, array[idx]);
	ldr	x3, [x20, x12, lsl 3]	//, MEM[base: _67, index: idx_1414, step: 8, offset: 0B]
	mov	w2, w12	//, idx
// bitmapdecoding.cpp:226:     for (size_t idx = 0; idx < wordcount; idx++) {
	add	x12, x12, 1	// idx, idx,
// bitmapdecoding.cpp:227:       F(bigarray, matches, idx, array[idx]);
	mov	x0, x19	//, _71
	add	x1, sp, 124	// tmp1367,,
	bl	_Z16simdjson_decoderPjRjjm		//
// bitmapdecoding.cpp:226:     for (size_t idx = 0; idx < wordcount; idx++) {
	ldr	x0, [sp, 128]	// wordcount, wordcount
	cmp	x0, x12	// wordcount, idx
	bhi	.L3592		//,
.L3598:
// linux-perf-events.h:72:     if (ioctl(fd, PERF_EVENT_IOC_DISABLE, PERF_IOC_FLAG_GROUP) == -1) {
	ldr	w0, [sp, 480]	//, unified.fd
	mov	w2, 1	//,
	mov	x1, 9217	//,
	bl	ioctl		//
// linux-perf-events.h:72:     if (ioctl(fd, PERF_EVENT_IOC_DISABLE, PERF_IOC_FLAG_GROUP) == -1) {
	cmn	w0, #1	//,
	beq	.L3926		//,
.L3594:
// linux-perf-events.h:76:     if (read(fd, temp_result_vec.data(), temp_result_vec.size() * 8) == -1) {
	ldr	w0, [sp, 480]	//, unified.fd
	add	x26, sp, 216	// tmp1374,,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldr	x3, [sp, 616]	// MEM[(long unsigned int * *)&unified + 136B], MEM[(long unsigned int * *)&unified + 136B]
// linux-perf-events.h:76:     if (read(fd, temp_result_vec.data(), temp_result_vec.size() * 8) == -1) {
	ldr	x2, [sp, 608]	// _547, MEM[(long unsigned int * *)&unified + 128B]
// linux-perf-events.h:76:     if (read(fd, temp_result_vec.data(), temp_result_vec.size() * 8) == -1) {
	mov	x1, x2	//, _547
	sub	x2, x3, x2	//, MEM[(long unsigned int * *)&unified + 136B], _547
.LEHB158:
	bl	read		//
// linux-perf-events.h:76:     if (read(fd, temp_result_vec.data(), temp_result_vec.size() * 8) == -1) {
	cmn	x0, #1	//,
	beq	.L3927		//,
.L3631:
// linux-perf-events.h:81:     for (uint32_t i = 1; i < temp_result_vec.size(); i += 2) {
	ldr	x5, [sp, 608]	// _1035, MEM[(long unsigned int * *)&unified + 128B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldr	x4, [sp, 616]	// MEM[(long unsigned int * *)&unified + 136B], MEM[(long unsigned int * *)&unified + 136B]
	sub	x4, x4, x5	// tmp1125, MEM[(long unsigned int * *)&unified + 136B], _1035
	asr	x4, x4, 3	// _491, tmp1125,
// linux-perf-events.h:81:     for (uint32_t i = 1; i < temp_result_vec.size(); i += 2) {
	cmp	x4, 1	// _491,
	bls	.L3664		//,
// linux-perf-events.h:82:       results[i / 2] = temp_result_vec[i];
	ldr	x6, [sp, 192]	// _564, MEM[(long long unsigned int * *)&results]
// linux-perf-events.h:81:     for (uint32_t i = 1; i < temp_result_vec.size(); i += 2) {
	mov	x1, 1	// _554,
// linux-perf-events.h:82:       results[i / 2] = temp_result_vec[i];
	mov	w0, w1	// i, _554
	.p2align 3
.L3665:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:933: 	return *(this->_M_impl._M_start + __n);
	lsr	w2, w0, 1	// tmp1129, i,
// linux-perf-events.h:81:     for (uint32_t i = 1; i < temp_result_vec.size(); i += 2) {
	add	w0, w0, 2	// i, i,
// linux-perf-events.h:82:       results[i / 2] = temp_result_vec[i];
	ldr	x3, [x5, x1, lsl 3]	// *_561, *_561
// linux-perf-events.h:81:     for (uint32_t i = 1; i < temp_result_vec.size(); i += 2) {
	uxtw	x1, w0	// _554, i
// linux-perf-events.h:82:       results[i / 2] = temp_result_vec[i];
	str	x3, [x6, x2, lsl 3]	// *_561, *_566
// linux-perf-events.h:81:     for (uint32_t i = 1; i < temp_result_vec.size(); i += 2) {
	cmp	x4, x1	// _491, _554
	bhi	.L3665		//,
.L3664:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1076: 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
	ldp	x23, x0, [sp, 224]	// _746, allresults.D.44829._M_impl._M_end_of_storage, allresults.D.44829._M_impl._M_finish
	cmp	x23, x0	// _746, allresults.D.44829._M_impl._M_end_of_storage
	beq	.L3668		//,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldp	x0, x25, [sp, 192]	// MEM[(long long unsigned int * *)&results], MEM[(long long unsigned int * *)&results + 8B], MEM[(long long unsigned int * *)&results]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [x23]	//,, MEM[(struct _Vector_impl *)_746]._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x26, x23	// pretmp_660, _746
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	str	xzr, [x23, 16]	//, MEM[(struct _Vector_impl *)_746]._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x3, 0	// _765,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x25, x25, x0	// _752, MEM[(long long unsigned int * *)&results + 8B], MEM[(long long unsigned int * *)&results]
	asr	x0, x25, 3	// tmp1139, _752,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	cbz	x0, .L3670	// tmp1139,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	mov	x1, 2305843009213693951	// tmp1140,
	add	x26, sp, 216	// tmp1263,,
	cmp	x0, x1	// tmp1139, tmp1140
	bhi	.L3928		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x25	//, _752
	bl	_Znwm		//
	ldr	x26, [sp, 224]	// pretmp_660, allresults.D.44829._M_impl._M_finish
	mov	x3, x0	// _765,
.L3670:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:312: 	this->_M_impl._M_finish = this->_M_impl._M_start;
	stp	x3, x3, [x23]	// _765, _765, MEM[(struct _Vector_base *)_746]._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	add	x25, x3, x25	// tmp1142, _765, _752
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:463: 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
	ldp	x1, x0, [sp, 192]	// _758, _759, MEM[(long long unsigned int * *)&results]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	str	x25, [x23, 16]	// tmp1142, MEM[(struct _Vector_base *)_746]._M_impl._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	cmp	x1, x0	// _758, _759
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:366: 	  const ptrdiff_t _Num = __last - __first;
	sub	x25, x0, x1	// _760, _759, _758
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	beq	.L3673		//,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:368: 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
	mov	x0, x3	//, _765
	mov	x2, x25	//, _760
	bl	memmove		//
	mov	x3, x0	// _765,
.L3673:
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:369: 	  return __result + _Num;
	add	x3, x3, x25	// tmp1143, _765, _760
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:462: 	this->_M_impl._M_finish =
	str	x3, [x23, 8]	// tmp1143, _746->D.43930._M_impl._M_finish
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1081: 	    ++this->_M_impl._M_finish;
	add	x26, x26, 24	// tmp1144, pretmp_660,
	str	x26, [sp, 224]	// tmp1144, allresults.D.44829._M_impl._M_finish
.L3674:
// bitmapdecoding.cpp:223:   for (uint32_t i = 0; i < iterations; i++) {
	subs	w21, w21, #1	// ivtmp_1560, ivtmp_1560,
	bne	.L3524		//,
// bitmapdecoding.cpp:232:   if (bigarray[0] == 0)
	ldr	w0, [x19]	//, *_71
	cbz	w0, .L3929	// *_71,
.L3675:
// bitmapdecoding.cpp:234:   printf("matches = %u words = %zu 1-bit density %4.3f %% \n", matches,
	ldr	d0, [sp, 128]	// wordcount.129_9, wordcount
	mov	x0, 4636737291354636288	// tmp1312,
	ldr	w3, [sp, 124]	//, matches
	fmov	d2, x0	// tmp1155, tmp1312
	add	x26, sp, 216	// tmp1263,,
	adrp	x0, .LC16	// tmp1157,
	fmov	x2, d0	//, wordcount.129_9
// bitmapdecoding.cpp:235:          wordcount, double(matches) / (64 * wordcount) * 100);
	shl	d0, d0, 6	// tmp1151, wordcount.129_9,
// bitmapdecoding.cpp:235:          wordcount, double(matches) / (64 * wordcount) * 100);
	ucvtf	d1, w3	// tmp1150, matches.128_8
// bitmapdecoding.cpp:234:   printf("matches = %u words = %zu 1-bit density %4.3f %% \n", matches,
	add	x0, x0, :lo12:.LC16	//, tmp1157,
	mov	w1, w3	//, matches.128_8
// bitmapdecoding.cpp:235:          wordcount, double(matches) / (64 * wordcount) * 100);
	ucvtf	d0, d0	// tmp1152, tmp1151
	fdiv	d0, d1, d0	// tmp1153, tmp1150, tmp1152
// bitmapdecoding.cpp:234:   printf("matches = %u words = %zu 1-bit density %4.3f %% \n", matches,
	fmul	d0, d0, d2	//, tmp1153, tmp1155
	bl	printf		//
// bitmapdecoding.cpp:236:   printf("bytes per index = %4.3f \n", wordcount * 64.0 / matches);
	ldr	d0, [sp, 128]	// wordcount, wordcount
	adrp	x0, .LC22	// tmp1383,
// bitmapdecoding.cpp:236:   printf("bytes per index = %4.3f \n", wordcount * 64.0 / matches);
	ldr	w1, [sp, 124]	//, matches
	add	x26, sp, 216	// tmp1263,,
// bitmapdecoding.cpp:236:   printf("bytes per index = %4.3f \n", wordcount * 64.0 / matches);
	ldr	d2, [x0, #:lo12:.LC22]	// tmp1382,
// bitmapdecoding.cpp:236:   printf("bytes per index = %4.3f \n", wordcount * 64.0 / matches);
	adrp	x0, .LC17	// tmp1166,
// bitmapdecoding.cpp:236:   printf("bytes per index = %4.3f \n", wordcount * 64.0 / matches);
	ucvtf	d0, d0	// tmp1158, wordcount
// bitmapdecoding.cpp:236:   printf("bytes per index = %4.3f \n", wordcount * 64.0 / matches);
	add	x0, x0, :lo12:.LC17	//, tmp1166,
	ucvtf	d1, w1	// tmp1162, matches
// bitmapdecoding.cpp:236:   printf("bytes per index = %4.3f \n", wordcount * 64.0 / matches);
	fmul	d0, d0, d2	// tmp1160, tmp1158, tmp1161
// bitmapdecoding.cpp:236:   printf("bytes per index = %4.3f \n", wordcount * 64.0 / matches);
	fdiv	d0, d0, d1	//, tmp1160, tmp1162
	bl	printf		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:460: 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
	ldp	x23, x24, [sp, 216]	// prephitmp_1432, pretmp_571, MEM[(struct vector * *)&allresults]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	mov	x1, -6148914691236517206	// tmp1169,
	movk	x1, 0xaaab, lsl 0	// tmp1169,,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [sp, 448]	//,, MEM[(struct _Vector_impl *)&D.50505]._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x26, 0	// __first,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	str	xzr, [sp, 464]	//, MEM[(struct _Vector_impl *)&D.50505]._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x21, x24, x23	// _769, pretmp_571, prephitmp_1432
	asr	x0, x21, 3	// tmp1167, _769,
	mul	x0, x0, x1	// tmp1168, tmp1167, tmp1169
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	cbz	x0, .L3677	// tmp1168,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	mov	x1, -6148914691236517206	// tmp1170,
	add	x26, sp, 216	// tmp1263,,
	movk	x1, 0xaaa, lsl 48	// tmp1170,,
	cmp	x0, x1	// tmp1168, tmp1170
	bhi	.L3930		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x21	//, _769
	bl	_Znwm		//
.LEHE158:
	ldp	x23, x24, [sp, 216]	// prephitmp_1432, pretmp_571, MEM[(struct vector * *)&allresults]
	mov	x26, x0	// __first,
.L3677:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	add	x21, x26, x21	// tmp1172, __first, _769
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:312: 	this->_M_impl._M_finish = this->_M_impl._M_start;
	stp	x26, x26, [sp, 448]	// __first, __first, MEM[(struct _Vector_base *)&D.50505]._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	cmp	x24, x23	// pretmp_571, prephitmp_1432
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	str	x21, [sp, 464]	// tmp1172, MEM[(struct _Vector_base *)&D.50505]._M_impl._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:79: 	  _ForwardIterator __cur = __result;
	mov	x21, x26	// __cur, __first
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	beq	.L3679		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	mov	x25, 2305843009213693951	// tmp1297,
	.p2align 3
.L3685:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldp	x0, x22, [x23]	// MEM[base: _1532, offset: 0B], MEM[base: _1532, offset: 8B], MEM[base: _1532, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [x21]	//,, MEM[base: __cur_1439, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x3, 0	// _809,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	str	xzr, [x21, 16]	//, MEM[base: __cur_1439, offset: 16B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x22, x22, x0	// _796, MEM[base: _1532, offset: 8B], MEM[base: _1532, offset: 0B]
	asr	x0, x22, 3	// tmp1175, _796,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	cbz	x0, .L3681	// tmp1175,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	cmp	x0, x25	// tmp1175, tmp1297
	bhi	.L3931		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x22	//, _796
.LEHB159:
	bl	_Znwm		//
.LEHE159:
	mov	x3, x0	// _809,
.L3681:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	add	x22, x3, x22	// tmp1178, _809, _796
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:312: 	this->_M_impl._M_finish = this->_M_impl._M_start;
	stp	x3, x3, [x21]	// _809, _809, MEM[base: __cur_1439, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	str	x22, [x21, 16]	// tmp1178, MEM[base: __cur_1439, offset: 16B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:463: 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
	ldp	x1, x0, [x23]	// _802, _803, MEM[base: _1532, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	cmp	x1, x0	// _802, _803
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:366: 	  const ptrdiff_t _Num = __last - __first;
	sub	x22, x0, x1	// _804, _803, _802
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	beq	.L3684		//,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:368: 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
	mov	x0, x3	//, _809
	mov	x2, x22	//, _804
	bl	memmove		//
	mov	x3, x0	// _809,
.L3684:
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:369: 	  return __result + _Num;
	add	x3, x3, x22	// tmp1179, _809, _804
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:462: 	this->_M_impl._M_finish =
	str	x3, [x21, 8]	// tmp1179, MEM[base: __cur_1439, offset: 8B]
	add	x23, x23, 24	// ivtmp.1481, ivtmp.1481,
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	add	x21, x21, 24	// __cur, __cur,
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	cmp	x24, x23	// pretmp_571, ivtmp.1481
	bne	.L3685		//,
.L3679:
// bitmapdecoding.cpp:237:   std::vector<unsigned long long> mins = compute_mins(allresults);
	add	x23, sp, 448	// tmp1269,,
	add	x8, sp, 240	//,,
	mov	x0, x23	//, tmp1269
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:462: 	this->_M_impl._M_finish =
	str	x21, [sp, 456]	// __cur, D.50505.D.44829._M_impl._M_finish
.LEHB160:
// bitmapdecoding.cpp:237:   std::vector<unsigned long long> mins = compute_mins(allresults);
	bl	_Z12compute_minsSt6vectorIS_IySaIyEESaIS1_EE		//
.LEHE160:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldp	x21, x22, [sp, 448]	// __first, pretmp_729, D.50505.D.44829._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x21, x22	// __first, pretmp_729
	beq	.L3693		//,
	.p2align 3
.L3695:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [x21]	// _826, MEM[base: __first_224, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3694	// _826,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3694:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	add	x21, x21, 24	// __first, __first,
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x22, x21	// pretmp_729, __first
	bne	.L3695		//,
	ldr	x22, [sp, 448]	// pretmp_729, MEM[(struct _Vector_base *)&D.50505]._M_impl._M_start
.L3693:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x22, .L3696	// pretmp_729,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x22	//, pretmp_729
	bl	_ZdlPv		//
.L3696:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:460: 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
	ldp	x24, x25, [sp, 216]	// prephitmp_734, prephitmp_745, MEM[(struct vector * *)&allresults]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	mov	x1, -6148914691236517206	// tmp1189,
	movk	x1, 0xaaab, lsl 0	// tmp1189,,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [sp, 448]	//,, MEM[(struct _Vector_impl *)&D.50508]._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x27, 0	// __first,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	str	xzr, [sp, 464]	//, MEM[(struct _Vector_impl *)&D.50508]._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x21, x25, x24	// _813, prephitmp_745, prephitmp_734
	asr	x0, x21, 3	// tmp1187, _813,
	mul	x0, x0, x1	// tmp1188, tmp1187, tmp1189
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	cbz	x0, .L3698	// tmp1188,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	mov	x1, -6148914691236517206	// tmp1190,
	movk	x1, 0xaaa, lsl 48	// tmp1190,,
	cmp	x0, x1	// tmp1188, tmp1190
	bhi	.L3932		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x21	//, _813
.LEHB161:
	bl	_Znwm		//
.LEHE161:
	ldp	x24, x25, [sp, 216]	// prephitmp_734, prephitmp_745, MEM[(struct vector * *)&allresults]
	mov	x27, x0	// __first,
.L3698:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	add	x21, x27, x21	// tmp1192, __first, _813
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:312: 	this->_M_impl._M_finish = this->_M_impl._M_start;
	stp	x27, x27, [sp, 448]	// __first, __first, MEM[(struct _Vector_base *)&D.50508]._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	cmp	x24, x25	// prephitmp_734, prephitmp_745
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	str	x21, [sp, 464]	// tmp1192, MEM[(struct _Vector_base *)&D.50508]._M_impl._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:79: 	  _ForwardIterator __cur = __result;
	mov	x21, x27	// __cur, __first
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	beq	.L3700		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	mov	x26, 2305843009213693951	// tmp1295,
	.p2align 3
.L3706:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldp	x0, x22, [x24]	// MEM[base: _1556, offset: 0B], MEM[base: _1556, offset: 8B], MEM[base: _1556, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [x21]	//,, MEM[base: __cur_254, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x3, 0	// _859,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	str	xzr, [x21, 16]	//, MEM[base: __cur_254, offset: 16B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x22, x22, x0	// _846, MEM[base: _1556, offset: 8B], MEM[base: _1556, offset: 0B]
	asr	x0, x22, 3	// tmp1195, _846,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	cbz	x0, .L3702	// tmp1195,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	cmp	x0, x26	// tmp1195, tmp1295
	bhi	.L3933		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x22	//, _846
.LEHB162:
	bl	_Znwm		//
.LEHE162:
	mov	x3, x0	// _859,
.L3702:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	add	x22, x3, x22	// tmp1198, _859, _846
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:312: 	this->_M_impl._M_finish = this->_M_impl._M_start;
	stp	x3, x3, [x21]	// _859, _859, MEM[base: __cur_254, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	str	x22, [x21, 16]	// tmp1198, MEM[base: __cur_254, offset: 16B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:463: 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
	ldp	x1, x0, [x24]	// _852, _853, MEM[base: _1556, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	cmp	x1, x0	// _852, _853
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:366: 	  const ptrdiff_t _Num = __last - __first;
	sub	x22, x0, x1	// _854, _853, _852
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	beq	.L3705		//,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:368: 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
	mov	x0, x3	//, _859
	mov	x2, x22	//, _854
	bl	memmove		//
	mov	x3, x0	// _859,
.L3705:
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:369: 	  return __result + _Num;
	add	x3, x3, x22	// tmp1199, _859, _854
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:462: 	this->_M_impl._M_finish =
	str	x3, [x21, 8]	// tmp1199, MEM[base: __cur_254, offset: 8B]
	add	x24, x24, 24	// ivtmp.1467, ivtmp.1467,
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	add	x21, x21, 24	// __cur, __cur,
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	cmp	x25, x24	// prephitmp_745, ivtmp.1467
	bne	.L3706		//,
.L3700:
// bitmapdecoding.cpp:238:   std::vector<double> avg = compute_averages(allresults);
	add	x8, sp, 264	//,,
	mov	x0, x23	//, tmp1269
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:462: 	this->_M_impl._M_finish =
	str	x21, [sp, 456]	// __cur, D.50508.D.44829._M_impl._M_finish
.LEHB163:
// bitmapdecoding.cpp:238:   std::vector<double> avg = compute_averages(allresults);
	bl	_Z16compute_averagesSt6vectorIS_IySaIyEESaIS1_EE		//
.LEHE163:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldp	x21, x22, [sp, 448]	// __first, prephitmp_574, D.50508.D.44829._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x21, x22	// __first, prephitmp_574
	beq	.L3715		//,
	.p2align 3
.L3717:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [x21]	// _864, MEM[base: __first_250, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3716	// _864,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3716:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	add	x21, x21, 24	// __first, __first,
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x22, x21	// prephitmp_574, __first
	bne	.L3717		//,
	ldr	x22, [sp, 448]	// prephitmp_574, MEM[(struct _Vector_base *)&D.50508]._M_impl._M_start
.L3715:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x22, .L3718	// prephitmp_574,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x22	//, prephitmp_574
	bl	_ZdlPv		//
.L3718:
// bitmapdecoding.cpp:243:          double(mins[1]) / mins[0], double(mins[0]) / matches,
	ldr	x1, [sp, 240]	// _139, MEM[(long long unsigned int * *)&mins]
// bitmapdecoding.cpp:239:   printf("instructions per cycle %4.2f, cycles per value set:  "
	adrp	x0, .LC18	// tmp1219,
	ldr	d4, [sp, 128]	// wordcount, wordcount
	add	x0, x0, :lo12:.LC18	//, tmp1219,
	ldp	d1, d0, [x1]	// MEM[(value_type &)_139], MEM[(value_type &)_139 + 8], MEM[(value_type &)_139]
	ldr	w1, [sp, 124]	//, matches
	ucvtf	d4, d4	// _31, wordcount
	ucvtf	d1, d1	// _24, MEM[(value_type &)_139]
	ucvtf	d0, d0	// _22, MEM[(value_type &)_139 + 8]
	ucvtf	d5, w1	// _27, matches
	fdiv	d3, d1, d4	//, _24, _31
	fdiv	d2, d0, d5	//, _22, _27
	fdiv	d4, d0, d4	//, _22, _31
	fdiv	d0, d0, d1	//, _22, _24
	fdiv	d1, d1, d5	//, _24, _27
.LEHB164:
	bl	printf		//
// bitmapdecoding.cpp:247:          double(mins[0]) / (64 * wordcount),
	ldr	d0, [sp, 128]	// wordcount, wordcount
// bitmapdecoding.cpp:246:   printf(" cycles per input byte %4.2f instructions per input byte %4.2f \n",
	adrp	x0, .LC19	// tmp1229,
// bitmapdecoding.cpp:247:          double(mins[0]) / (64 * wordcount),
	ldr	x1, [sp, 240]	// _140, MEM[(long long unsigned int * *)&mins]
// bitmapdecoding.cpp:246:   printf(" cycles per input byte %4.2f instructions per input byte %4.2f \n",
	add	x0, x0, :lo12:.LC19	//, tmp1229,
// bitmapdecoding.cpp:247:          double(mins[0]) / (64 * wordcount),
	shl	d0, d0, 6	// tmp1220, wordcount,
// bitmapdecoding.cpp:246:   printf(" cycles per input byte %4.2f instructions per input byte %4.2f \n",
	ldp	d2, d1, [x1]	// MEM[(value_type &)_140], MEM[(value_type &)_140 + 8], MEM[(value_type &)_140]
	ucvtf	d0, d0	// _38, tmp1220
	ucvtf	d2, d2	// tmp1225, MEM[(value_type &)_140]
	ucvtf	d1, d1	// tmp1222, MEM[(value_type &)_140 + 8]
	fdiv	d1, d1, d0	//, tmp1222, _38
	fdiv	d0, d2, d0	//, tmp1225, _38
	bl	printf		//
// bitmapdecoding.cpp:250:   printf("min: %8llu cycles, %8llu instructions, \t%8llu branch mis., %8llu "
	ldr	x5, [sp, 240]	// _141, MEM[(long long unsigned int * *)&mins]
	adrp	x0, .LC20	// tmp1236,
	add	x0, x0, :lo12:.LC20	//, tmp1236,
	ldp	x1, x2, [x5]	//,, MEM[(value_type &)_141]
	ldp	x3, x4, [x5, 16]	//,, MEM[(value_type &)_141 + 16]
	ldr	x5, [x5, 32]	//, MEM[(value_type &)_141 + 32]
	bl	printf		//
// bitmapdecoding.cpp:253:   printf("avg: %8.1f cycles, %8.1f instructions, \t%8.1f branch mis., %8.1f "
	ldr	x1, [sp, 264]	// _142, MEM[(double * *)&avg]
	adrp	x0, .LC21	// tmp1243,
	add	x0, x0, :lo12:.LC21	//, tmp1243,
	ldp	d0, d1, [x1]	//,, MEM[(value_type &)_142]
	ldp	d2, d3, [x1, 16]	//,, MEM[(value_type &)_142 + 16]
	ldr	d4, [x1, 32]	//, MEM[(value_type &)_142 + 32]
	bl	printf		//
// bitmapdecoding.cpp:256:   printf("\n");
	mov	w0, 10	//,
	bl	putchar		//
.LEHE164:
// bitmapdecoding.cpp:257:   delete[] array;
	cbz	x20, .L3719	// _67,
// bitmapdecoding.cpp:257:   delete[] array;
	mov	x0, x20	//, _67
	bl	_ZdaPv		//
.L3719:
// bitmapdecoding.cpp:258:   delete[] bigarray;
	mov	x0, x19	//, _71
	bl	_ZdaPv		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 264]	// _148, avg.D.45803._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3720	// _148,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3720:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 240]	// _147, mins.D.43930._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3721	// _147,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3721:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldp	x19, x20, [sp, 216]	// __first, prephitmp_572, allresults.D.44829._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x19, x20	// __first, prephitmp_572
	beq	.L3722		//,
	.p2align 3
.L3724:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [x19]	// _870, MEM[base: __first_1539, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3723	// _870,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3723:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	add	x19, x19, 24	// __first, __first,
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x20, x19	// prephitmp_572, __first
	bne	.L3724		//,
	ldr	x20, [sp, 216]	// prephitmp_572, MEM[(struct _Vector_base *)&allresults]._M_impl._M_start
.L3722:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x20, .L3725	// prephitmp_572,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x20	//, prephitmp_572
	bl	_ZdlPv		//
.L3725:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 192]	// _146, results.D.43930._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3726	// _146,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3726:
// linux-perf-events.h:59:   ~LinuxEvents() { close(fd); }
	ldr	w0, [sp, 480]	//, unified.fd
	bl	close		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 632]	// _874, MEM[(struct vector *)&unified + 152B].D.42087._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3727	// _874,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3727:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 608]	// _875, MEM[(struct vector *)&unified + 128B].D.42087._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3728	// _875,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3728:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 168]	// _145, evts.D.42966._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3467	// _145,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3467:
// bitmapdecoding.cpp:259: }
	ldp	x29, x30, [sp]	//,,
	ldp	x19, x20, [sp, 16]	//,,
	ldp	x21, x22, [sp, 32]	//,,
	ldp	x23, x24, [sp, 48]	//,,
	ldp	x25, x26, [sp, 64]	//,,
	ldp	x27, x28, [sp, 80]	//,,
	add	sp, sp, 656	//,,
	.cfi_remember_state
	.cfi_restore 29
	.cfi_restore 30
	.cfi_restore 27
	.cfi_restore 28
	.cfi_restore 25
	.cfi_restore 26
	.cfi_restore 23
	.cfi_restore 24
	.cfi_restore 21
	.cfi_restore 22
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
	ret	
	.p2align 2
.L3926:
	.cfi_restore_state
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x25, sp, 352	// tmp1266,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x1, .LC13	// tmp957,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x4, x25, 16	// tmp955, tmp1266,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x2, .LC13+29	// tmp959,
	mov	x0, x25	//, tmp1266
	add	x1, x1, :lo12:.LC13	//, tmp957,
	mov	w3, 0	//,
	add	x2, x2, :lo12:.LC13+29	//, tmp959,
	add	x26, sp, 216	// tmp1368,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	str	x4, [sp, 352]	// tmp955, MEM[(struct _Alloc_hider *)&D.65059]._M_p
.LEHB165:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
// linux-perf-events.h:88:     if (working)
	ldrb	w0, [sp, 484]	// unified.working, unified.working
	ldr	x23, [sp, 352]	// prephitmp_623, MEM[(const struct basic_string *)&D.65059]
	cbnz	w0, .L3934	// unified.working,
.L3599:
// linux-perf-events.h:90:     working = false;
	strb	wzr, [sp, 484]	//, unified.working
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x25, x25, 16	// tmp1025, tmp1266,
	cmp	x23, x25	// prephitmp_623, tmp1025
	beq	.L3594		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x23	//, prephitmp_623
	bl	_ZdlPv		//
	b	.L3594		//
	.p2align 2
.L3924:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x1, .LC11	// tmp777,
	adrp	x2, .LC11+27	// tmp779,
	add	x1, x1, :lo12:.LC11	//, tmp777,
	add	x2, x2, :lo12:.LC11+27	//, tmp779,
	mov	w3, 0	//,
	add	x26, sp, 216	// tmp1356,,
	add	x0, sp, 384	// tmp1357,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	str	x22, [sp, 384]	// tmp1300, MEM[(struct _Alloc_hider *)&D.64938]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
// linux-perf-events.h:88:     if (working)
	ldrb	w0, [sp, 484]	// unified.working, unified.working
	ldr	x23, [sp, 384]	// pretmp_446, MEM[(const struct basic_string *)&D.64938]
	cbnz	w0, .L3935	// unified.working,
.L3527:
// linux-perf-events.h:90:     working = false;
	strb	wzr, [sp, 484]	//, unified.working
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x23, x22	// pretmp_446, tmp1300
	beq	.L3526		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x23	//, pretmp_446
	bl	_ZdlPv		//
// linux-perf-events.h:66:     if (ioctl(fd, PERF_EVENT_IOC_ENABLE, PERF_IOC_FLAG_GROUP) == -1) {
	ldr	w0, [sp, 480]	//, unified.fd
	mov	w2, 1	//,
	mov	x1, 9216	//,
	bl	ioctl		//
// linux-perf-events.h:66:     if (ioctl(fd, PERF_EVENT_IOC_ENABLE, PERF_IOC_FLAG_GROUP) == -1) {
	cmn	w0, #1	//,
	bne	.L3559		//,
	.p2align 3
.L3925:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x1, .LC12	// tmp862,
	adrp	x2, .LC12+28	// tmp864,
	add	x1, x1, :lo12:.LC12	//, tmp862,
	add	x2, x2, :lo12:.LC12+28	//, tmp864,
	mov	w3, 0	//,
	add	x26, sp, 216	// tmp1363,,
	add	x0, sp, 384	// tmp1364,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	str	x22, [sp, 384]	// tmp1300, MEM[(struct _Alloc_hider *)&D.64937]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
// linux-perf-events.h:88:     if (working)
	ldrb	w0, [sp, 484]	// unified.working, unified.working
	ldr	x23, [sp, 384]	// pretmp_423, MEM[(const struct basic_string *)&D.64937]
	cbnz	w0, .L3936	// unified.working,
.L3560:
// linux-perf-events.h:90:     working = false;
	strb	wzr, [sp, 484]	//, unified.working
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x23, x22	// pretmp_423, tmp1300
	beq	.L3559		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x23	//, pretmp_423
	bl	_ZdlPv		//
	b	.L3559		//
	.p2align 2
.L3668:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1085: 	  _M_realloc_insert(end(), __x);
	add	x26, sp, 216	// tmp1380,,
	mov	x1, x23	//, _746
	add	x2, sp, 192	//,,
	mov	x0, x26	// tmp1381, tmp1380
	bl	_ZNSt6vectorIS_IySaIyEESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_		//
	b	.L3674		//
	.p2align 2
.L3927:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x25, sp, 352	// tmp1266,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x1, .LC14	// tmp1044,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x4, x25, 16	// tmp1042, tmp1266,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x2, .LC14+4	// tmp1046,
	mov	x0, x25	//, tmp1266
	add	x1, x1, :lo12:.LC14	//, tmp1044,
	mov	w3, 0	//,
	add	x2, x2, :lo12:.LC14+4	//, tmp1046,
	add	x26, sp, 216	// tmp1375,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	str	x4, [sp, 352]	// tmp1042, MEM[(struct _Alloc_hider *)&D.65058]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE165:
// linux-perf-events.h:88:     if (working)
	ldrb	w0, [sp, 484]	// unified.working, unified.working
	ldr	x23, [sp, 352]	// prephitmp_645, MEM[(const struct basic_string *)&D.65058]
	cbnz	w0, .L3937	// unified.working,
.L3632:
// linux-perf-events.h:90:     working = false;
	strb	wzr, [sp, 484]	//, unified.working
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x25, x25, 16	// tmp1112, tmp1266,
	cmp	x23, x25	// prephitmp_645, tmp1112
	beq	.L3631		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x23	//, prephitmp_645
	bl	_ZdlPv		//
	b	.L3631		//
	.p2align 2
.L3934:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:440:       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
	ldr	x26, [sp, 360]	// _592, MEM[(const struct basic_string *)&D.65059 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	str	x22, [sp, 384]	// tmp1300, MEM[(struct _Alloc_hider *)&D.65071]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:211: 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
	cmn	x23, x26	// prephitmp_623, _592
	ccmp	x23, 0, 0, ne	// prephitmp_623,,,
	beq	.L3938		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:215: 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
	str	x26, [sp, 160]	// _592, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:217: 	if (__dnew > size_type(_S_local_capacity))
	cmp	x26, 15	// _592,
	bhi	.L3939		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:337: 	if (__n == 1)
	cmp	x26, 1	// _592,
	bne	.L3603		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:338: 	  traits_type::assign(*__d, *__s);
	ldrb	w1, [x23]	// _600, MEM[(const char_type &)pretmp_626]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	mov	x0, x22	// prephitmp_616, tmp1300
	strb	w1, [sp, 400]	// _600, MEM[(char_type &)&D.65071 + 16]
.L3604:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x26, [sp, 392]	// _592, MEM[(size_type *)&D.65071 + 8B]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x0, x26]	//, MEM[(char_type &)_603]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	mov	x0, 9223372036854775807	// tmp980,
	ldr	x1, [sp, 392]	// MEM[(const struct basic_string *)&D.65071 + 8B], MEM[(const struct basic_string *)&D.65071 + 8B]
	sub	x0, x0, x1	// tmp979, tmp980, MEM[(const struct basic_string *)&D.65071 + 8B]
	cmp	x0, 1	// tmp979,
	bls	.L3940		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1268: 	return _M_append(__s, __n);
	adrp	x1, .LC9	// tmp985,
	mov	x2, 2	//,
	add	x1, x1, :lo12:.LC9	//, tmp985,
	add	x0, sp, 384	// tmp1370,,
.LEHB166:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE166:
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	__errno_location		//
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	ldr	w0, [x0]	//, *_577
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x26, sp, 416	// tmp1268,,
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	strerror		//
	mov	x23, x0	// _579,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x1, x26, 16	// tmp989, tmp1268,
	str	x1, [sp, 416]	// tmp989, MEM[(struct _Alloc_hider *)&D.65070]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	mov	x2, -1	// iftmp.41_610,
	cbz	x0, .L3607	// _579,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:322: 	return __builtin_strlen(__s);
	bl	strlen		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	add	x2, x23, x0	// iftmp.41_610, _579,
.L3607:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	mov	x1, x23	//, _579
	mov	w3, 0	//,
	mov	x0, x26	//, tmp1268
.LEHB167:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE167:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x3, x4, [sp, 384]	// _615, _612, MEM[(const struct basic_string *)&D.65071]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	mov	x6, 15	// tmp1287,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x1, x2, [sp, 416]	// pretmp_608, _613, MEM[(const struct basic_string *)&D.65070]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 400]	// D.65071.D.21280._M_allocated_capacity, D.65071.D.21280._M_allocated_capacity
	cmp	x3, x22	// _615, tmp1300
	csel	x0, x0, x6, ne	// iftmp.59_617, D.65071.D.21280._M_allocated_capacity, tmp1287,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	add	x5, x4, x2	// __size, _612, _613
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_617
	bls	.L3612		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 432]	// D.65070.D.21280._M_allocated_capacity, D.65070.D.21280._M_allocated_capacity
	add	x7, x26, 16	// tmp1001, tmp1268,
	cmp	x1, x7	// pretmp_608, tmp1001
	csel	x0, x0, x6, ne	// iftmp.59_621, D.65070.D.21280._M_allocated_capacity, tmp1287,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_621
	bls	.L3941		//,
.L3612:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	add	x0, sp, 384	// tmp1372,,
.LEHB168:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE168:
.L3908:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x23, sp, 448	// tmp1269,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x1, x0	// _625,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x2, x23, 16	// tmp1005, tmp1269,
	str	x2, [sp, 448]	// tmp1005, MEM[(struct _Alloc_hider *)&D.65072]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x2, [x0], 16	// _628, MEM[(const struct basic_string *)iftmp.58_627]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:544: 	if (__str._M_is_local())
	cmp	x2, x0	// _628, _629
	beq	.L3942		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x2, [sp, 448]	// _628, MEM[(char * *)&D.65072]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:552: 	    _M_capacity(__str._M_allocated_capacity);
	ldr	x2, [x1, 16]	// _631, MEM[(struct basic_string &)iftmp.58_627].D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x2, [sp, 464]	// _631, MEM[(size_type *)&D.65072 + 16B]
.L3616:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:558: 	_M_length(__str.length());
	ldr	x2, [x1, 8]	// _632, MEM[(const struct basic_string *)iftmp.58_627 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x2, [sp, 456]	// _632, MEM[(size_type *)&D.65072 + 8B]
	stp	x0, xzr, [x1]	// _629,, MEM[(char * *)iftmp.58_627]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	adrp	x0, _ZSt4cerr	// tmp1009,
	add	x0, x0, :lo12:_ZSt4cerr	//, tmp1009,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, 16]	//, MEM[(char_type &)iftmp.58_627 + 16]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	ldp	x1, x2, [sp, 448]	//,, MEM[(const struct basic_string *)&D.65072]
.LEHB169:
	bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l		//
	mov	x28, x0	// _583,
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	ldr	x0, [x0]	// _583->_vptr.basic_ostream, _583->_vptr.basic_ostream
	ldr	x0, [x0, -24]	// MEM[(long int *)_637 + -24B], MEM[(long int *)_637 + -24B]
	add	x0, x28, x0	// tmp1012, _583, MEM[(long int *)_637 + -24B]
	ldr	x27, [x0, 240]	// _641, MEM[(const struct __ctype_type * *)_640 + 240B]
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:49:       if (!__f)
	cbz	x27, .L3943	// _641,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:874: 	if (_M_widen_ok)
	ldrb	w0, [x27, 56]	// MEM[(const struct ctype *)_641]._M_widen_ok, MEM[(const struct ctype *)_641]._M_widen_ok
	cbz	w0, .L3618	// MEM[(const struct ctype *)_641]._M_widen_ok,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:875: 	  return _M_widen[static_cast<unsigned char>(__c)];
	ldrb	w1, [x27, 67]	// _648, MEM[(const struct ctype *)_641]._M_widen
.L3619:
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	mov	x0, x28	//, _583
	bl	_ZNSo3putEc		//
// /usr/local/include/c++/8.3.0/ostream:613:     { return __os.flush(); }
	bl	_ZNSo5flushEv		//
.LEHE169:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 448]	// _584, MEM[(const struct basic_string *)&D.65072]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp1019, tmp1269,
	cmp	x0, x23	// _584, tmp1019
	beq	.L3620		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3620:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _585, MEM[(const struct basic_string *)&D.65070]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x26, x26, 16	// tmp1021, tmp1268,
	cmp	x0, x26	// _585, tmp1021
	beq	.L3621		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3621:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 384]	// _586, MEM[(const struct basic_string *)&D.65071]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x0, x22	// _586, tmp1300
	beq	.L3622		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3622:
	ldr	x23, [sp, 352]	// prephitmp_623, MEM[(const struct basic_string *)&D.65059]
	b	.L3599		//
	.p2align 2
.L3935:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:440:       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
	ldr	x25, [sp, 392]	// _389, MEM[(const struct basic_string *)&D.64938 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	str	x24, [sp, 320]	// tmp1303, MEM[(struct _Alloc_hider *)&D.64950]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:211: 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
	cmn	x23, x25	// pretmp_446, _389
	ccmp	x23, 0, 0, ne	// pretmp_446,,,
	beq	.L3944		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:215: 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
	str	x25, [sp, 144]	// _389, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:217: 	if (__dnew > size_type(_S_local_capacity))
	cmp	x25, 15	// _389,
	bhi	.L3945		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:337: 	if (__n == 1)
	cmp	x25, 1	// _389,
	bne	.L3531		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:338: 	  traits_type::assign(*__d, *__s);
	ldrb	w1, [x23]	// _397, MEM[(const char_type &)pretmp_446]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	mov	x0, x24	// pretmp_533, tmp1303
	strb	w1, [sp, 336]	// _397, MEM[(char_type &)&D.64950 + 16]
.L3532:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x25, [sp, 328]	// _389, MEM[(size_type *)&D.64950 + 8B]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x0, x25]	//, MEM[(char_type &)_400]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	mov	x0, 9223372036854775807	// tmp800,
	ldr	x1, [sp, 328]	// MEM[(const struct basic_string *)&D.64950 + 8B], MEM[(const struct basic_string *)&D.64950 + 8B]
	sub	x0, x0, x1	// tmp799, tmp800, MEM[(const struct basic_string *)&D.64950 + 8B]
	cmp	x0, 1	// tmp799,
	bls	.L3946		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1268: 	return _M_append(__s, __n);
	adrp	x1, .LC9	// tmp805,
	mov	x2, 2	//,
	add	x1, x1, :lo12:.LC9	//, tmp805,
	add	x0, sp, 320	// tmp1359,,
.LEHB170:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE170:
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	__errno_location		//
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	ldr	w0, [x0]	//, *_374
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x26, sp, 416	// tmp1268,,
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	strerror		//
	mov	x23, x0	// _376,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x1, x26, 16	// tmp809, tmp1268,
	str	x1, [sp, 416]	// tmp809, MEM[(struct _Alloc_hider *)&D.64949]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	mov	x2, -1	// iftmp.41_407,
	cbz	x0, .L3535	// _376,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:322: 	return __builtin_strlen(__s);
	bl	strlen		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	add	x2, x23, x0	// iftmp.41_407, _376,
.L3535:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	mov	x1, x23	//, _376
	mov	w3, 0	//,
	mov	x0, x26	//, tmp1268
.LEHB171:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE171:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x3, x4, [sp, 320]	// _412, _409, MEM[(const struct basic_string *)&D.64950]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	mov	x6, 15	// tmp1279,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x1, x2, [sp, 416]	// pretmp_518, _410, MEM[(const struct basic_string *)&D.64949]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 336]	// D.64950.D.21280._M_allocated_capacity, D.64950.D.21280._M_allocated_capacity
	cmp	x3, x24	// _412, tmp1303
	csel	x0, x0, x6, ne	// iftmp.59_414, D.64950.D.21280._M_allocated_capacity, tmp1279,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	add	x5, x4, x2	// __size, _409, _410
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_414
	bls	.L3540		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 432]	// D.64949.D.21280._M_allocated_capacity, D.64949.D.21280._M_allocated_capacity
	add	x7, x26, 16	// tmp821, tmp1268,
	cmp	x1, x7	// pretmp_518, tmp821
	csel	x0, x0, x6, ne	// iftmp.59_418, D.64949.D.21280._M_allocated_capacity, tmp1279,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_418
	bls	.L3947		//,
.L3540:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	add	x0, sp, 320	// tmp1361,,
.LEHB172:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE172:
.L3906:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x23, sp, 448	// tmp1269,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x1, x0	// _422,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x2, x23, 16	// tmp825, tmp1269,
	str	x2, [sp, 448]	// tmp825, MEM[(struct _Alloc_hider *)&D.64951]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x2, [x0], 16	// _425, MEM[(const struct basic_string *)iftmp.58_424]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:544: 	if (__str._M_is_local())
	cmp	x2, x0	// _425, _426
	beq	.L3948		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x2, [sp, 448]	// _425, MEM[(char * *)&D.64951]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:552: 	    _M_capacity(__str._M_allocated_capacity);
	ldr	x2, [x1, 16]	// _428, MEM[(struct basic_string &)iftmp.58_424].D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x2, [sp, 464]	// _428, MEM[(size_type *)&D.64951 + 16B]
.L3544:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:558: 	_M_length(__str.length());
	ldr	x2, [x1, 8]	// _429, MEM[(const struct basic_string *)iftmp.58_424 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x2, [sp, 456]	// _429, MEM[(size_type *)&D.64951 + 8B]
	stp	x0, xzr, [x1]	// _426,, MEM[(char * *)iftmp.58_424]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	adrp	x0, _ZSt4cerr	// tmp829,
	add	x0, x0, :lo12:_ZSt4cerr	//, tmp829,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, 16]	//, MEM[(char_type &)iftmp.58_424 + 16]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	ldp	x1, x2, [sp, 448]	//,, MEM[(const struct basic_string *)&D.64951]
.LEHB173:
	bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l		//
	mov	x27, x0	// _380,
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	ldr	x0, [x0]	// _380->_vptr.basic_ostream, _380->_vptr.basic_ostream
	ldr	x0, [x0, -24]	// MEM[(long int *)_434 + -24B], MEM[(long int *)_434 + -24B]
	add	x0, x27, x0	// tmp832, _380, MEM[(long int *)_434 + -24B]
	ldr	x25, [x0, 240]	// _438, MEM[(const struct __ctype_type * *)_437 + 240B]
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:49:       if (!__f)
	cbz	x25, .L3949	// _438,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:874: 	if (_M_widen_ok)
	ldrb	w0, [x25, 56]	// MEM[(const struct ctype *)_438]._M_widen_ok, MEM[(const struct ctype *)_438]._M_widen_ok
	cbz	w0, .L3546	// MEM[(const struct ctype *)_438]._M_widen_ok,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:875: 	  return _M_widen[static_cast<unsigned char>(__c)];
	ldrb	w1, [x25, 67]	// _445, MEM[(const struct ctype *)_438]._M_widen
.L3547:
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	mov	x0, x27	//, _380
	bl	_ZNSo3putEc		//
// /usr/local/include/c++/8.3.0/ostream:613:     { return __os.flush(); }
	bl	_ZNSo5flushEv		//
.LEHE173:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 448]	// _381, MEM[(const struct basic_string *)&D.64951]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp839, tmp1269,
	cmp	x0, x23	// _381, tmp839
	beq	.L3548		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3548:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _382, MEM[(const struct basic_string *)&D.64949]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x26, x26, 16	// tmp841, tmp1268,
	cmp	x0, x26	// _382, tmp841
	beq	.L3549		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3549:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 320]	// _383, MEM[(const struct basic_string *)&D.64950]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x0, x24	// _383, tmp1303
	beq	.L3550		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3550:
	ldr	x23, [sp, 384]	// pretmp_446, MEM[(const struct basic_string *)&D.64938]
	b	.L3527		//
.L3921:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:440:       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
	ldr	x28, [sp, 392]	// _278, MEM[(const struct basic_string *)&D.64868 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	ldr	x0, [sp, 96]	// tmp1307, %sfp
	str	x0, [sp, 288]	// tmp1307, MEM[(struct _Alloc_hider *)&D.64883]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:211: 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
	cmn	x23, x28	// prephitmp_312, _278
	ccmp	x23, 0, 0, ne	// prephitmp_312,,,
	beq	.L3950		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:215: 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
	str	x28, [sp, 136]	// _278, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:217: 	if (__dnew > size_type(_S_local_capacity))
	cmp	x28, 15	// _278,
	bhi	.L3951		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:337: 	if (__n == 1)
	cmp	x28, 1	// _278,
	bne	.L3483		//,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	ldr	x0, [sp, 96]	// prephitmp_661, %sfp
// /usr/local/include/c++/8.3.0/bits/basic_string.h:338: 	  traits_type::assign(*__d, *__s);
	ldrb	w1, [x23]	// _286, MEM[(const char_type &)pretmp_1118]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	w1, [sp, 304]	// _286, MEM[(char_type &)&D.64883 + 16]
.L3484:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x28, [sp, 296]	// _278, MEM[(size_type *)&D.64883 + 8B]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x0, x28]	//, MEM[(char_type &)_289]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	mov	x0, 9223372036854775807	// tmp692,
	ldr	x1, [sp, 296]	// MEM[(const struct basic_string *)&D.64883 + 8B], MEM[(const struct basic_string *)&D.64883 + 8B]
	sub	x0, x0, x1	// tmp691, tmp692, MEM[(const struct basic_string *)&D.64883 + 8B]
	cmp	x0, 1	// tmp691,
	bls	.L3952		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1268: 	return _M_append(__s, __n);
	adrp	x1, .LC9	// tmp697,
	mov	x2, 2	//,
	add	x1, x1, :lo12:.LC9	//, tmp697,
	add	x0, sp, 288	// tmp1335,,
.LEHB174:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE174:
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	__errno_location		//
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	ldr	w0, [x0]	//, *_263
	bl	strerror		//
	mov	x23, x0	// _265,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x1, sp, 432	// tmp701,,
	str	x1, [sp, 416]	// tmp701, MEM[(struct _Alloc_hider *)&D.64882]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	mov	x2, -1	// iftmp.41_296,
	cbz	x0, .L3487	// _265,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:322: 	return __builtin_strlen(__s);
	bl	strlen		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	add	x2, x23, x0	// iftmp.41_296, _265,
.L3487:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	mov	x1, x23	//, _265
	mov	w3, 0	//,
	add	x0, sp, 416	// tmp1338,,
.LEHB175:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE175:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x3, x4, [sp, 288]	// _301, _298, MEM[(const struct basic_string *)&D.64883]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	mov	x6, 15	// tmp1272,
	ldr	x0, [sp, 96]	// tmp1307, %sfp
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x1, x2, [sp, 416]	// pretmp_1269, _299, MEM[(const struct basic_string *)&D.64882]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	cmp	x3, x0	// _301, tmp1307
	ldr	x0, [sp, 304]	// D.64883.D.21280._M_allocated_capacity, D.64883.D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	add	x5, x4, x2	// __size, _298, _299
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	csel	x0, x0, x6, ne	// iftmp.59_303, D.64883.D.21280._M_allocated_capacity, tmp1272,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_303
	bls	.L3492		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 432]	// D.64882.D.21280._M_allocated_capacity, D.64882.D.21280._M_allocated_capacity
	add	x7, sp, 432	// tmp713,,
	cmp	x1, x7	// pretmp_1269, tmp713
	csel	x6, x0, x6, ne	// iftmp.59_307, D.64882.D.21280._M_allocated_capacity, tmp1272,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x6	// __size, iftmp.59_307
	bls	.L3953		//,
.L3492:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	add	x0, sp, 288	// tmp1342,,
.LEHB176:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE176:
.L3905:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x23, sp, 448	// tmp1269,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x1, x0	// _311,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x2, x23, 16	// tmp717, tmp1269,
	str	x2, [sp, 448]	// tmp717, MEM[(struct _Alloc_hider *)&D.64884]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x2, [x0], 16	// _314, MEM[(const struct basic_string *)iftmp.58_313]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:544: 	if (__str._M_is_local())
	cmp	x2, x0	// _314, _315
	beq	.L3954		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x2, [sp, 448]	// _314, MEM[(char * *)&D.64884]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:552: 	    _M_capacity(__str._M_allocated_capacity);
	ldr	x2, [x1, 16]	// _317, MEM[(struct basic_string &)iftmp.58_313].D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x2, [sp, 464]	// _317, MEM[(size_type *)&D.64884 + 16B]
.L3496:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:558: 	_M_length(__str.length());
	ldr	x2, [x1, 8]	// _318, MEM[(const struct basic_string *)iftmp.58_313 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x2, [sp, 456]	// _318, MEM[(size_type *)&D.64884 + 8B]
	stp	x0, xzr, [x1]	// _315,, MEM[(char * *)iftmp.58_313]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	adrp	x0, _ZSt4cerr	// tmp721,
	add	x0, x0, :lo12:_ZSt4cerr	//, tmp721,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, 16]	//, MEM[(char_type &)iftmp.58_313 + 16]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	ldp	x1, x2, [sp, 448]	//,, MEM[(const struct basic_string *)&D.64884]
.LEHB177:
	bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l		//
	mov	x28, x0	// _269,
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	ldr	x0, [x0]	// _269->_vptr.basic_ostream, _269->_vptr.basic_ostream
	ldr	x0, [x0, -24]	// MEM[(long int *)_323 + -24B], MEM[(long int *)_323 + -24B]
	add	x0, x28, x0	// tmp724, _269, MEM[(long int *)_323 + -24B]
	ldr	x0, [x0, 240]	// _327, MEM[(const struct __ctype_type * *)_326 + 240B]
	str	x0, [sp, 104]	// _327, %sfp
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:49:       if (!__f)
	cbz	x0, .L3955	// _327,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:874: 	if (_M_widen_ok)
	ldr	x1, [sp, 104]	// _327, %sfp
	ldrb	w0, [x1, 56]	// MEM[(const struct ctype *)_327]._M_widen_ok, MEM[(const struct ctype *)_327]._M_widen_ok
	cbz	w0, .L3498	// MEM[(const struct ctype *)_327]._M_widen_ok,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:875: 	  return _M_widen[static_cast<unsigned char>(__c)];
	ldrb	w1, [x1, 67]	// _334, MEM[(const struct ctype *)_327]._M_widen
.L3499:
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	mov	x0, x28	//, _269
	bl	_ZNSo3putEc		//
// /usr/local/include/c++/8.3.0/ostream:613:     { return __os.flush(); }
	bl	_ZNSo5flushEv		//
.LEHE177:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 448]	// _270, MEM[(const struct basic_string *)&D.64884]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp731, tmp1269,
	cmp	x0, x23	// _270, tmp731
	beq	.L3500		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3500:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _271, MEM[(const struct basic_string *)&D.64882]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 432	// tmp733,,
	cmp	x0, x1	// _271, tmp733
	beq	.L3501		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3501:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	ldr	x1, [sp, 96]	// tmp1307, %sfp
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 288]	// _272, MEM[(const struct basic_string *)&D.64883]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x0, x1	// _272, tmp1307
	beq	.L3502		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3502:
	ldr	x23, [sp, 384]	// prephitmp_312, MEM[(const struct basic_string *)&D.64868]
	b	.L3479		//
.L3936:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:440:       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
	ldr	x26, [sp, 392]	// prephitmp_439, MEM[(const struct basic_string *)&D.64937 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x25, sp, 352	// tmp1266,,
	add	x0, x25, 16	// tmp867, tmp1266,
	str	x0, [sp, 352]	// tmp867, MEM[(struct _Alloc_hider *)&D.65006]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:211: 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
	cmn	x23, x26	// pretmp_423, prephitmp_439
	ccmp	x23, 0, 0, ne	// pretmp_423,,,
	beq	.L3956		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:215: 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
	str	x26, [sp, 152]	// prephitmp_439, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:217: 	if (__dnew > size_type(_S_local_capacity))
	cmp	x26, 15	// prephitmp_439,
	bhi	.L3957		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:337: 	if (__n == 1)
	cmp	x26, 1	// prephitmp_439,
	bne	.L3564		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:338: 	  traits_type::assign(*__d, *__s);
	ldrb	w2, [x23]	// _484, MEM[(const char_type &)pretmp_423]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	mov	x1, x0	// prephitmp_444, tmp867
	strb	w2, [sp, 368]	// _484, MEM[(char_type &)&D.65006 + 16]
.L3565:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x26, [sp, 360]	// prephitmp_439, MEM[(size_type *)&D.65006 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	mov	x0, 9223372036854775807	// tmp885,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, x26]	//, MEM[(char_type &)_487]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	ldr	x1, [sp, 360]	// MEM[(const struct basic_string *)&D.65006 + 8B], MEM[(const struct basic_string *)&D.65006 + 8B]
	sub	x0, x0, x1	// tmp884, tmp885, MEM[(const struct basic_string *)&D.65006 + 8B]
	cmp	x0, 1	// tmp884,
	bls	.L3958		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1268: 	return _M_append(__s, __n);
	adrp	x1, .LC9	// tmp890,
	mov	x2, 2	//,
	add	x1, x1, :lo12:.LC9	//, tmp890,
	mov	x0, x25	//, tmp1266
.LEHB178:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE178:
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	__errno_location		//
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	ldr	w0, [x0]	//, *_461
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x26, sp, 416	// tmp1268,,
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	strerror		//
	mov	x23, x0	// _463,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x1, x26, 16	// tmp894, tmp1268,
	str	x1, [sp, 416]	// tmp894, MEM[(struct _Alloc_hider *)&D.65005]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	mov	x2, -1	// iftmp.41_494,
	cbz	x0, .L3568	// _463,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:322: 	return __builtin_strlen(__s);
	bl	strlen		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	add	x2, x23, x0	// iftmp.41_494, _463,
.L3568:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	mov	x1, x23	//, _463
	mov	w3, 0	//,
	mov	x0, x26	//, tmp1268
.LEHB179:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE179:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x3, x4, [sp, 352]	// _499, _496, MEM[(const struct basic_string *)&D.65006]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	add	x0, x25, 16	// tmp904, tmp1266,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x1, x2, [sp, 416]	// pretmp_1174, _497, MEM[(const struct basic_string *)&D.65005]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	mov	x6, 15	// tmp1283,
	cmp	x3, x0	// _499, tmp904
	ldr	x0, [sp, 368]	// D.65006.D.21280._M_allocated_capacity, D.65006.D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	add	x5, x4, x2	// __size, _496, _497
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	csel	x0, x0, x6, ne	// iftmp.59_501, D.65006.D.21280._M_allocated_capacity, tmp1283,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_501
	bls	.L3573		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 432]	// D.65005.D.21280._M_allocated_capacity, D.65005.D.21280._M_allocated_capacity
	add	x7, x26, 16	// tmp906, tmp1268,
	cmp	x1, x7	// pretmp_1174, tmp906
	csel	x6, x0, x6, ne	// iftmp.59_505, D.65005.D.21280._M_allocated_capacity, tmp1283,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x6	// __size, iftmp.59_505
	bls	.L3959		//,
.L3573:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x0, x25	//, tmp1266
.LEHB180:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE180:
.L3907:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x23, sp, 448	// tmp1269,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x1, x0	// _509,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x2, x23, 16	// tmp910, tmp1269,
	str	x2, [sp, 448]	// tmp910, MEM[(struct _Alloc_hider *)&D.65007]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x2, [x0], 16	// _512, MEM[(const struct basic_string *)iftmp.58_511]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:544: 	if (__str._M_is_local())
	cmp	x2, x0	// _512, _513
	beq	.L3960		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x2, [sp, 448]	// _512, MEM[(char * *)&D.65007]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:552: 	    _M_capacity(__str._M_allocated_capacity);
	ldr	x2, [x1, 16]	// _515, MEM[(struct basic_string &)iftmp.58_511].D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x2, [sp, 464]	// _515, MEM[(size_type *)&D.65007 + 16B]
.L3577:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:558: 	_M_length(__str.length());
	ldr	x2, [x1, 8]	// _516, MEM[(const struct basic_string *)iftmp.58_511 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x2, [sp, 456]	// _516, MEM[(size_type *)&D.65007 + 8B]
	stp	x0, xzr, [x1]	// _513,, MEM[(char * *)iftmp.58_511]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	adrp	x0, _ZSt4cerr	// tmp914,
	add	x0, x0, :lo12:_ZSt4cerr	//, tmp914,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, 16]	//, MEM[(char_type &)iftmp.58_511 + 16]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	ldp	x1, x2, [sp, 448]	//,, MEM[(const struct basic_string *)&D.65007]
.LEHB181:
	bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l		//
	mov	x28, x0	// _467,
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	ldr	x0, [x0]	// _467->_vptr.basic_ostream, _467->_vptr.basic_ostream
	ldr	x0, [x0, -24]	// MEM[(long int *)_521 + -24B], MEM[(long int *)_521 + -24B]
	add	x0, x28, x0	// tmp917, _467, MEM[(long int *)_521 + -24B]
	ldr	x27, [x0, 240]	// _525, MEM[(const struct __ctype_type * *)_524 + 240B]
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:49:       if (!__f)
	cbz	x27, .L3961	// _525,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:874: 	if (_M_widen_ok)
	ldrb	w0, [x27, 56]	// MEM[(const struct ctype *)_525]._M_widen_ok, MEM[(const struct ctype *)_525]._M_widen_ok
	cbz	w0, .L3579	// MEM[(const struct ctype *)_525]._M_widen_ok,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:875: 	  return _M_widen[static_cast<unsigned char>(__c)];
	ldrb	w1, [x27, 67]	// _532, MEM[(const struct ctype *)_525]._M_widen
.L3580:
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	mov	x0, x28	//, _467
	bl	_ZNSo3putEc		//
// /usr/local/include/c++/8.3.0/ostream:613:     { return __os.flush(); }
	bl	_ZNSo5flushEv		//
.LEHE181:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 448]	// _468, MEM[(const struct basic_string *)&D.65007]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp924, tmp1269,
	cmp	x0, x23	// _468, tmp924
	beq	.L3581		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3581:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _469, MEM[(const struct basic_string *)&D.65005]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x26, x26, 16	// tmp926, tmp1268,
	cmp	x0, x26	// _469, tmp926
	beq	.L3582		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3582:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 352]	// _470, MEM[(const struct basic_string *)&D.65006]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x25, x25, 16	// tmp928, tmp1266,
	cmp	x0, x25	// _470, tmp928
	beq	.L3583		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3583:
	ldr	x23, [sp, 384]	// pretmp_423, MEM[(const struct basic_string *)&D.64937]
	b	.L3560		//
.L3937:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:440:       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
	ldr	x27, [sp, 360]	// _679, MEM[(const struct basic_string *)&D.65058 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x26, sp, 416	// tmp1268,,
	add	x0, x26, 16	// tmp1049, tmp1268,
	str	x0, [sp, 416]	// tmp1049, MEM[(struct _Alloc_hider *)&D.65127]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:211: 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
	cmn	x23, x27	// prephitmp_645, _679
	ccmp	x23, 0, 0, ne	// prephitmp_645,,,
	beq	.L3962		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:215: 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
	str	x27, [sp, 448]	// _679, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:217: 	if (__dnew > size_type(_S_local_capacity))
	cmp	x27, 15	// _679,
	bhi	.L3963		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:337: 	if (__n == 1)
	cmp	x27, 1	// _679,
	bne	.L3636		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:338: 	  traits_type::assign(*__d, *__s);
	ldrb	w2, [x23]	// _687, MEM[(const char_type &)pretmp_1322]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	mov	x1, x0	// pretmp_658, tmp1049
	strb	w2, [sp, 432]	// _687, MEM[(char_type &)&D.65127 + 16]
.L3637:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x27, [sp, 424]	// _679, MEM[(size_type *)&D.65127 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	mov	x0, 9223372036854775807	// tmp1067,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, x27]	//, MEM[(char_type &)_690]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	ldr	x1, [sp, 424]	// MEM[(const struct basic_string *)&D.65127 + 8B], MEM[(const struct basic_string *)&D.65127 + 8B]
	sub	x0, x0, x1	// tmp1066, tmp1067, MEM[(const struct basic_string *)&D.65127 + 8B]
	cmp	x0, 1	// tmp1066,
	bls	.L3964		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1268: 	return _M_append(__s, __n);
	adrp	x1, .LC9	// tmp1072,
	mov	x2, 2	//,
	add	x1, x1, :lo12:.LC9	//, tmp1072,
	mov	x0, x26	//, tmp1268
.LEHB182:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE182:
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	__errno_location		//
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	ldr	w0, [x0]	//, *_664
	bl	strerror		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	str	x22, [sp, 384]	// tmp1300, MEM[(struct _Alloc_hider *)&D.65126]._M_p
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	mov	x23, x0	// _666,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	mov	x2, -1	// iftmp.41_697,
	cbz	x0, .L3640	// _666,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:322: 	return __builtin_strlen(__s);
	bl	strlen		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	add	x2, x23, x0	// iftmp.41_697, _666,
.L3640:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	mov	x1, x23	//, _666
	mov	w3, 0	//,
	add	x0, sp, 384	// tmp1376,,
.LEHB183:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE183:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x3, x4, [sp, 416]	// _702, _699, MEM[(const struct basic_string *)&D.65127]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	add	x0, x26, 16	// tmp1086, tmp1268,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x1, x2, [sp, 384]	// pretmp_526, _700, MEM[(const struct basic_string *)&D.65126]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	mov	x6, 15	// tmp1291,
	cmp	x3, x0	// _702, tmp1086
	ldr	x0, [sp, 432]	// D.65127.D.21280._M_allocated_capacity, D.65127.D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	add	x5, x4, x2	// __size, _699, _700
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	csel	x0, x0, x6, ne	// iftmp.59_704, D.65127.D.21280._M_allocated_capacity, tmp1291,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_704
	bls	.L3645		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 400]	// D.65126.D.21280._M_allocated_capacity, D.65126.D.21280._M_allocated_capacity
	cmp	x1, x22	// pretmp_526, tmp1300
	csel	x6, x0, x6, ne	// iftmp.59_708, D.65126.D.21280._M_allocated_capacity, tmp1291,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x6	// __size, iftmp.59_708
	bls	.L3965		//,
.L3645:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x0, x26	//, tmp1268
.LEHB184:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE184:
.L3909:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x23, sp, 448	// tmp1269,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x1, x0	// _712,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x2, x23, 16	// tmp1092, tmp1269,
	str	x2, [sp, 448]	// tmp1092, MEM[(struct _Alloc_hider *)&D.65128]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x2, [x0], 16	// _715, MEM[(const struct basic_string *)iftmp.58_714]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:544: 	if (__str._M_is_local())
	cmp	x2, x0	// _715, _716
	beq	.L3966		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x2, [sp, 448]	// _715, MEM[(char * *)&D.65128]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:552: 	    _M_capacity(__str._M_allocated_capacity);
	ldr	x2, [x1, 16]	// _718, MEM[(struct basic_string &)iftmp.58_714].D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x2, [sp, 464]	// _718, MEM[(size_type *)&D.65128 + 16B]
.L3649:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:558: 	_M_length(__str.length());
	ldr	x2, [x1, 8]	// _719, MEM[(const struct basic_string *)iftmp.58_714 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x2, [sp, 456]	// _719, MEM[(size_type *)&D.65128 + 8B]
	stp	x0, xzr, [x1]	// _716,, MEM[(char * *)iftmp.58_714]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	adrp	x0, _ZSt4cerr	// tmp1096,
	add	x0, x0, :lo12:_ZSt4cerr	//, tmp1096,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, 16]	//, MEM[(char_type &)iftmp.58_714 + 16]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	ldp	x1, x2, [sp, 448]	//,, MEM[(const struct basic_string *)&D.65128]
.LEHB185:
	bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l		//
	mov	x28, x0	// _670,
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	ldr	x0, [x0]	// _670->_vptr.basic_ostream, _670->_vptr.basic_ostream
	ldr	x0, [x0, -24]	// MEM[(long int *)_724 + -24B], MEM[(long int *)_724 + -24B]
	add	x0, x28, x0	// tmp1099, _670, MEM[(long int *)_724 + -24B]
	ldr	x27, [x0, 240]	// _728, MEM[(const struct __ctype_type * *)_727 + 240B]
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:49:       if (!__f)
	cbz	x27, .L3967	// _728,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:874: 	if (_M_widen_ok)
	ldrb	w0, [x27, 56]	// MEM[(const struct ctype *)_728]._M_widen_ok, MEM[(const struct ctype *)_728]._M_widen_ok
	cbz	w0, .L3651	// MEM[(const struct ctype *)_728]._M_widen_ok,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:875: 	  return _M_widen[static_cast<unsigned char>(__c)];
	ldrb	w1, [x27, 67]	// _735, MEM[(const struct ctype *)_728]._M_widen
.L3652:
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	mov	x0, x28	//, _670
	bl	_ZNSo3putEc		//
// /usr/local/include/c++/8.3.0/ostream:613:     { return __os.flush(); }
	bl	_ZNSo5flushEv		//
.LEHE185:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 448]	// _671, MEM[(const struct basic_string *)&D.65128]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp1106, tmp1269,
	cmp	x0, x23	// _671, tmp1106
	beq	.L3653		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3653:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 384]	// _672, MEM[(const struct basic_string *)&D.65126]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x0, x22	// _672, tmp1300
	beq	.L3654		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3654:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _673, MEM[(const struct basic_string *)&D.65127]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x26, x26, 16	// tmp1110, tmp1268,
	cmp	x0, x26	// _673, tmp1110
	beq	.L3655		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3655:
	ldr	x23, [sp, 352]	// prephitmp_645, MEM[(const struct basic_string *)&D.65058]
	b	.L3632		//
.L3929:
// bitmapdecoding.cpp:233:     printf("bogus\n.");
	adrp	x0, .LC15	// tmp1149,
	add	x26, sp, 216	// tmp1263,,
	add	x0, x0, :lo12:.LC15	//, tmp1149,
.LEHB186:
	bl	printf		//
.LEHE186:
	b	.L3675		//
.L3531:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:350: 	if (__n == 0)
	mov	x0, x24	// pretmp_533, tmp1303
	cbz	x25, .L3532	// _389,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x2, x25	//, _389
	mov	x1, x23	//, pretmp_446
	bl	memcpy		//
	ldr	x25, [sp, 144]	// _389, __dnew
	ldr	x0, [sp, 320]	// pretmp_533, MEM[(const struct basic_string *)&D.64950]
	b	.L3532		//
	.p2align 2
.L3603:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:350: 	if (__n == 0)
	mov	x0, x22	// prephitmp_616, tmp1300
	cbz	x26, .L3604	// _592,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x2, x26	//, _592
	mov	x1, x23	//, prephitmp_623
	bl	memcpy		//
	ldr	x26, [sp, 160]	// _592, __dnew
	ldr	x0, [sp, 384]	// prephitmp_616, MEM[(const struct basic_string *)&D.65071]
	b	.L3604		//
	.p2align 2
.L3923:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:829: 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
	add	x0, x3, x0, lsl 3	// _352, _345, _245,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1656: 	if (size_type __n = this->_M_impl._M_finish - __pos)
	cmp	x2, x0	// _346, _352
	beq	.L3515		//,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1660: 	    this->_M_impl._M_finish = __pos;
	str	x0, [sp, 616]	// _352, MEM[(long unsigned int * *)&unified + 136B]
	b	.L3515		//
.L3483:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:350: 	if (__n == 0)
	ldr	x0, [sp, 96]	// prephitmp_661, %sfp
	cbz	x28, .L3484	// _278,
	b	.L3482		//
	.p2align 2
.L3957:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:219: 	    _M_data(_M_create(__dnew, size_type(0)));
	mov	x2, 0	//,
	add	x1, sp, 152	//,,
	mov	x0, x25	//, tmp1266
.LEHB187:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm		//
.LEHE187:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	ldr	x1, [sp, 152]	// __dnew, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x0, [sp, 352]	// _481, MEM[(char * *)&D.65006]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x1, [sp, 368]	// __dnew, MEM[(size_type *)&D.65006 + 16B]
.L3563:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x2, x26	//, prephitmp_439
	mov	x1, x23	//, pretmp_423
	bl	memcpy		//
	ldr	x26, [sp, 152]	// prephitmp_439, __dnew
	ldr	x1, [sp, 352]	// prephitmp_444, MEM[(const struct basic_string *)&D.65006]
	b	.L3565		//
.L3963:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:219: 	    _M_data(_M_create(__dnew, size_type(0)));
	mov	x2, 0	//,
	add	x1, sp, 448	//,,
	mov	x0, x26	//, tmp1268
.LEHB188:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm		//
.LEHE188:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	ldr	x1, [sp, 448]	// __dnew, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x0, [sp, 416]	// _684, MEM[(char * *)&D.65127]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x1, [sp, 432]	// __dnew, MEM[(size_type *)&D.65127 + 16B]
.L3635:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x2, x27	//, _679
	mov	x1, x23	//, prephitmp_645
	bl	memcpy		//
	ldr	x1, [sp, 416]	// pretmp_658, MEM[(const struct basic_string *)&D.65127]
	ldr	x27, [sp, 448]	// _679, __dnew
	b	.L3637		//
.L3546:
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:876: 	this->_M_widen_init();
	mov	x0, x25	//, _438
.LEHB189:
	bl	_ZNKSt5ctypeIcE13_M_widen_initEv		//
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	ldr	x2, [x25]	// MEM[(const struct ctype *)_438].D.31376._vptr.facet, MEM[(const struct ctype *)_438].D.31376._vptr.facet
	adrp	x0, _ZNKSt5ctypeIcE8do_widenEc	// tmp836,
	add	x0, x0, :lo12:_ZNKSt5ctypeIcE8do_widenEc	// tmp835, tmp836,
	mov	w1, 10	// _445,
	ldr	x2, [x2, 48]	// _449, MEM[(int (*) () *)_448 + 48B]
	cmp	x2, x0	// _449, tmp835
	beq	.L3547		//,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	mov	x0, x25	//, _438
	blr	x2		// _449
.LEHE189:
	and	w1, w0, 255	// _445,
	b	.L3547		//
.L3618:
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:876: 	this->_M_widen_init();
	mov	x0, x27	//, _641
.LEHB190:
	bl	_ZNKSt5ctypeIcE13_M_widen_initEv		//
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	ldr	x2, [x27]	// MEM[(const struct ctype *)_641].D.31376._vptr.facet, MEM[(const struct ctype *)_641].D.31376._vptr.facet
	adrp	x0, _ZNKSt5ctypeIcE8do_widenEc	// tmp1016,
	add	x0, x0, :lo12:_ZNKSt5ctypeIcE8do_widenEc	// tmp1015, tmp1016,
	mov	w1, 10	// _648,
	ldr	x2, [x2, 48]	// _652, MEM[(int (*) () *)_651 + 48B]
	cmp	x2, x0	// _652, tmp1015
	beq	.L3619		//,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	mov	x0, x27	//, _641
	blr	x2		// _652
.LEHE190:
	and	w1, w0, 255	// _648,
	b	.L3619		//
.L3498:
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:876: 	this->_M_widen_init();
	ldr	x0, [sp, 104]	//, %sfp
.LEHB191:
	bl	_ZNKSt5ctypeIcE13_M_widen_initEv		//
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	ldr	x0, [sp, 104]	// _327, %sfp
	mov	w1, 10	// _334,
	ldr	x2, [x0]	// MEM[(const struct ctype *)_327].D.31376._vptr.facet, MEM[(const struct ctype *)_327].D.31376._vptr.facet
	adrp	x0, _ZNKSt5ctypeIcE8do_widenEc	// tmp728,
	add	x0, x0, :lo12:_ZNKSt5ctypeIcE8do_widenEc	// tmp727, tmp728,
	ldr	x2, [x2, 48]	// _338, MEM[(int (*) () *)_337 + 48B]
	cmp	x2, x0	// _338, tmp727
	beq	.L3499		//,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	ldr	x0, [sp, 104]	//, %sfp
	blr	x2		// _338
.LEHE191:
	and	w1, w0, 255	// _334,
	b	.L3499		//
.L3945:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:219: 	    _M_data(_M_create(__dnew, size_type(0)));
	mov	x2, 0	//,
	add	x1, sp, 144	//,,
	add	x0, sp, 320	// tmp1358,,
.LEHB192:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm		//
.LEHE192:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	ldr	x1, [sp, 144]	// __dnew, __dnew
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x2, x25	//, _389
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x0, [sp, 320]	// _203, MEM[(char * *)&D.64950]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x1, [sp, 336]	// __dnew, MEM[(size_type *)&D.64950 + 16B]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x1, x23	//, pretmp_446
	bl	memcpy		//
	ldr	x25, [sp, 144]	// _389, __dnew
	ldr	x0, [sp, 320]	// pretmp_533, MEM[(const struct basic_string *)&D.64950]
	b	.L3532		//
.L3939:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:219: 	    _M_data(_M_create(__dnew, size_type(0)));
	mov	x2, 0	//,
	add	x1, sp, 160	//,,
	add	x0, sp, 384	// tmp1369,,
.LEHB193:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm		//
.LEHE193:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	ldr	x1, [sp, 160]	// __dnew, __dnew
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x2, x26	//, _592
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x0, [sp, 384]	// _597, MEM[(char * *)&D.65071]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x1, [sp, 400]	// __dnew, MEM[(size_type *)&D.65071 + 16B]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x1, x23	//, prephitmp_623
	bl	memcpy		//
	ldr	x26, [sp, 160]	// _592, __dnew
	ldr	x0, [sp, 384]	// prephitmp_616, MEM[(const struct basic_string *)&D.65071]
	b	.L3604		//
.L3948:
	ldp	x2, x3, [x1, 16]	// _427, MEM[(char * {ref-all})iftmp.58_424 + 16B]
	stp	x2, x3, [sp, 464]	// _427, MEM[(char * {ref-all})&D.64951 + 16B]
	b	.L3544		//
.L3942:
	ldp	x2, x3, [x1, 16]	// _630, MEM[(char * {ref-all})iftmp.58_627 + 16B]
	stp	x2, x3, [sp, 464]	// _630, MEM[(char * {ref-all})&D.65072 + 16B]
	b	.L3616		//
.L3579:
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:876: 	this->_M_widen_init();
	mov	x0, x27	//, _525
.LEHB194:
	bl	_ZNKSt5ctypeIcE13_M_widen_initEv		//
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	ldr	x2, [x27]	// MEM[(const struct ctype *)_525].D.31376._vptr.facet, MEM[(const struct ctype *)_525].D.31376._vptr.facet
	adrp	x0, _ZNKSt5ctypeIcE8do_widenEc	// tmp921,
	add	x0, x0, :lo12:_ZNKSt5ctypeIcE8do_widenEc	// tmp920, tmp921,
	mov	w1, 10	// _532,
	ldr	x2, [x2, 48]	// _536, MEM[(int (*) () *)_535 + 48B]
	cmp	x2, x0	// _536, tmp920
	beq	.L3580		//,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	mov	x0, x27	//, _525
	blr	x2		// _536
.LEHE194:
	and	w1, w0, 255	// _532,
	b	.L3580		//
.L3922:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:827: 	  _M_default_append(__new_size - size());
	sub	x1, x0, x1	//, _245, tmp660
	add	x0, sp, 608	//,,
.LEHB195:
	bl	_ZNSt6vectorImSaImEE17_M_default_appendEm		//
	b	.L3515		//
.L3473:
	mov	x1, x21	//, prephitmp_328
	add	x0, sp, 632	//,,
	bl	_ZNSt6vectorImSaImEE17_M_default_appendEm		//
.LEHE195:
	b	.L3477		//
.L3651:
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:876: 	this->_M_widen_init();
	mov	x0, x27	//, _728
.LEHB196:
	bl	_ZNKSt5ctypeIcE13_M_widen_initEv		//
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	ldr	x2, [x27]	// MEM[(const struct ctype *)_728].D.31376._vptr.facet, MEM[(const struct ctype *)_728].D.31376._vptr.facet
	adrp	x0, _ZNKSt5ctypeIcE8do_widenEc	// tmp1103,
	add	x0, x0, :lo12:_ZNKSt5ctypeIcE8do_widenEc	// tmp1102, tmp1103,
	mov	w1, 10	// _735,
	ldr	x2, [x2, 48]	// _739, MEM[(int (*) () *)_738 + 48B]
	cmp	x2, x0	// _739, tmp1102
	beq	.L3652		//,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	mov	x0, x27	//, _728
	blr	x2		// _739
.LEHE196:
	and	w1, w0, 255	// _735,
	b	.L3652		//
.L3523:
	add	x26, sp, 216	// tmp1263,,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:827: 	  _M_default_append(__new_size - size());
	add	x0, sp, 192	//,,
.LEHB197:
	bl	_ZNSt6vectorIySaIyEE17_M_default_appendEm		//
.LEHE197:
	b	.L3525		//
.L3951:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:219: 	    _M_data(_M_create(__dnew, size_type(0)));
	mov	x2, 0	//,
	add	x1, sp, 136	//,,
	add	x0, sp, 288	// tmp1334,,
.LEHB198:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm		//
.LEHE198:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	ldr	x1, [sp, 136]	// __dnew, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x0, [sp, 288]	// _283, MEM[(char * *)&D.64883]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x1, [sp, 304]	// __dnew, MEM[(size_type *)&D.64883 + 16B]
.L3482:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x2, x28	//, _278
	mov	x1, x23	//, prephitmp_312
	bl	memcpy		//
	ldr	x28, [sp, 136]	// _278, __dnew
	ldr	x0, [sp, 288]	// prephitmp_661, MEM[(const struct basic_string *)&D.64883]
	b	.L3484		//
.L3738:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x22, 0	// prephitmp_333,
	mov	x27, 0	// _212,
	b	.L3470		//
.L3954:
	ldp	x2, x3, [x1, 16]	// _316, MEM[(char * {ref-all})iftmp.58_313 + 16B]
	stp	x2, x3, [sp, 464]	// _316, MEM[(char * {ref-all})&D.64884 + 16B]
	b	.L3496		//
.L3941:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1932: 			  _M_limit(__pos, __n1), __s, __n2);
	mov	x2, 0	//,
	mov	x1, 0	//,
	mov	x0, x26	//, tmp1268
.LEHB199:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm		//
.LEHE199:
	b	.L3908		//
.L3947:
	mov	x2, 0	//,
	mov	x1, 0	//,
	mov	x0, x26	//, tmp1268
.LEHB200:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm		//
.LEHE200:
	b	.L3906		//
.L3636:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:350: 	if (__n == 0)
	mov	x1, x0	// pretmp_658, tmp1049
	cbz	x27, .L3637	// _679,
	b	.L3635		//
	.p2align 2
.L3564:
	mov	x1, x0	// prephitmp_444, tmp867
	cbz	x26, .L3565	// prephitmp_439,
	b	.L3563		//
	.p2align 2
.L3953:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1932: 			  _M_limit(__pos, __n1), __s, __n2);
	mov	x2, 0	//,
	mov	x1, 0	//,
	add	x0, sp, 416	// tmp1341,,
.LEHB201:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm		//
.LEHE201:
	b	.L3905		//
.L3960:
	ldp	x2, x3, [x1, 16]	// _514, MEM[(char * {ref-all})iftmp.58_511 + 16B]
	stp	x2, x3, [sp, 464]	// _514, MEM[(char * {ref-all})&D.65007 + 16B]
	b	.L3577		//
.L3966:
	ldp	x2, x3, [x1, 16]	// _717, MEM[(char * {ref-all})iftmp.58_714 + 16B]
	stp	x2, x3, [sp, 464]	// _717, MEM[(char * {ref-all})&D.65128 + 16B]
	b	.L3649		//
.L3959:
	mov	x2, 0	//,
	mov	x1, 0	//,
	mov	x0, x26	//, tmp1268
.LEHB202:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm		//
.LEHE202:
	b	.L3907		//
.L3965:
	mov	x2, 0	//,
	mov	x1, 0	//,
	add	x0, sp, 384	// tmp1377,,
.LEHB203:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm		//
.LEHE203:
	b	.L3909		//
.L3952:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:312: 	  __throw_length_error(__N(__s));
	adrp	x0, .LC8	// tmp695,
	add	x0, x0, :lo12:.LC8	//, tmp695,
.LEHB204:
	bl	_ZSt20__throw_length_errorPKc		//
.LEHE204:
.L3950:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:212: 	  std::__throw_logic_error(__N("basic_string::"
	adrp	x0, .LC6	// tmp681,
	add	x0, x0, :lo12:.LC6	//, tmp681,
.LEHB205:
	bl	_ZSt19__throw_logic_errorPKc		//
.LEHE205:
.L3956:
	adrp	x0, .LC6	// tmp874,
	add	x0, x0, :lo12:.LC6	//, tmp874,
.LEHB206:
	bl	_ZSt19__throw_logic_errorPKc		//
.LEHE206:
.L3938:
	adrp	x0, .LC6	// tmp969,
	add	x0, x0, :lo12:.LC6	//, tmp969,
.LEHB207:
	bl	_ZSt19__throw_logic_errorPKc		//
.LEHE207:
.L3962:
	adrp	x0, .LC6	// tmp1056,
	add	x0, x0, :lo12:.LC6	//, tmp1056,
.LEHB208:
	bl	_ZSt19__throw_logic_errorPKc		//
.LEHE208:
.L3944:
	adrp	x0, .LC6	// tmp789,
	add	x0, x0, :lo12:.LC6	//, tmp789,
.LEHB209:
	bl	_ZSt19__throw_logic_errorPKc		//
.LEHE209:
	.p2align 2
.L3933:
.LEHB210:
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:102: 	  std::__throw_bad_alloc();
	bl	_ZSt17__throw_bad_allocv		//
.LEHE210:
.L3932:
.LEHB211:
	bl	_ZSt17__throw_bad_allocv		//
.LEHE211:
.L3931:
.LEHB212:
	bl	_ZSt17__throw_bad_allocv		//
.LEHE212:
.L3955:
.LEHB213:
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:50: 	__throw_bad_cast();
	bl	_ZSt16__throw_bad_castv		//
.LEHE213:
.L3928:
.LEHB214:
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:102: 	  std::__throw_bad_alloc();
	bl	_ZSt17__throw_bad_allocv		//
.LEHE214:
.L3920:
.LEHB215:
	bl	_ZSt17__throw_bad_allocv		//
.LEHE215:
.L3930:
.LEHB216:
	bl	_ZSt17__throw_bad_allocv		//
.LEHE216:
.L3964:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:312: 	  __throw_length_error(__N(__s));
	adrp	x0, .LC8	// tmp1070,
	add	x0, x0, :lo12:.LC8	//, tmp1070,
.LEHB217:
	bl	_ZSt20__throw_length_errorPKc		//
.LEHE217:
.L3967:
.LEHB218:
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:50: 	__throw_bad_cast();
	bl	_ZSt16__throw_bad_castv		//
.LEHE218:
.L3958:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:312: 	  __throw_length_error(__N(__s));
	adrp	x0, .LC8	// tmp888,
	add	x0, x0, :lo12:.LC8	//, tmp888,
.LEHB219:
	bl	_ZSt20__throw_length_errorPKc		//
.LEHE219:
.L3961:
.LEHB220:
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:50: 	__throw_bad_cast();
	bl	_ZSt16__throw_bad_castv		//
.LEHE220:
.L3940:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:312: 	  __throw_length_error(__N(__s));
	adrp	x0, .LC8	// tmp983,
	add	x0, x0, :lo12:.LC8	//, tmp983,
.LEHB221:
	bl	_ZSt20__throw_length_errorPKc		//
.LEHE221:
.L3943:
.LEHB222:
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:50: 	__throw_bad_cast();
	bl	_ZSt16__throw_bad_castv		//
.LEHE222:
.L3946:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:312: 	  __throw_length_error(__N(__s));
	adrp	x0, .LC8	// tmp803,
	add	x0, x0, :lo12:.LC8	//, tmp803,
.LEHB223:
	bl	_ZSt20__throw_length_errorPKc		//
.LEHE223:
.L3949:
.LEHB224:
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:50: 	__throw_bad_cast();
	bl	_ZSt16__throw_bad_castv		//
.LEHE224:
.L3790:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 384]	// _594, MEM[(const struct basic_string *)&D.65071]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x2, sp, 400	// tmp991,,
	mov	x19, x0	// tmp993,
	cmp	x1, x2	// _594, tmp991
	beq	.L3643		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _681
.L3918:
	bl	_ZdlPv		//
.L3643:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 352]	// _570,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x25, x25, 16	// tmp1135, tmp1266,
	cmp	x0, x25	// _570, tmp1135
	beq	.L3735		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3735:
	add	x26, sp, 216	// tmp1263,,
.L3596:
// bitmapdecoding.cpp:220:   std::vector<std::vector<unsigned long long>> allresults;
	mov	x0, x26	//, tmp1263
	bl	_ZNSt6vectorIS_IySaIyEESaIS1_EED1Ev		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 192]	// _152, results.D.43930._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3736	// _152,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3736:
// bitmapdecoding.cpp:218:   LinuxEvents<PERF_TYPE_HARDWARE> unified(evts);
	add	x0, sp, 480	// tmp1384,,
	bl	_ZN11LinuxEventsILi0EED1Ev		//
.L3730:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 168]	// _153, evts.D.42966._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3737	// _153,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3737:
	mov	x0, x19	//, tmp1245
.LEHB225:
	bl	_Unwind_Resume		//
.LEHE225:
.L3787:
	mov	x19, x0	// tmp1034,
.L3629:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 384]	// _589, MEM[(const struct basic_string *)&D.65071]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 400	// tmp1037,,
	cmp	x0, x1	// _589, tmp1037
	bne	.L3918		//,
	b	.L3643		//
.L3788:
	mov	x19, x0	// tmp1028,
.L3627:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _588, MEM[(const struct basic_string *)&D.65070]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x26, x26, 16	// tmp1033, tmp1268,
	cmp	x0, x26	// _588, tmp1033
	beq	.L3629		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L3629		//
.L3773:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 448]	// _273, MEM[(const struct basic_string *)&D.64884]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp739, tmp1269,
	mov	x19, x0	// tmp741,
	cmp	x1, x23	// _273, tmp739
	beq	.L3507		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _273
	bl	_ZdlPv		//
.L3507:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _274, MEM[(const struct basic_string *)&D.64882]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 432	// tmp745,,
	cmp	x0, x1	// _274, tmp745
	beq	.L3509		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3509:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 288]	// _275, MEM[(const struct basic_string *)&D.64883]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 304	// tmp749,,
	cmp	x0, x1	// _275, tmp749
	beq	.L3490		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3490:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 384]	// _246, MEM[(const struct basic_string *)&D.64868]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 400	// tmp761,,
	cmp	x0, x1	// _246, tmp761
	beq	.L3517		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3517:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 632]	// _247, MEM[(struct vector *)&unified + 152B].D.42087._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3518	// _247,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3518:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 608]	// _248, MEM[(struct vector *)&unified + 128B].D.42087._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3519	// _248,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3519:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x27, .L3730	// _212,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x27	//, _212
	bl	_ZdlPv		//
	b	.L3730		//
.L3780:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 320]	// _391, MEM[(const struct basic_string *)&D.64950]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x2, sp, 336	// tmp811,,
	mov	x19, x0	// tmp813,
	cmp	x1, x2	// _391, tmp811
	beq	.L3571		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _478
.L3915:
	bl	_ZdlPv		//
.L3571:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 384]	// _368,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 400	// tmp950,,
	cmp	x0, x1	// _368, tmp950
	beq	.L3735		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L3735		//
.L3789:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 448]	// _587, MEM[(const struct basic_string *)&D.65072]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp1027, tmp1269,
	mov	x19, x0	// tmp1029,
	cmp	x1, x23	// _587, tmp1027
	beq	.L3627		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _587
	bl	_ZdlPv		//
	b	.L3627		//
.L3781:
	mov	x19, x0	// tmp939,
.L3590:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 352]	// _473, MEM[(const struct basic_string *)&D.65006]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x25, x25, 16	// tmp942, tmp1266,
	cmp	x0, x25	// _473, tmp942
	beq	.L3571		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L3571		//
.L3782:
	mov	x19, x0	// tmp933,
	b	.L3588		//
.L3779:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 448]	// _384, MEM[(const struct basic_string *)&D.64951]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp847, tmp1269,
	mov	x19, x0	// tmp849,
	cmp	x1, x23	// _384, tmp847
	beq	.L3555		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _384
	bl	_ZdlPv		//
.L3555:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _385, MEM[(const struct basic_string *)&D.64949]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x26, x26, 16	// tmp853, tmp1268,
	cmp	x0, x26	// _385, tmp853
	beq	.L3557		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3557:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 320]	// _386, MEM[(const struct basic_string *)&D.64950]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 336	// tmp857,,
	cmp	x0, x1	// _386, tmp857
	beq	.L3571		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L3571		//
.L3764:
	mov	x19, x0	// tmp947,
	b	.L3596		//
.L3776:
	mov	x19, x0	// tmp897,
	b	.L3571		//
.L3769:
	mov	x19, x0	// tmp762,
	b	.L3517		//
.L3798:
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:86: 	  __catch(...)
	bl	__cxa_begin_catch		//
.L3711:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x21, x27	// __cur, __first
	bne	.L3968		//,
.LEHB226:
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:89: 	      __throw_exception_again;
	bl	__cxa_rethrow		//
.LEHE226:
.L3796:
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:86: 	  __catch(...)
	bl	__cxa_begin_catch		//
.L3690:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x26, x21	// __first, __cur
	bne	.L3969		//,
.LEHB227:
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:89: 	      __throw_exception_again;
	bl	__cxa_rethrow		//
.LEHE227:
.L3968:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [x27]	// _842, MEM[base: __first_841, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3710	// _842,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3710:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	add	x27, x27, 24	// __first, __first,
	b	.L3711		//
.L3797:
	mov	x19, x0	// tmp1204,
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:86: 	  __catch(...)
	bl	__cxa_end_catch		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:285: 	_M_deallocate(_M_impl._M_start,
	ldr	x0, [sp, 448]	// _822, MEM[(struct _Vector_base *)&D.50508]._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3714	// _822,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L3714		//
.L3777:
	mov	x19, x0	// tmp854,
	b	.L3557		//
.L3778:
	mov	x19, x0	// tmp848,
	b	.L3555		//
.L3771:
	mov	x19, x0	// tmp746,
	b	.L3509		//
.L3772:
	mov	x19, x0	// tmp740,
	b	.L3507		//
.L3774:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 288]	// _280, MEM[(const struct basic_string *)&D.64883]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x2, sp, 304	// tmp703,,
	mov	x19, x0	// tmp705,
	cmp	x1, x2	// _280, tmp703
	beq	.L3490		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _280
	bl	_ZdlPv		//
	b	.L3490		//
.L3785:
	mov	x19, x0	// tmp1079,
	b	.L3643		//
.L3775:
	mov	x19, x0	// tmp897,
	b	.L3571		//
.L3768:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x1, [sp, 264]	// _150, avg.D.45803._M_impl._M_start
	mov	x19, x0	// tmp1253,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x1, .L3714	// _150,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _150
	bl	_ZdlPv		//
	b	.L3714		//
.L3767:
	mov	x19, x0	// tmp1251,
	mov	x0, x23	//, tmp1269
	bl	_ZNSt6vectorIS_IySaIyEESaIS1_EED1Ev		//
.L3714:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 240]	// _151, mins.D.43930._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3735	// _151,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L3735		//
.L3763:
	mov	x19, x0	// tmp1245,
	b	.L3730		//
.L3765:
	mov	x19, x0	// tmp947, tmp1248
	add	x26, sp, 216	// tmp1263,,
	mov	x0, x23	//, tmp1269
	bl	_ZNSt6vectorIS_IySaIyEESaIS1_EED1Ev		//
	b	.L3596		//
.L3969:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [x26]	// _792, MEM[base: __first_791, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3689	// _792,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3689:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	add	x26, x26, 24	// __first, __first,
	b	.L3690		//
.L3795:
	mov	x19, x0	// tmp1184,
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:86: 	  __catch(...)
	bl	__cxa_end_catch		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:285: 	_M_deallocate(_M_impl._M_start,
	ldr	x0, [sp, 448]	// _778, MEM[(struct _Vector_base *)&D.50505]._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3735	// _778,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L3735		//
.L3468:
.LEHB228:
// bitmapdecoding.cpp:209:   uint32_t *bigarray = new uint32_t[wordcount * 64];
	bl	__cxa_throw_bad_array_new_length		//
.LEHE228:
.L3786:
	mov	x19, x0	// tmp1079,
	b	.L3643		//
.L3766:
	mov	x19, x0	// tmp1207,
	b	.L3714		//
.L3770:
	mov	x19, x0	// tmp704,
	b	.L3490		//
.L3791:
	mov	x19, x0	// tmp1121,
.L3662:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _676, MEM[(const struct basic_string *)&D.65127]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x26, x26, 16	// tmp1124, tmp1268,
	cmp	x0, x26	// _676, tmp1124
	bne	.L3918		//,
	b	.L3643		//
.L3792:
	mov	x19, x0	// tmp1115,
.L3660:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 384]	// _675, MEM[(const struct basic_string *)&D.65126]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 400	// tmp1120,,
	cmp	x0, x1	// _675, tmp1120
	beq	.L3662		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L3662		//
.L3794:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 416]	// _681, MEM[(const struct basic_string *)&D.65127]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x26, x26, 16	// tmp1078, tmp1268,
	mov	x19, x0	// tmp1080,
	cmp	x1, x26	// _681, tmp1078
	beq	.L3643		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _681
	b	.L3918		//
.L3783:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 448]	// _471, MEM[(const struct basic_string *)&D.65007]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp932, tmp1269,
	mov	x19, x0	// tmp934,
	cmp	x1, x23	// _471, tmp932
	beq	.L3588		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _471
	bl	_ZdlPv		//
.L3588:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _472, MEM[(const struct basic_string *)&D.65005]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x26, x26, 16	// tmp938, tmp1268,
	cmp	x0, x26	// _472, tmp938
	beq	.L3590		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L3590		//
.L3784:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 352]	// _478, MEM[(const struct basic_string *)&D.65006]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x25, x25, 16	// tmp896, tmp1266,
	mov	x19, x0	// tmp898,
	cmp	x1, x25	// _478, tmp896
	beq	.L3571		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _478
	b	.L3915		//
.L3793:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 448]	// _674, MEM[(const struct basic_string *)&D.65128]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp1114, tmp1269,
	mov	x19, x0	// tmp1116,
	cmp	x1, x23	// _674, tmp1114
	beq	.L3660		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _674
	bl	_ZdlPv		//
	b	.L3660		//
	.cfi_endproc
.LFE2325:
	.section	.gcc_except_table
	.align	2
.LLSDA2325:
	.byte	0xff
	.byte	0x9b
	.uleb128 .LLSDATT2325-.LLSDATTD2325
.LLSDATTD2325:
	.byte	0x1
	.uleb128 .LLSDACSE2325-.LLSDACSB2325
.LLSDACSB2325:
	.uleb128 .LEHB155-.LFB2325
	.uleb128 .LEHE155-.LEHB155
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB156-.LFB2325
	.uleb128 .LEHE156-.LEHB156
	.uleb128 .L3763-.LFB2325
	.uleb128 0
	.uleb128 .LEHB157-.LFB2325
	.uleb128 .LEHE157-.LEHB157
	.uleb128 .L3769-.LFB2325
	.uleb128 0
	.uleb128 .LEHB158-.LFB2325
	.uleb128 .LEHE158-.LEHB158
	.uleb128 .L3764-.LFB2325
	.uleb128 0
	.uleb128 .LEHB159-.LFB2325
	.uleb128 .LEHE159-.LEHB159
	.uleb128 .L3796-.LFB2325
	.uleb128 0x1
	.uleb128 .LEHB160-.LFB2325
	.uleb128 .LEHE160-.LEHB160
	.uleb128 .L3765-.LFB2325
	.uleb128 0
	.uleb128 .LEHB161-.LFB2325
	.uleb128 .LEHE161-.LEHB161
	.uleb128 .L3766-.LFB2325
	.uleb128 0
	.uleb128 .LEHB162-.LFB2325
	.uleb128 .LEHE162-.LEHB162
	.uleb128 .L3798-.LFB2325
	.uleb128 0x1
	.uleb128 .LEHB163-.LFB2325
	.uleb128 .LEHE163-.LEHB163
	.uleb128 .L3767-.LFB2325
	.uleb128 0
	.uleb128 .LEHB164-.LFB2325
	.uleb128 .LEHE164-.LEHB164
	.uleb128 .L3768-.LFB2325
	.uleb128 0
	.uleb128 .LEHB165-.LFB2325
	.uleb128 .LEHE165-.LEHB165
	.uleb128 .L3764-.LFB2325
	.uleb128 0
	.uleb128 .LEHB166-.LFB2325
	.uleb128 .LEHE166-.LEHB166
	.uleb128 .L3790-.LFB2325
	.uleb128 0
	.uleb128 .LEHB167-.LFB2325
	.uleb128 .LEHE167-.LEHB167
	.uleb128 .L3787-.LFB2325
	.uleb128 0
	.uleb128 .LEHB168-.LFB2325
	.uleb128 .LEHE168-.LEHB168
	.uleb128 .L3788-.LFB2325
	.uleb128 0
	.uleb128 .LEHB169-.LFB2325
	.uleb128 .LEHE169-.LEHB169
	.uleb128 .L3789-.LFB2325
	.uleb128 0
	.uleb128 .LEHB170-.LFB2325
	.uleb128 .LEHE170-.LEHB170
	.uleb128 .L3780-.LFB2325
	.uleb128 0
	.uleb128 .LEHB171-.LFB2325
	.uleb128 .LEHE171-.LEHB171
	.uleb128 .L3777-.LFB2325
	.uleb128 0
	.uleb128 .LEHB172-.LFB2325
	.uleb128 .LEHE172-.LEHB172
	.uleb128 .L3778-.LFB2325
	.uleb128 0
	.uleb128 .LEHB173-.LFB2325
	.uleb128 .LEHE173-.LEHB173
	.uleb128 .L3779-.LFB2325
	.uleb128 0
	.uleb128 .LEHB174-.LFB2325
	.uleb128 .LEHE174-.LEHB174
	.uleb128 .L3774-.LFB2325
	.uleb128 0
	.uleb128 .LEHB175-.LFB2325
	.uleb128 .LEHE175-.LEHB175
	.uleb128 .L3771-.LFB2325
	.uleb128 0
	.uleb128 .LEHB176-.LFB2325
	.uleb128 .LEHE176-.LEHB176
	.uleb128 .L3772-.LFB2325
	.uleb128 0
	.uleb128 .LEHB177-.LFB2325
	.uleb128 .LEHE177-.LEHB177
	.uleb128 .L3773-.LFB2325
	.uleb128 0
	.uleb128 .LEHB178-.LFB2325
	.uleb128 .LEHE178-.LEHB178
	.uleb128 .L3784-.LFB2325
	.uleb128 0
	.uleb128 .LEHB179-.LFB2325
	.uleb128 .LEHE179-.LEHB179
	.uleb128 .L3781-.LFB2325
	.uleb128 0
	.uleb128 .LEHB180-.LFB2325
	.uleb128 .LEHE180-.LEHB180
	.uleb128 .L3782-.LFB2325
	.uleb128 0
	.uleb128 .LEHB181-.LFB2325
	.uleb128 .LEHE181-.LEHB181
	.uleb128 .L3783-.LFB2325
	.uleb128 0
	.uleb128 .LEHB182-.LFB2325
	.uleb128 .LEHE182-.LEHB182
	.uleb128 .L3794-.LFB2325
	.uleb128 0
	.uleb128 .LEHB183-.LFB2325
	.uleb128 .LEHE183-.LEHB183
	.uleb128 .L3791-.LFB2325
	.uleb128 0
	.uleb128 .LEHB184-.LFB2325
	.uleb128 .LEHE184-.LEHB184
	.uleb128 .L3792-.LFB2325
	.uleb128 0
	.uleb128 .LEHB185-.LFB2325
	.uleb128 .LEHE185-.LEHB185
	.uleb128 .L3793-.LFB2325
	.uleb128 0
	.uleb128 .LEHB186-.LFB2325
	.uleb128 .LEHE186-.LEHB186
	.uleb128 .L3764-.LFB2325
	.uleb128 0
	.uleb128 .LEHB187-.LFB2325
	.uleb128 .LEHE187-.LEHB187
	.uleb128 .L3775-.LFB2325
	.uleb128 0
	.uleb128 .LEHB188-.LFB2325
	.uleb128 .LEHE188-.LEHB188
	.uleb128 .L3785-.LFB2325
	.uleb128 0
	.uleb128 .LEHB189-.LFB2325
	.uleb128 .LEHE189-.LEHB189
	.uleb128 .L3779-.LFB2325
	.uleb128 0
	.uleb128 .LEHB190-.LFB2325
	.uleb128 .LEHE190-.LEHB190
	.uleb128 .L3789-.LFB2325
	.uleb128 0
	.uleb128 .LEHB191-.LFB2325
	.uleb128 .LEHE191-.LEHB191
	.uleb128 .L3773-.LFB2325
	.uleb128 0
	.uleb128 .LEHB192-.LFB2325
	.uleb128 .LEHE192-.LEHB192
	.uleb128 .L3776-.LFB2325
	.uleb128 0
	.uleb128 .LEHB193-.LFB2325
	.uleb128 .LEHE193-.LEHB193
	.uleb128 .L3786-.LFB2325
	.uleb128 0
	.uleb128 .LEHB194-.LFB2325
	.uleb128 .LEHE194-.LEHB194
	.uleb128 .L3783-.LFB2325
	.uleb128 0
	.uleb128 .LEHB195-.LFB2325
	.uleb128 .LEHE195-.LEHB195
	.uleb128 .L3769-.LFB2325
	.uleb128 0
	.uleb128 .LEHB196-.LFB2325
	.uleb128 .LEHE196-.LEHB196
	.uleb128 .L3793-.LFB2325
	.uleb128 0
	.uleb128 .LEHB197-.LFB2325
	.uleb128 .LEHE197-.LEHB197
	.uleb128 .L3764-.LFB2325
	.uleb128 0
	.uleb128 .LEHB198-.LFB2325
	.uleb128 .LEHE198-.LEHB198
	.uleb128 .L3770-.LFB2325
	.uleb128 0
	.uleb128 .LEHB199-.LFB2325
	.uleb128 .LEHE199-.LEHB199
	.uleb128 .L3788-.LFB2325
	.uleb128 0
	.uleb128 .LEHB200-.LFB2325
	.uleb128 .LEHE200-.LEHB200
	.uleb128 .L3778-.LFB2325
	.uleb128 0
	.uleb128 .LEHB201-.LFB2325
	.uleb128 .LEHE201-.LEHB201
	.uleb128 .L3772-.LFB2325
	.uleb128 0
	.uleb128 .LEHB202-.LFB2325
	.uleb128 .LEHE202-.LEHB202
	.uleb128 .L3782-.LFB2325
	.uleb128 0
	.uleb128 .LEHB203-.LFB2325
	.uleb128 .LEHE203-.LEHB203
	.uleb128 .L3792-.LFB2325
	.uleb128 0
	.uleb128 .LEHB204-.LFB2325
	.uleb128 .LEHE204-.LEHB204
	.uleb128 .L3774-.LFB2325
	.uleb128 0
	.uleb128 .LEHB205-.LFB2325
	.uleb128 .LEHE205-.LEHB205
	.uleb128 .L3770-.LFB2325
	.uleb128 0
	.uleb128 .LEHB206-.LFB2325
	.uleb128 .LEHE206-.LEHB206
	.uleb128 .L3775-.LFB2325
	.uleb128 0
	.uleb128 .LEHB207-.LFB2325
	.uleb128 .LEHE207-.LEHB207
	.uleb128 .L3786-.LFB2325
	.uleb128 0
	.uleb128 .LEHB208-.LFB2325
	.uleb128 .LEHE208-.LEHB208
	.uleb128 .L3785-.LFB2325
	.uleb128 0
	.uleb128 .LEHB209-.LFB2325
	.uleb128 .LEHE209-.LEHB209
	.uleb128 .L3776-.LFB2325
	.uleb128 0
	.uleb128 .LEHB210-.LFB2325
	.uleb128 .LEHE210-.LEHB210
	.uleb128 .L3798-.LFB2325
	.uleb128 0x1
	.uleb128 .LEHB211-.LFB2325
	.uleb128 .LEHE211-.LEHB211
	.uleb128 .L3766-.LFB2325
	.uleb128 0
	.uleb128 .LEHB212-.LFB2325
	.uleb128 .LEHE212-.LEHB212
	.uleb128 .L3796-.LFB2325
	.uleb128 0x1
	.uleb128 .LEHB213-.LFB2325
	.uleb128 .LEHE213-.LEHB213
	.uleb128 .L3773-.LFB2325
	.uleb128 0
	.uleb128 .LEHB214-.LFB2325
	.uleb128 .LEHE214-.LEHB214
	.uleb128 .L3764-.LFB2325
	.uleb128 0
	.uleb128 .LEHB215-.LFB2325
	.uleb128 .LEHE215-.LEHB215
	.uleb128 .L3763-.LFB2325
	.uleb128 0
	.uleb128 .LEHB216-.LFB2325
	.uleb128 .LEHE216-.LEHB216
	.uleb128 .L3764-.LFB2325
	.uleb128 0
	.uleb128 .LEHB217-.LFB2325
	.uleb128 .LEHE217-.LEHB217
	.uleb128 .L3794-.LFB2325
	.uleb128 0
	.uleb128 .LEHB218-.LFB2325
	.uleb128 .LEHE218-.LEHB218
	.uleb128 .L3793-.LFB2325
	.uleb128 0
	.uleb128 .LEHB219-.LFB2325
	.uleb128 .LEHE219-.LEHB219
	.uleb128 .L3784-.LFB2325
	.uleb128 0
	.uleb128 .LEHB220-.LFB2325
	.uleb128 .LEHE220-.LEHB220
	.uleb128 .L3783-.LFB2325
	.uleb128 0
	.uleb128 .LEHB221-.LFB2325
	.uleb128 .LEHE221-.LEHB221
	.uleb128 .L3790-.LFB2325
	.uleb128 0
	.uleb128 .LEHB222-.LFB2325
	.uleb128 .LEHE222-.LEHB222
	.uleb128 .L3789-.LFB2325
	.uleb128 0
	.uleb128 .LEHB223-.LFB2325
	.uleb128 .LEHE223-.LEHB223
	.uleb128 .L3780-.LFB2325
	.uleb128 0
	.uleb128 .LEHB224-.LFB2325
	.uleb128 .LEHE224-.LEHB224
	.uleb128 .L3779-.LFB2325
	.uleb128 0
	.uleb128 .LEHB225-.LFB2325
	.uleb128 .LEHE225-.LEHB225
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB226-.LFB2325
	.uleb128 .LEHE226-.LEHB226
	.uleb128 .L3797-.LFB2325
	.uleb128 0
	.uleb128 .LEHB227-.LFB2325
	.uleb128 .LEHE227-.LEHB227
	.uleb128 .L3795-.LFB2325
	.uleb128 0
	.uleb128 .LEHB228-.LFB2325
	.uleb128 .LEHE228-.LEHB228
	.uleb128 0
	.uleb128 0
.LLSDACSE2325:
	.byte	0x1
	.byte	0
	.align	2
	.4byte	0

.LLSDATT2325:
	.section	.text._Z4testIXadL_Z16simdjson_decoderPjRjjmEEEvPKcc,"axG",@progbits,_Z4testIXadL_Z16simdjson_decoderPjRjjmEEEvPKcc,comdat
	.size	_Z4testIXadL_Z16simdjson_decoderPjRjjmEEEvPKcc, .-_Z4testIXadL_Z16simdjson_decoderPjRjjmEEEvPKcc
	.section	.text._Z4testIXadL_Z14faster_decoderPjRjjmEEEvPKcc,"axG",@progbits,_Z4testIXadL_Z14faster_decoderPjRjjmEEEvPKcc,comdat
	.align	2
	.p2align 3,,7
	.weak	_Z4testIXadL_Z14faster_decoderPjRjjmEEEvPKcc
	.type	_Z4testIXadL_Z14faster_decoderPjRjjmEEEvPKcc, %function
_Z4testIXadL_Z14faster_decoderPjRjjmEEEvPKcc:
.LFB2329:
	.cfi_startproc
	.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
	.cfi_lsda 0x1b,.LLSDA2329
	sub	sp, sp, #656	//,,
	.cfi_def_cfa_offset 656
// bitmapdecoding.cpp:208:   uint64_t *array = build_bitmap(filename, target, &wordcount);
	add	x2, sp, 128	//,,
// bitmapdecoding.cpp:206: void test(const char *filename, char target) {
	stp	x29, x30, [sp]	//,,
	.cfi_offset 29, -656
	.cfi_offset 30, -648
	mov	x29, sp	//,
	stp	x19, x20, [sp, 16]	//,,
	stp	x21, x22, [sp, 32]	//,,
	stp	x23, x24, [sp, 48]	//,,
	stp	x25, x26, [sp, 64]	//,,
	stp	x27, x28, [sp, 80]	//,,
	.cfi_offset 19, -640
	.cfi_offset 20, -632
	.cfi_offset 21, -624
	.cfi_offset 22, -616
	.cfi_offset 23, -608
	.cfi_offset 24, -600
	.cfi_offset 25, -592
	.cfi_offset 26, -584
	.cfi_offset 27, -576
	.cfi_offset 28, -568
.LEHB229:
// bitmapdecoding.cpp:208:   uint64_t *array = build_bitmap(filename, target, &wordcount);
	bl	_Z12build_bitmapPKccPm		//
	mov	x19, x0	// _67,
// bitmapdecoding.cpp:209:   uint32_t *bigarray = new uint32_t[wordcount * 64];
	ldr	x0, [sp, 128]	// wordcount.168_1, wordcount
// bitmapdecoding.cpp:209:   uint32_t *bigarray = new uint32_t[wordcount * 64];
	mov	x1, 2305843009213693950	// tmp622,
	cmp	x1, x0, lsl 6	// tmp622, wordcount.168_1,
	bcc	.L3971		//,
// bitmapdecoding.cpp:209:   uint32_t *bigarray = new uint32_t[wordcount * 64];
	lsl	x0, x0, 8	//, wordcount.168_1,
	bl	_Znam		//
.LEHE229:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	add	x1, sp, 480	// tmp1317,,
// bitmapdecoding.cpp:209:   uint32_t *bigarray = new uint32_t[wordcount * 64];
	mov	x20, x0	// _71,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	add	x0, sp, 168	// tmp1318,,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:96: 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [sp, 168]	//,, MEM[(struct _Vector_impl *)&evts]._M_start
	str	xzr, [sp, 184]	//, MEM[(struct _Vector_impl *)&evts]._M_end_of_storage
// bitmapdecoding.cpp:213:   evts.push_back(PERF_COUNT_HW_CPU_CYCLES);
	str	wzr, [sp, 480]	//, D.50592
.LEHB230:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	bl	_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_		//
// bitmapdecoding.cpp:214:   evts.push_back(PERF_COUNT_HW_INSTRUCTIONS);
	mov	w2, 1	// tmp627,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	add	x1, sp, 480	// tmp1319,,
	add	x0, sp, 168	// tmp1320,,
// bitmapdecoding.cpp:214:   evts.push_back(PERF_COUNT_HW_INSTRUCTIONS);
	str	w2, [sp, 480]	// tmp627, D.50593
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	bl	_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_		//
// bitmapdecoding.cpp:215:   evts.push_back(PERF_COUNT_HW_BRANCH_MISSES);
	mov	w2, 5	// tmp630,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	add	x1, sp, 480	// tmp1321,,
	add	x0, sp, 168	// tmp1322,,
// bitmapdecoding.cpp:215:   evts.push_back(PERF_COUNT_HW_BRANCH_MISSES);
	str	w2, [sp, 480]	// tmp630, D.50594
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	bl	_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_		//
// bitmapdecoding.cpp:216:   evts.push_back(PERF_COUNT_HW_CACHE_REFERENCES);
	mov	w2, 2	// tmp633,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	add	x1, sp, 480	// tmp1323,,
	add	x0, sp, 168	// tmp1324,,
// bitmapdecoding.cpp:216:   evts.push_back(PERF_COUNT_HW_CACHE_REFERENCES);
	str	w2, [sp, 480]	// tmp633, D.50595
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	bl	_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_		//
// bitmapdecoding.cpp:217:   evts.push_back(PERF_COUNT_HW_CACHE_MISSES);
	mov	w2, 3	// tmp636,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	add	x0, sp, 168	// tmp1325,,
	add	x1, sp, 480	// tmp1326,,
// bitmapdecoding.cpp:217:   evts.push_back(PERF_COUNT_HW_CACHE_MISSES);
	str	w2, [sp, 480]	// tmp636, D.50596
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	bl	_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:460: 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
	ldp	x1, x0, [sp, 168]	// pretmp_539, pretmp_373, MEM[(int * *)&evts]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x25, x0, x1	// prephitmp_336, pretmp_373, pretmp_539
	asr	x21, x25, 2	// _329, prephitmp_336,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	cbz	x21, .L4242	// _329,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	mov	x0, 4611686018427387903	// tmp640,
	cmp	x21, x0	// _329, tmp640
	bhi	.L4427		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x25	//, prephitmp_336
	bl	_Znwm		//
.LEHE230:
	mov	x27, x0	// _213,
	ldp	x1, x0, [sp, 168]	// pretmp_539, pretmp_373, evts.D.42966._M_impl._M_start
	sub	x25, x0, x1	// prephitmp_336, pretmp_373, pretmp_539
	asr	x22, x25, 2	// _334, prephitmp_336,
	mov	x21, x22	// _329, _334
.L3973:
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	cmp	x0, x1	// pretmp_373, pretmp_539
	beq	.L3975		//,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:368: 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
	mov	x2, x25	//, prephitmp_336
	mov	x0, x27	//, _213
	bl	memmove		//
.L3975:
// linux-perf-events.h:27:     memset(&attribs, 0, sizeof(attribs));
	add	x0, sp, 480	// tmp1327,,
// linux-perf-events.h:26:   explicit LinuxEvents(std::vector<int> config_vec) : fd(0), working(true) {
	str	wzr, [sp, 480]	//, unified.fd
// linux-perf-events.h:30:     attribs.disabled = 1;
	mov	w1, 97	// tmp653,
// linux-perf-events.h:26:   explicit LinuxEvents(std::vector<int> config_vec) : fd(0), working(true) {
	mov	w4, 1	// tmp643,
// linux-perf-events.h:28:     attribs.type = TYPE;
	mov	x3, 481036337152	// tmp647,
// linux-perf-events.h:35:     attribs.read_format = PERF_FORMAT_GROUP | PERF_FORMAT_ID;
	mov	x2, 12	// tmp648,
// linux-perf-events.h:27:     memset(&attribs, 0, sizeof(attribs));
	stp	xzr, xzr, [x0, 32]	// MEM[(void *)&unified + 16B]
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:369: 	  return __result + _Num;
	add	x25, x27, x25	// _211, _213, prephitmp_336
// linux-perf-events.h:27:     memset(&attribs, 0, sizeof(attribs));
	stp	xzr, xzr, [x0, 48]	// MEM[(void *)&unified + 16B]
// linux-perf-events.h:30:     attribs.disabled = 1;
	strb	w1, [sp, 528]	// tmp653, MEM[(struct perf_event_attr *)&unified + 48B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:96: 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
	add	x1, sp, 512	//,,
// linux-perf-events.h:26:   explicit LinuxEvents(std::vector<int> config_vec) : fd(0), working(true) {
	strb	w4, [sp, 484]	// tmp643, unified.working
// linux-perf-events.h:28:     attribs.type = TYPE;
	str	x3, [sp, 488]	// tmp647, MEM[(unsigned int *)&unified + 8B]
// linux-perf-events.h:27:     memset(&attribs, 0, sizeof(attribs));
	stp	xzr, xzr, [sp, 496]	// MEM[(void *)&unified + 16B]
// linux-perf-events.h:35:     attribs.read_format = PERF_FORMAT_GROUP | PERF_FORMAT_ID;
	str	x2, [sp, 520]	// tmp648, unified.attribs.read_format
// linux-perf-events.h:41:     num_events = config_vec.size();
	str	w22, [sp, 600]	// _334, unified.num_events
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:96: 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [x1, 96]	//,,
	stp	xzr, xzr, [x1, 112]	//,,
	str	xzr, [sp, 640]	//, MEM[(struct _Vector_impl *)&unified + 152B]._M_finish
	str	xzr, [sp, 648]	//, MEM[(struct _Vector_impl *)&unified + 152B]._M_end_of_storage
// linux-perf-events.h:27:     memset(&attribs, 0, sizeof(attribs));
	stp	xzr, xzr, [x0, 64]	// MEM[(void *)&unified + 16B]
	stp	xzr, xzr, [x0, 80]	// MEM[(void *)&unified + 16B]
	stp	xzr, xzr, [x0, 96]	// MEM[(void *)&unified + 16B]
	str	xzr, [sp, 592]	//, MEM[(void *)&unified + 16B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:826: 	if (__new_size > size())
	cbnz	x21, .L3976	// _329,
.L3980:
// linux-perf-events.h:44:     for (auto config : config_vec) {
	cmp	x25, x27	// _211, _213
	mov	x21, x27	// ivtmp.1566, _213
	mov	w24, 0	// i,
	mov	w22, -1	// group,
	beq	.L4016		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x0, sp, 304	// tmp1307,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x26, sp, 400	// tmp1305,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	str	x0, [sp, 96]	// tmp1307, %sfp
	b	.L4015		//
	.p2align 2
.L3981:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:933: 	return *(this->_M_impl._M_start + __n);
	ldr	x2, [sp, 632]	// MEM[(long unsigned int * *)&unified + 152B], MEM[(long unsigned int * *)&unified + 152B]
// linux-perf-events.h:50:       ioctl(fd, PERF_EVENT_IOC_ID, &ids[i++]);
	mov	x1, 9223	//,
	movk	x1, 0x8008, lsl 16	//,,
	add	x21, x21, 4	// ivtmp.1566, ivtmp.1566,
// linux-perf-events.h:50:       ioctl(fd, PERF_EVENT_IOC_ID, &ids[i++]);
	add	w23, w24, 1	// i, i,
// linux-perf-events.h:50:       ioctl(fd, PERF_EVENT_IOC_ID, &ids[i++]);
	add	x2, x2, x24, uxtw 3	//, MEM[(long unsigned int * *)&unified + 152B], i,,
	bl	ioctl		//
// linux-perf-events.h:52:         group = fd;
	ldr	w0, [sp, 480]	//, unified.fd
	cmn	w22, #1	// group,
	csel	w22, w0, w22, eq	// group, unified.fd, group,
// linux-perf-events.h:44:     for (auto config : config_vec) {
	cmp	x25, x21	// _211, ivtmp.1566
	beq	.L4016		//,
// linux-perf-events.h:50:       ioctl(fd, PERF_EVENT_IOC_ID, &ids[i++]);
	mov	w24, w23	// i, i
.L4015:
// linux-perf-events.h:45:       attribs.config = config;
	ldrsw	x6, [x21]	// MEM[base: _1525, offset: 0], MEM[base: _1525, offset: 0]
// linux-perf-events.h:46:       fd = syscall(__NR_perf_event_open, &attribs, pid, cpu, group, flags);
	mov	x5, 0	//,
	mov	w4, w22	//, group
	mov	w3, -1	//,
	mov	w2, 0	//,
	add	x1, sp, 488	//,,
	mov	x0, 241	//,
// linux-perf-events.h:45:       attribs.config = config;
	str	x6, [sp, 496]	// MEM[base: _1525, offset: 0], unified.attribs.config
// linux-perf-events.h:46:       fd = syscall(__NR_perf_event_open, &attribs, pid, cpu, group, flags);
	bl	syscall		//
// linux-perf-events.h:46:       fd = syscall(__NR_perf_event_open, &attribs, pid, cpu, group, flags);
	str	w0, [sp, 480]	// _231, unified.fd
// linux-perf-events.h:47:       if (fd == -1) {
	cmn	w0, #1	// _231,
	bne	.L3981		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x1, .LC7	// tmp669,
	adrp	x2, .LC7+15	// tmp671,
	add	x1, x1, :lo12:.LC7	//, tmp669,
	add	x2, x2, :lo12:.LC7+15	//, tmp671,
	mov	w3, 0	//,
	add	x0, sp, 384	// tmp1333,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	str	x26, [sp, 384]	// tmp1305, MEM[(struct _Alloc_hider *)&D.65507]._M_p
.LEHB231:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE231:
// linux-perf-events.h:88:     if (working)
	ldrb	w0, [sp, 484]	// unified.working, unified.working
	ldr	x23, [sp, 384]	// prephitmp_332, MEM[(const struct basic_string *)&D.65507]
	cbnz	w0, .L4428	// unified.working,
.L3982:
// linux-perf-events.h:90:     working = false;
	strb	wzr, [sp, 484]	//, unified.working
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x23, x26	// prephitmp_332, tmp1305
	beq	.L4007		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x23	//, prephitmp_332
	bl	_ZdlPv		//
.L4007:
	ldr	w0, [sp, 480]	//, unified.fd
	b	.L3981		//
	.p2align 2
.L4016:
// linux-perf-events.h:56:     temp_result_vec.resize(num_events * 2 + 1);
	ldr	w0, [sp, 600]	//, unified.num_events
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:826: 	if (__new_size > size())
	ldr	x3, [sp, 608]	// _346, MEM[(long unsigned int * *)&unified + 128B]
	ldr	x2, [sp, 616]	// _347, MEM[(long unsigned int * *)&unified + 136B]
// linux-perf-events.h:56:     temp_result_vec.resize(num_events * 2 + 1);
	lsl	w0, w0, 1	// tmp657, unified.num_events,
// linux-perf-events.h:56:     temp_result_vec.resize(num_events * 2 + 1);
	add	w0, w0, 1	// _245, tmp657,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x1, x2, x3	// tmp659, _347, _346
// linux-perf-events.h:56:     temp_result_vec.resize(num_events * 2 + 1);
	sxtw	x0, w0	// _246, _245
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	asr	x1, x1, 3	// tmp660, tmp659,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:826: 	if (__new_size > size())
	cmp	x0, x1	// _246, tmp660
	bhi	.L4429		//,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:828: 	else if (__new_size < size())
	bcc	.L4430		//,
.L4018:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x27, .L4025	// _213,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x27	//, _213
	bl	_ZdlPv		//
.L4025:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldp	x0, x1, [sp, 168]	// MEM[(int * *)&evts], MEM[(int * *)&evts + 8B], MEM[(int * *)&evts]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:96: 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [sp, 192]	//,, MEM[(struct _Vector_impl *)&results]._M_start
	stp	xzr, xzr, [sp, 208]	//,, MEM[(struct _Vector_impl *)&results]._M_end_of_storage
	stp	xzr, xzr, [sp, 224]	//,, MEM[(struct _Vector_impl *)&allresults]._M_finish
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x1, x1, x0	// tmp768, MEM[(int * *)&evts + 8B], MEM[(int * *)&evts]
	asr	x1, x1, 2	// tmp771, tmp768,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:826: 	if (__new_size > size())
	cbnz	x1, .L4026	// tmp771,
.L4028:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x22, sp, 400	// tmp1300,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x24, sp, 336	// tmp1303,,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	mov	w21, 10	// ivtmp_1562,
	.p2align 3
.L4027:
// linux-perf-events.h:62:     if (ioctl(fd, PERF_EVENT_IOC_RESET, PERF_IOC_FLAG_GROUP) == -1) {
	ldr	w0, [sp, 480]	//, unified.fd
	mov	w2, 1	//,
	mov	x1, 9219	//,
// bitmapdecoding.cpp:224:     matches = 0;
	str	wzr, [sp, 124]	//, matches
// linux-perf-events.h:62:     if (ioctl(fd, PERF_EVENT_IOC_RESET, PERF_IOC_FLAG_GROUP) == -1) {
	bl	ioctl		//
// linux-perf-events.h:62:     if (ioctl(fd, PERF_EVENT_IOC_RESET, PERF_IOC_FLAG_GROUP) == -1) {
	cmn	w0, #1	//,
	beq	.L4431		//,
.L4029:
// linux-perf-events.h:66:     if (ioctl(fd, PERF_EVENT_IOC_ENABLE, PERF_IOC_FLAG_GROUP) == -1) {
	ldr	w0, [sp, 480]	//, unified.fd
	mov	w2, 1	//,
	mov	x1, 9216	//,
	bl	ioctl		//
// linux-perf-events.h:66:     if (ioctl(fd, PERF_EVENT_IOC_ENABLE, PERF_IOC_FLAG_GROUP) == -1) {
	cmn	w0, #1	//,
	beq	.L4432		//,
.L4062:
// bitmapdecoding.cpp:226:     for (size_t idx = 0; idx < wordcount; idx++) {
	ldr	x0, [sp, 128]	// wordcount, wordcount
	mov	x12, 0	// idx,
	cbz	x0, .L4102	// wordcount,
	.p2align 3
.L4095:
// bitmapdecoding.cpp:227:       F(bigarray, matches, idx, array[idx]);
	ldr	x3, [x19, x12, lsl 3]	// _6, MEM[base: _67, index: idx_1415, step: 8, offset: 0B]
// bitmapdecoding.cpp:121:   if (bits != 0u) {
	cbz	x3, .L4101	// _6,
	mov	x0, x20	//, _71
	mov	w2, w12	//, idx
	add	x1, sp, 124	// tmp1368,,
	bl	_Z14faster_decoderPjRjjm.part.15		//
	ldr	x0, [sp, 128]	// wordcount, wordcount
.L4101:
// bitmapdecoding.cpp:226:     for (size_t idx = 0; idx < wordcount; idx++) {
	add	x12, x12, 1	// idx, idx,
// bitmapdecoding.cpp:226:     for (size_t idx = 0; idx < wordcount; idx++) {
	cmp	x0, x12	// wordcount, idx
	bhi	.L4095		//,
.L4102:
// linux-perf-events.h:72:     if (ioctl(fd, PERF_EVENT_IOC_DISABLE, PERF_IOC_FLAG_GROUP) == -1) {
	ldr	w0, [sp, 480]	//, unified.fd
	mov	w2, 1	//,
	mov	x1, 9217	//,
	bl	ioctl		//
// linux-perf-events.h:72:     if (ioctl(fd, PERF_EVENT_IOC_DISABLE, PERF_IOC_FLAG_GROUP) == -1) {
	cmn	w0, #1	//,
	beq	.L4433		//,
.L4097:
// linux-perf-events.h:76:     if (read(fd, temp_result_vec.data(), temp_result_vec.size() * 8) == -1) {
	ldr	w0, [sp, 480]	//, unified.fd
	add	x26, sp, 216	// tmp1375,,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldr	x3, [sp, 616]	// MEM[(long unsigned int * *)&unified + 136B], MEM[(long unsigned int * *)&unified + 136B]
// linux-perf-events.h:76:     if (read(fd, temp_result_vec.data(), temp_result_vec.size() * 8) == -1) {
	ldr	x2, [sp, 608]	// _548, MEM[(long unsigned int * *)&unified + 128B]
// linux-perf-events.h:76:     if (read(fd, temp_result_vec.data(), temp_result_vec.size() * 8) == -1) {
	mov	x1, x2	//, _548
	sub	x2, x3, x2	//, MEM[(long unsigned int * *)&unified + 136B], _548
.LEHB232:
	bl	read		//
// linux-perf-events.h:76:     if (read(fd, temp_result_vec.data(), temp_result_vec.size() * 8) == -1) {
	cmn	x0, #1	//,
	beq	.L4434		//,
.L4135:
// linux-perf-events.h:81:     for (uint32_t i = 1; i < temp_result_vec.size(); i += 2) {
	ldr	x5, [sp, 608]	// _1036, MEM[(long unsigned int * *)&unified + 128B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldr	x4, [sp, 616]	// MEM[(long unsigned int * *)&unified + 136B], MEM[(long unsigned int * *)&unified + 136B]
	sub	x4, x4, x5	// tmp1124, MEM[(long unsigned int * *)&unified + 136B], _1036
	asr	x4, x4, 3	// _492, tmp1124,
// linux-perf-events.h:81:     for (uint32_t i = 1; i < temp_result_vec.size(); i += 2) {
	cmp	x4, 1	// _492,
	bls	.L4168		//,
// linux-perf-events.h:82:       results[i / 2] = temp_result_vec[i];
	ldr	x6, [sp, 192]	// _565, MEM[(long long unsigned int * *)&results]
// linux-perf-events.h:81:     for (uint32_t i = 1; i < temp_result_vec.size(); i += 2) {
	mov	x1, 1	// _555,
// linux-perf-events.h:82:       results[i / 2] = temp_result_vec[i];
	mov	w0, w1	// i, _555
	.p2align 3
.L4169:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:933: 	return *(this->_M_impl._M_start + __n);
	lsr	w2, w0, 1	// tmp1128, i,
// linux-perf-events.h:81:     for (uint32_t i = 1; i < temp_result_vec.size(); i += 2) {
	add	w0, w0, 2	// i, i,
// linux-perf-events.h:82:       results[i / 2] = temp_result_vec[i];
	ldr	x3, [x5, x1, lsl 3]	// *_562, *_562
// linux-perf-events.h:81:     for (uint32_t i = 1; i < temp_result_vec.size(); i += 2) {
	uxtw	x1, w0	// _555, i
// linux-perf-events.h:82:       results[i / 2] = temp_result_vec[i];
	str	x3, [x6, x2, lsl 3]	// *_562, *_567
// linux-perf-events.h:81:     for (uint32_t i = 1; i < temp_result_vec.size(); i += 2) {
	cmp	x4, x1	// _492, _555
	bhi	.L4169		//,
.L4168:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1076: 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
	ldp	x23, x0, [sp, 224]	// _747, allresults.D.44829._M_impl._M_end_of_storage, allresults.D.44829._M_impl._M_finish
	cmp	x23, x0	// _747, allresults.D.44829._M_impl._M_end_of_storage
	beq	.L4172		//,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldp	x0, x25, [sp, 192]	// MEM[(long long unsigned int * *)&results], MEM[(long long unsigned int * *)&results + 8B], MEM[(long long unsigned int * *)&results]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [x23]	//,, MEM[(struct _Vector_impl *)_747]._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x26, x23	// pretmp_574, _747
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	str	xzr, [x23, 16]	//, MEM[(struct _Vector_impl *)_747]._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x3, 0	// _766,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x25, x25, x0	// _753, MEM[(long long unsigned int * *)&results + 8B], MEM[(long long unsigned int * *)&results]
	asr	x0, x25, 3	// tmp1138, _753,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	cbz	x0, .L4174	// tmp1138,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	mov	x1, 2305843009213693951	// tmp1139,
	add	x26, sp, 216	// tmp1262,,
	cmp	x0, x1	// tmp1138, tmp1139
	bhi	.L4435		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x25	//, _753
	bl	_Znwm		//
	ldr	x26, [sp, 224]	// pretmp_574, allresults.D.44829._M_impl._M_finish
	mov	x3, x0	// _766,
.L4174:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:312: 	this->_M_impl._M_finish = this->_M_impl._M_start;
	stp	x3, x3, [x23]	// _766, _766, MEM[(struct _Vector_base *)_747]._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	add	x25, x3, x25	// tmp1141, _766, _753
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:463: 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
	ldp	x1, x0, [sp, 192]	// _759, _760, MEM[(long long unsigned int * *)&results]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	str	x25, [x23, 16]	// tmp1141, MEM[(struct _Vector_base *)_747]._M_impl._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	cmp	x1, x0	// _759, _760
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:366: 	  const ptrdiff_t _Num = __last - __first;
	sub	x25, x0, x1	// _761, _760, _759
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	beq	.L4177		//,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:368: 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
	mov	x0, x3	//, _766
	mov	x2, x25	//, _761
	bl	memmove		//
	mov	x3, x0	// _766,
.L4177:
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:369: 	  return __result + _Num;
	add	x3, x3, x25	// tmp1142, _766, _761
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:462: 	this->_M_impl._M_finish =
	str	x3, [x23, 8]	// tmp1142, _747->D.43930._M_impl._M_finish
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1081: 	    ++this->_M_impl._M_finish;
	add	x26, x26, 24	// tmp1143, pretmp_574,
	str	x26, [sp, 224]	// tmp1143, allresults.D.44829._M_impl._M_finish
.L4178:
// bitmapdecoding.cpp:223:   for (uint32_t i = 0; i < iterations; i++) {
	subs	w21, w21, #1	// ivtmp_1562, ivtmp_1562,
	bne	.L4027		//,
// bitmapdecoding.cpp:232:   if (bigarray[0] == 0)
	ldr	w0, [x20]	//, *_71
	cbz	w0, .L4436	// *_71,
.L4179:
// bitmapdecoding.cpp:234:   printf("matches = %u words = %zu 1-bit density %4.3f %% \n", matches,
	ldr	d0, [sp, 128]	// wordcount.171_9, wordcount
	adrp	x0, .LC23	// tmp1384,
	ldr	w3, [sp, 124]	//, matches
	add	x26, sp, 216	// tmp1262,,
	ldr	d2, [x0, #:lo12:.LC23]	// tmp1383,
	adrp	x0, .LC16	// tmp1156,
	fmov	x2, d0	//, wordcount.171_9
// bitmapdecoding.cpp:235:          wordcount, double(matches) / (64 * wordcount) * 100);
	shl	d0, d0, 6	// tmp1150, wordcount.171_9,
// bitmapdecoding.cpp:235:          wordcount, double(matches) / (64 * wordcount) * 100);
	ucvtf	d1, w3	// tmp1149, matches.170_8
// bitmapdecoding.cpp:234:   printf("matches = %u words = %zu 1-bit density %4.3f %% \n", matches,
	add	x0, x0, :lo12:.LC16	//, tmp1156,
	mov	w1, w3	//, matches.170_8
// bitmapdecoding.cpp:235:          wordcount, double(matches) / (64 * wordcount) * 100);
	ucvtf	d0, d0	// tmp1151, tmp1150
	fdiv	d0, d1, d0	// tmp1152, tmp1149, tmp1151
// bitmapdecoding.cpp:234:   printf("matches = %u words = %zu 1-bit density %4.3f %% \n", matches,
	fmul	d0, d0, d2	//, tmp1152, tmp1154
	bl	printf		//
// bitmapdecoding.cpp:236:   printf("bytes per index = %4.3f \n", wordcount * 64.0 / matches);
	ldr	d0, [sp, 128]	// wordcount, wordcount
	mov	x0, 4634204016564240384	// tmp1312,
// bitmapdecoding.cpp:236:   printf("bytes per index = %4.3f \n", wordcount * 64.0 / matches);
	ldr	w1, [sp, 124]	//, matches
// bitmapdecoding.cpp:236:   printf("bytes per index = %4.3f \n", wordcount * 64.0 / matches);
	fmov	d2, x0	// tmp1160, tmp1312
	add	x26, sp, 216	// tmp1262,,
// bitmapdecoding.cpp:236:   printf("bytes per index = %4.3f \n", wordcount * 64.0 / matches);
	adrp	x0, .LC17	// tmp1165,
// bitmapdecoding.cpp:236:   printf("bytes per index = %4.3f \n", wordcount * 64.0 / matches);
	ucvtf	d0, d0	// tmp1157, wordcount
// bitmapdecoding.cpp:236:   printf("bytes per index = %4.3f \n", wordcount * 64.0 / matches);
	add	x0, x0, :lo12:.LC17	//, tmp1165,
	ucvtf	d1, w1	// tmp1161, matches
// bitmapdecoding.cpp:236:   printf("bytes per index = %4.3f \n", wordcount * 64.0 / matches);
	fmul	d0, d0, d2	// tmp1159, tmp1157, tmp1160
// bitmapdecoding.cpp:236:   printf("bytes per index = %4.3f \n", wordcount * 64.0 / matches);
	fdiv	d0, d0, d1	//, tmp1159, tmp1161
	bl	printf		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:460: 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
	ldp	x23, x24, [sp, 216]	// pretmp_800, prephitmp_756, MEM[(struct vector * *)&allresults]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	mov	x1, -6148914691236517206	// tmp1168,
	movk	x1, 0xaaab, lsl 0	// tmp1168,,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [sp, 448]	//,, MEM[(struct _Vector_impl *)&D.50605]._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x26, 0	// __first,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	str	xzr, [sp, 464]	//, MEM[(struct _Vector_impl *)&D.50605]._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x21, x24, x23	// _770, prephitmp_756, pretmp_800
	asr	x0, x21, 3	// tmp1166, _770,
	mul	x0, x0, x1	// tmp1167, tmp1166, tmp1168
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	cbz	x0, .L4181	// tmp1167,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	mov	x1, -6148914691236517206	// tmp1169,
	add	x26, sp, 216	// tmp1262,,
	movk	x1, 0xaaa, lsl 48	// tmp1169,,
	cmp	x0, x1	// tmp1167, tmp1169
	bhi	.L4437		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x21	//, _770
	bl	_Znwm		//
.LEHE232:
	ldp	x23, x24, [sp, 216]	// pretmp_800, prephitmp_756, MEM[(struct vector * *)&allresults]
	mov	x26, x0	// __first,
.L4181:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	add	x21, x26, x21	// tmp1171, __first, _770
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:312: 	this->_M_impl._M_finish = this->_M_impl._M_start;
	stp	x26, x26, [sp, 448]	// __first, __first, MEM[(struct _Vector_base *)&D.50605]._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	cmp	x24, x23	// prephitmp_756, pretmp_800
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	str	x21, [sp, 464]	// tmp1171, MEM[(struct _Vector_base *)&D.50605]._M_impl._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:79: 	  _ForwardIterator __cur = __result;
	mov	x21, x26	// __cur, __first
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	beq	.L4183		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	mov	x25, 2305843009213693951	// tmp1296,
	.p2align 3
.L4189:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldp	x0, x22, [x23]	// MEM[base: _1534, offset: 0B], MEM[base: _1534, offset: 8B], MEM[base: _1534, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [x21]	//,, MEM[base: __cur_1440, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x3, 0	// _810,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	str	xzr, [x21, 16]	//, MEM[base: __cur_1440, offset: 16B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x22, x22, x0	// _797, MEM[base: _1534, offset: 8B], MEM[base: _1534, offset: 0B]
	asr	x0, x22, 3	// tmp1174, _797,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	cbz	x0, .L4185	// tmp1174,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	cmp	x0, x25	// tmp1174, tmp1296
	bhi	.L4438		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x22	//, _797
.LEHB233:
	bl	_Znwm		//
.LEHE233:
	mov	x3, x0	// _810,
.L4185:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	add	x22, x3, x22	// tmp1177, _810, _797
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:312: 	this->_M_impl._M_finish = this->_M_impl._M_start;
	stp	x3, x3, [x21]	// _810, _810, MEM[base: __cur_1440, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	str	x22, [x21, 16]	// tmp1177, MEM[base: __cur_1440, offset: 16B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:463: 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
	ldp	x1, x0, [x23]	// _803, _804, MEM[base: _1534, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	cmp	x1, x0	// _803, _804
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:366: 	  const ptrdiff_t _Num = __last - __first;
	sub	x22, x0, x1	// _805, _804, _803
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	beq	.L4188		//,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:368: 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
	mov	x0, x3	//, _810
	mov	x2, x22	//, _805
	bl	memmove		//
	mov	x3, x0	// _810,
.L4188:
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:369: 	  return __result + _Num;
	add	x3, x3, x22	// tmp1178, _810, _805
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:462: 	this->_M_impl._M_finish =
	str	x3, [x21, 8]	// tmp1178, MEM[base: __cur_1440, offset: 8B]
	add	x23, x23, 24	// ivtmp.1543, ivtmp.1543,
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	add	x21, x21, 24	// __cur, __cur,
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	cmp	x24, x23	// prephitmp_756, ivtmp.1543
	bne	.L4189		//,
.L4183:
// bitmapdecoding.cpp:237:   std::vector<unsigned long long> mins = compute_mins(allresults);
	add	x23, sp, 448	// tmp1268,,
	add	x8, sp, 240	//,,
	mov	x0, x23	//, tmp1268
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:462: 	this->_M_impl._M_finish =
	str	x21, [sp, 456]	// __cur, D.50605.D.44829._M_impl._M_finish
.LEHB234:
// bitmapdecoding.cpp:237:   std::vector<unsigned long long> mins = compute_mins(allresults);
	bl	_Z12compute_minsSt6vectorIS_IySaIyEESaIS1_EE		//
.LEHE234:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldp	x21, x22, [sp, 448]	// __first, prephitmp_730, D.50605.D.44829._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x21, x22	// __first, prephitmp_730
	beq	.L4197		//,
	.p2align 3
.L4199:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [x21]	// _827, MEM[base: __first_226, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4198	// _827,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4198:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	add	x21, x21, 24	// __first, __first,
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x22, x21	// prephitmp_730, __first
	bne	.L4199		//,
	ldr	x22, [sp, 448]	// prephitmp_730, MEM[(struct _Vector_base *)&D.50605]._M_impl._M_start
.L4197:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x22, .L4200	// prephitmp_730,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x22	//, prephitmp_730
	bl	_ZdlPv		//
.L4200:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:460: 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
	ldp	x24, x25, [sp, 216]	// pretmp_735, pretmp_737, MEM[(struct vector * *)&allresults]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	mov	x1, -6148914691236517206	// tmp1188,
	movk	x1, 0xaaab, lsl 0	// tmp1188,,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [sp, 448]	//,, MEM[(struct _Vector_impl *)&D.50608]._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x27, 0	// __first,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	str	xzr, [sp, 464]	//, MEM[(struct _Vector_impl *)&D.50608]._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x21, x25, x24	// _814, pretmp_737, pretmp_735
	asr	x0, x21, 3	// tmp1186, _814,
	mul	x0, x0, x1	// tmp1187, tmp1186, tmp1188
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	cbz	x0, .L4202	// tmp1187,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	mov	x1, -6148914691236517206	// tmp1189,
	movk	x1, 0xaaa, lsl 48	// tmp1189,,
	cmp	x0, x1	// tmp1187, tmp1189
	bhi	.L4439		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x21	//, _814
.LEHB235:
	bl	_Znwm		//
.LEHE235:
	ldp	x24, x25, [sp, 216]	// pretmp_735, pretmp_737, MEM[(struct vector * *)&allresults]
	mov	x27, x0	// __first,
.L4202:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	add	x21, x27, x21	// tmp1191, __first, _814
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:312: 	this->_M_impl._M_finish = this->_M_impl._M_start;
	stp	x27, x27, [sp, 448]	// __first, __first, MEM[(struct _Vector_base *)&D.50608]._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	cmp	x24, x25	// pretmp_735, pretmp_737
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	str	x21, [sp, 464]	// tmp1191, MEM[(struct _Vector_base *)&D.50608]._M_impl._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:79: 	  _ForwardIterator __cur = __result;
	mov	x21, x27	// __cur, __first
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	beq	.L4204		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	mov	x26, 2305843009213693951	// tmp1294,
	.p2align 3
.L4210:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldp	x0, x22, [x24]	// MEM[base: _1558, offset: 0B], MEM[base: _1558, offset: 8B], MEM[base: _1558, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [x21]	//,, MEM[base: __cur_256, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x3, 0	// _860,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	str	xzr, [x21, 16]	//, MEM[base: __cur_256, offset: 16B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x22, x22, x0	// _847, MEM[base: _1558, offset: 8B], MEM[base: _1558, offset: 0B]
	asr	x0, x22, 3	// tmp1194, _847,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	cbz	x0, .L4206	// tmp1194,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	cmp	x0, x26	// tmp1194, tmp1294
	bhi	.L4440		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x22	//, _847
.LEHB236:
	bl	_Znwm		//
.LEHE236:
	mov	x3, x0	// _860,
.L4206:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	add	x22, x3, x22	// tmp1197, _860, _847
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:312: 	this->_M_impl._M_finish = this->_M_impl._M_start;
	stp	x3, x3, [x21]	// _860, _860, MEM[base: __cur_256, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	str	x22, [x21, 16]	// tmp1197, MEM[base: __cur_256, offset: 16B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:463: 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
	ldp	x1, x0, [x24]	// _853, _854, MEM[base: _1558, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	cmp	x1, x0	// _853, _854
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:366: 	  const ptrdiff_t _Num = __last - __first;
	sub	x22, x0, x1	// _855, _854, _853
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	beq	.L4209		//,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:368: 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
	mov	x0, x3	//, _860
	mov	x2, x22	//, _855
	bl	memmove		//
	mov	x3, x0	// _860,
.L4209:
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:369: 	  return __result + _Num;
	add	x3, x3, x22	// tmp1198, _860, _855
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:462: 	this->_M_impl._M_finish =
	str	x3, [x21, 8]	// tmp1198, MEM[base: __cur_256, offset: 8B]
	add	x24, x24, 24	// ivtmp.1527, ivtmp.1527,
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	add	x21, x21, 24	// __cur, __cur,
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	cmp	x25, x24	// pretmp_737, ivtmp.1527
	bne	.L4210		//,
.L4204:
// bitmapdecoding.cpp:238:   std::vector<double> avg = compute_averages(allresults);
	add	x8, sp, 264	//,,
	mov	x0, x23	//, tmp1268
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:462: 	this->_M_impl._M_finish =
	str	x21, [sp, 456]	// __cur, D.50608.D.44829._M_impl._M_finish
.LEHB237:
// bitmapdecoding.cpp:238:   std::vector<double> avg = compute_averages(allresults);
	bl	_Z16compute_averagesSt6vectorIS_IySaIyEESaIS1_EE		//
.LEHE237:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldp	x21, x22, [sp, 448]	// __first, prephitmp_605, D.50608.D.44829._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x21, x22	// __first, prephitmp_605
	beq	.L4219		//,
	.p2align 3
.L4221:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [x21]	// _865, MEM[base: __first_252, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4220	// _865,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4220:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	add	x21, x21, 24	// __first, __first,
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x22, x21	// prephitmp_605, __first
	bne	.L4221		//,
	ldr	x22, [sp, 448]	// prephitmp_605, MEM[(struct _Vector_base *)&D.50608]._M_impl._M_start
.L4219:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x22, .L4222	// prephitmp_605,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x22	//, prephitmp_605
	bl	_ZdlPv		//
.L4222:
// bitmapdecoding.cpp:243:          double(mins[1]) / mins[0], double(mins[0]) / matches,
	ldr	x1, [sp, 240]	// _138, MEM[(long long unsigned int * *)&mins]
// bitmapdecoding.cpp:239:   printf("instructions per cycle %4.2f, cycles per value set:  "
	adrp	x0, .LC18	// tmp1218,
	ldr	d4, [sp, 128]	// wordcount, wordcount
	add	x0, x0, :lo12:.LC18	//, tmp1218,
	ldp	d1, d0, [x1]	// MEM[(value_type &)_138], MEM[(value_type &)_138 + 8], MEM[(value_type &)_138]
	ldr	w1, [sp, 124]	//, matches
	ucvtf	d4, d4	// _31, wordcount
	ucvtf	d1, d1	// _24, MEM[(value_type &)_138]
	ucvtf	d0, d0	// _22, MEM[(value_type &)_138 + 8]
	ucvtf	d5, w1	// _27, matches
	fdiv	d3, d1, d4	//, _24, _31
	fdiv	d2, d0, d5	//, _22, _27
	fdiv	d4, d0, d4	//, _22, _31
	fdiv	d0, d0, d1	//, _22, _24
	fdiv	d1, d1, d5	//, _24, _27
.LEHB238:
	bl	printf		//
// bitmapdecoding.cpp:247:          double(mins[0]) / (64 * wordcount),
	ldr	d0, [sp, 128]	// wordcount, wordcount
// bitmapdecoding.cpp:246:   printf(" cycles per input byte %4.2f instructions per input byte %4.2f \n",
	adrp	x0, .LC19	// tmp1228,
// bitmapdecoding.cpp:247:          double(mins[0]) / (64 * wordcount),
	ldr	x1, [sp, 240]	// _139, MEM[(long long unsigned int * *)&mins]
// bitmapdecoding.cpp:246:   printf(" cycles per input byte %4.2f instructions per input byte %4.2f \n",
	add	x0, x0, :lo12:.LC19	//, tmp1228,
// bitmapdecoding.cpp:247:          double(mins[0]) / (64 * wordcount),
	shl	d0, d0, 6	// tmp1219, wordcount,
// bitmapdecoding.cpp:246:   printf(" cycles per input byte %4.2f instructions per input byte %4.2f \n",
	ldp	d2, d1, [x1]	// MEM[(value_type &)_139], MEM[(value_type &)_139 + 8], MEM[(value_type &)_139]
	ucvtf	d0, d0	// _38, tmp1219
	ucvtf	d2, d2	// tmp1224, MEM[(value_type &)_139]
	ucvtf	d1, d1	// tmp1221, MEM[(value_type &)_139 + 8]
	fdiv	d1, d1, d0	//, tmp1221, _38
	fdiv	d0, d2, d0	//, tmp1224, _38
	bl	printf		//
// bitmapdecoding.cpp:250:   printf("min: %8llu cycles, %8llu instructions, \t%8llu branch mis., %8llu "
	ldr	x5, [sp, 240]	// _140, MEM[(long long unsigned int * *)&mins]
	adrp	x0, .LC20	// tmp1235,
	add	x0, x0, :lo12:.LC20	//, tmp1235,
	ldp	x1, x2, [x5]	//,, MEM[(value_type &)_140]
	ldp	x3, x4, [x5, 16]	//,, MEM[(value_type &)_140 + 16]
	ldr	x5, [x5, 32]	//, MEM[(value_type &)_140 + 32]
	bl	printf		//
// bitmapdecoding.cpp:253:   printf("avg: %8.1f cycles, %8.1f instructions, \t%8.1f branch mis., %8.1f "
	ldr	x1, [sp, 264]	// _141, MEM[(double * *)&avg]
	adrp	x0, .LC21	// tmp1242,
	add	x0, x0, :lo12:.LC21	//, tmp1242,
	ldp	d0, d1, [x1]	//,, MEM[(value_type &)_141]
	ldp	d2, d3, [x1, 16]	//,, MEM[(value_type &)_141 + 16]
	ldr	d4, [x1, 32]	//, MEM[(value_type &)_141 + 32]
	bl	printf		//
// bitmapdecoding.cpp:256:   printf("\n");
	mov	w0, 10	//,
	bl	putchar		//
.LEHE238:
// bitmapdecoding.cpp:257:   delete[] array;
	cbz	x19, .L4223	// _67,
// bitmapdecoding.cpp:257:   delete[] array;
	mov	x0, x19	//, _67
	bl	_ZdaPv		//
.L4223:
// bitmapdecoding.cpp:258:   delete[] bigarray;
	mov	x0, x20	//, _71
	bl	_ZdaPv		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 264]	// _147, avg.D.45803._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4224	// _147,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4224:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 240]	// _146, mins.D.43930._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4225	// _146,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4225:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldp	x19, x20, [sp, 216]	// __first, prephitmp_575, allresults.D.44829._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x19, x20	// __first, prephitmp_575
	beq	.L4226		//,
	.p2align 3
.L4228:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [x19]	// _871, MEM[base: __first_1541, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4227	// _871,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4227:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	add	x19, x19, 24	// __first, __first,
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x20, x19	// prephitmp_575, __first
	bne	.L4228		//,
	ldr	x20, [sp, 216]	// prephitmp_575, MEM[(struct _Vector_base *)&allresults]._M_impl._M_start
.L4226:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x20, .L4229	// prephitmp_575,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x20	//, prephitmp_575
	bl	_ZdlPv		//
.L4229:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 192]	// _145, results.D.43930._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4230	// _145,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4230:
// linux-perf-events.h:59:   ~LinuxEvents() { close(fd); }
	ldr	w0, [sp, 480]	//, unified.fd
	bl	close		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 632]	// _875, MEM[(struct vector *)&unified + 152B].D.42087._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4231	// _875,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4231:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 608]	// _876, MEM[(struct vector *)&unified + 128B].D.42087._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4232	// _876,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4232:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 168]	// _144, evts.D.42966._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L3970	// _144,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3970:
// bitmapdecoding.cpp:259: }
	ldp	x29, x30, [sp]	//,,
	ldp	x19, x20, [sp, 16]	//,,
	ldp	x21, x22, [sp, 32]	//,,
	ldp	x23, x24, [sp, 48]	//,,
	ldp	x25, x26, [sp, 64]	//,,
	ldp	x27, x28, [sp, 80]	//,,
	add	sp, sp, 656	//,,
	.cfi_remember_state
	.cfi_restore 29
	.cfi_restore 30
	.cfi_restore 27
	.cfi_restore 28
	.cfi_restore 25
	.cfi_restore 26
	.cfi_restore 23
	.cfi_restore 24
	.cfi_restore 21
	.cfi_restore 22
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
	ret	
	.p2align 2
.L4433:
	.cfi_restore_state
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x25, sp, 352	// tmp1265,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x1, .LC13	// tmp956,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x4, x25, 16	// tmp954, tmp1265,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x2, .LC13+29	// tmp958,
	mov	x0, x25	//, tmp1265
	add	x1, x1, :lo12:.LC13	//, tmp956,
	mov	w3, 0	//,
	add	x2, x2, :lo12:.LC13+29	//, tmp958,
	add	x26, sp, 216	// tmp1369,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	str	x4, [sp, 352]	// tmp954, MEM[(struct _Alloc_hider *)&D.65698]._M_p
.LEHB239:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
// linux-perf-events.h:88:     if (working)
	ldrb	w0, [sp, 484]	// unified.working, unified.working
	ldr	x23, [sp, 352]	// prephitmp_663, MEM[(const struct basic_string *)&D.65698]
	cbnz	w0, .L4441	// unified.working,
.L4103:
// linux-perf-events.h:90:     working = false;
	strb	wzr, [sp, 484]	//, unified.working
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x25, x25, 16	// tmp1024, tmp1265,
	cmp	x23, x25	// prephitmp_663, tmp1024
	beq	.L4097		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x23	//, prephitmp_663
	bl	_ZdlPv		//
	b	.L4097		//
	.p2align 2
.L4431:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x1, .LC11	// tmp777,
	adrp	x2, .LC11+27	// tmp779,
	add	x1, x1, :lo12:.LC11	//, tmp777,
	add	x2, x2, :lo12:.LC11+27	//, tmp779,
	mov	w3, 0	//,
	add	x26, sp, 216	// tmp1357,,
	add	x0, sp, 384	// tmp1358,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	str	x22, [sp, 384]	// tmp1300, MEM[(struct _Alloc_hider *)&D.65577]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
// linux-perf-events.h:88:     if (working)
	ldrb	w0, [sp, 484]	// unified.working, unified.working
	ldr	x23, [sp, 384]	// pretmp_527, MEM[(const struct basic_string *)&D.65577]
	cbnz	w0, .L4442	// unified.working,
.L4030:
// linux-perf-events.h:90:     working = false;
	strb	wzr, [sp, 484]	//, unified.working
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x23, x22	// pretmp_527, tmp1300
	beq	.L4029		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x23	//, pretmp_527
	bl	_ZdlPv		//
// linux-perf-events.h:66:     if (ioctl(fd, PERF_EVENT_IOC_ENABLE, PERF_IOC_FLAG_GROUP) == -1) {
	ldr	w0, [sp, 480]	//, unified.fd
	mov	w2, 1	//,
	mov	x1, 9216	//,
	bl	ioctl		//
// linux-perf-events.h:66:     if (ioctl(fd, PERF_EVENT_IOC_ENABLE, PERF_IOC_FLAG_GROUP) == -1) {
	cmn	w0, #1	//,
	bne	.L4062		//,
	.p2align 3
.L4432:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x1, .LC12	// tmp862,
	adrp	x2, .LC12+28	// tmp864,
	add	x1, x1, :lo12:.LC12	//, tmp862,
	add	x2, x2, :lo12:.LC12+28	//, tmp864,
	mov	w3, 0	//,
	add	x26, sp, 216	// tmp1364,,
	add	x0, sp, 384	// tmp1365,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	str	x22, [sp, 384]	// tmp1300, MEM[(struct _Alloc_hider *)&D.65576]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
// linux-perf-events.h:88:     if (working)
	ldrb	w0, [sp, 484]	// unified.working, unified.working
	ldr	x23, [sp, 384]	// prephitmp_459, MEM[(const struct basic_string *)&D.65576]
	cbnz	w0, .L4443	// unified.working,
.L4063:
// linux-perf-events.h:90:     working = false;
	strb	wzr, [sp, 484]	//, unified.working
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x23, x22	// prephitmp_459, tmp1300
	beq	.L4062		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x23	//, prephitmp_459
	bl	_ZdlPv		//
	b	.L4062		//
	.p2align 2
.L4172:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1085: 	  _M_realloc_insert(end(), __x);
	add	x26, sp, 216	// tmp1381,,
	mov	x1, x23	//, _747
	add	x2, sp, 192	//,,
	mov	x0, x26	// tmp1382, tmp1381
	bl	_ZNSt6vectorIS_IySaIyEESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_		//
	b	.L4178		//
	.p2align 2
.L4434:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x25, sp, 352	// tmp1265,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x1, .LC14	// tmp1043,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x4, x25, 16	// tmp1041, tmp1265,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x2, .LC14+4	// tmp1045,
	mov	x0, x25	//, tmp1265
	add	x1, x1, :lo12:.LC14	//, tmp1043,
	mov	w3, 0	//,
	add	x2, x2, :lo12:.LC14+4	//, tmp1045,
	add	x26, sp, 216	// tmp1376,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	str	x4, [sp, 352]	// tmp1041, MEM[(struct _Alloc_hider *)&D.65697]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE239:
// linux-perf-events.h:88:     if (working)
	ldrb	w0, [sp, 484]	// unified.working, unified.working
	ldr	x23, [sp, 352]	// prephitmp_648, MEM[(const struct basic_string *)&D.65697]
	cbnz	w0, .L4444	// unified.working,
.L4136:
// linux-perf-events.h:90:     working = false;
	strb	wzr, [sp, 484]	//, unified.working
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x25, x25, 16	// tmp1111, tmp1265,
	cmp	x23, x25	// prephitmp_648, tmp1111
	beq	.L4135		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x23	//, prephitmp_648
	bl	_ZdlPv		//
	b	.L4135		//
	.p2align 2
.L4441:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:440:       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
	ldr	x26, [sp, 360]	// _593, MEM[(const struct basic_string *)&D.65698 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	str	x22, [sp, 384]	// tmp1300, MEM[(struct _Alloc_hider *)&D.65710]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:211: 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
	cmn	x23, x26	// prephitmp_663, _593
	ccmp	x23, 0, 0, ne	// prephitmp_663,,,
	beq	.L4445		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:215: 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
	str	x26, [sp, 160]	// _593, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:217: 	if (__dnew > size_type(_S_local_capacity))
	cmp	x26, 15	// _593,
	bhi	.L4446		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:337: 	if (__n == 1)
	cmp	x26, 1	// _593,
	bne	.L4107		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:338: 	  traits_type::assign(*__d, *__s);
	ldrb	w1, [x23]	// _601, MEM[(const char_type &)pretmp_1178]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	mov	x0, x22	// pretmp_635, tmp1300
	strb	w1, [sp, 400]	// _601, MEM[(char_type &)&D.65710 + 16]
.L4108:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x26, [sp, 392]	// _593, MEM[(size_type *)&D.65710 + 8B]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x0, x26]	//, MEM[(char_type &)_604]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	mov	x0, 9223372036854775807	// tmp979,
	ldr	x1, [sp, 392]	// MEM[(const struct basic_string *)&D.65710 + 8B], MEM[(const struct basic_string *)&D.65710 + 8B]
	sub	x0, x0, x1	// tmp978, tmp979, MEM[(const struct basic_string *)&D.65710 + 8B]
	cmp	x0, 1	// tmp978,
	bls	.L4447		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1268: 	return _M_append(__s, __n);
	adrp	x1, .LC9	// tmp984,
	mov	x2, 2	//,
	add	x1, x1, :lo12:.LC9	//, tmp984,
	add	x0, sp, 384	// tmp1371,,
.LEHB240:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE240:
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	__errno_location		//
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	ldr	w0, [x0]	//, *_578
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x26, sp, 416	// tmp1267,,
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	strerror		//
	mov	x23, x0	// _580,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x1, x26, 16	// tmp988, tmp1267,
	str	x1, [sp, 416]	// tmp988, MEM[(struct _Alloc_hider *)&D.65709]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	mov	x2, -1	// iftmp.41_611,
	cbz	x0, .L4111	// _580,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:322: 	return __builtin_strlen(__s);
	bl	strlen		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	add	x2, x23, x0	// iftmp.41_611, _580,
.L4111:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	mov	x1, x23	//, _580
	mov	w3, 0	//,
	mov	x0, x26	//, tmp1267
.LEHB241:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE241:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x3, x4, [sp, 384]	// _616, _613, MEM[(const struct basic_string *)&D.65710]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	mov	x6, 15	// tmp1286,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x1, x2, [sp, 416]	// pretmp_621, _614, MEM[(const struct basic_string *)&D.65709]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 400]	// D.65710.D.21280._M_allocated_capacity, D.65710.D.21280._M_allocated_capacity
	cmp	x3, x22	// _616, tmp1300
	csel	x0, x0, x6, ne	// iftmp.59_618, D.65710.D.21280._M_allocated_capacity, tmp1286,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	add	x5, x4, x2	// __size, _613, _614
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_618
	bls	.L4116		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 432]	// D.65709.D.21280._M_allocated_capacity, D.65709.D.21280._M_allocated_capacity
	add	x7, x26, 16	// tmp1000, tmp1267,
	cmp	x1, x7	// pretmp_621, tmp1000
	csel	x0, x0, x6, ne	// iftmp.59_622, D.65709.D.21280._M_allocated_capacity, tmp1286,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_622
	bls	.L4448		//,
.L4116:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	add	x0, sp, 384	// tmp1373,,
.LEHB242:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE242:
.L4415:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x23, sp, 448	// tmp1268,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x1, x0	// _626,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x2, x23, 16	// tmp1004, tmp1268,
	str	x2, [sp, 448]	// tmp1004, MEM[(struct _Alloc_hider *)&D.65711]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x2, [x0], 16	// _629, MEM[(const struct basic_string *)iftmp.58_628]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:544: 	if (__str._M_is_local())
	cmp	x2, x0	// _629, _630
	beq	.L4449		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x2, [sp, 448]	// _629, MEM[(char * *)&D.65711]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:552: 	    _M_capacity(__str._M_allocated_capacity);
	ldr	x2, [x1, 16]	// _632, MEM[(struct basic_string &)iftmp.58_628].D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x2, [sp, 464]	// _632, MEM[(size_type *)&D.65711 + 16B]
.L4120:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:558: 	_M_length(__str.length());
	ldr	x2, [x1, 8]	// _633, MEM[(const struct basic_string *)iftmp.58_628 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x2, [sp, 456]	// _633, MEM[(size_type *)&D.65711 + 8B]
	stp	x0, xzr, [x1]	// _630,, MEM[(char * *)iftmp.58_628]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	adrp	x0, _ZSt4cerr	// tmp1008,
	add	x0, x0, :lo12:_ZSt4cerr	//, tmp1008,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, 16]	//, MEM[(char_type &)iftmp.58_628 + 16]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	ldp	x1, x2, [sp, 448]	//,, MEM[(const struct basic_string *)&D.65711]
.LEHB243:
	bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l		//
	mov	x28, x0	// _584,
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	ldr	x0, [x0]	// _584->_vptr.basic_ostream, _584->_vptr.basic_ostream
	ldr	x0, [x0, -24]	// MEM[(long int *)_638 + -24B], MEM[(long int *)_638 + -24B]
	add	x0, x28, x0	// tmp1011, _584, MEM[(long int *)_638 + -24B]
	ldr	x27, [x0, 240]	// _642, MEM[(const struct __ctype_type * *)_641 + 240B]
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:49:       if (!__f)
	cbz	x27, .L4450	// _642,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:874: 	if (_M_widen_ok)
	ldrb	w0, [x27, 56]	// MEM[(const struct ctype *)_642]._M_widen_ok, MEM[(const struct ctype *)_642]._M_widen_ok
	cbz	w0, .L4122	// MEM[(const struct ctype *)_642]._M_widen_ok,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:875: 	  return _M_widen[static_cast<unsigned char>(__c)];
	ldrb	w1, [x27, 67]	// _649, MEM[(const struct ctype *)_642]._M_widen
.L4123:
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	mov	x0, x28	//, _584
	bl	_ZNSo3putEc		//
// /usr/local/include/c++/8.3.0/ostream:613:     { return __os.flush(); }
	bl	_ZNSo5flushEv		//
.LEHE243:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 448]	// _585, MEM[(const struct basic_string *)&D.65711]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp1018, tmp1268,
	cmp	x0, x23	// _585, tmp1018
	beq	.L4124		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4124:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _586, MEM[(const struct basic_string *)&D.65709]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x26, x26, 16	// tmp1020, tmp1267,
	cmp	x0, x26	// _586, tmp1020
	beq	.L4125		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4125:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 384]	// _587, MEM[(const struct basic_string *)&D.65710]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x0, x22	// _587, tmp1300
	beq	.L4126		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4126:
	ldr	x23, [sp, 352]	// prephitmp_663, MEM[(const struct basic_string *)&D.65698]
	b	.L4103		//
	.p2align 2
.L4442:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:440:       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
	ldr	x25, [sp, 392]	// _390, MEM[(const struct basic_string *)&D.65577 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	str	x24, [sp, 320]	// tmp1303, MEM[(struct _Alloc_hider *)&D.65589]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:211: 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
	cmn	x23, x25	// pretmp_527, _390
	ccmp	x23, 0, 0, ne	// pretmp_527,,,
	beq	.L4451		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:215: 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
	str	x25, [sp, 144]	// _390, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:217: 	if (__dnew > size_type(_S_local_capacity))
	cmp	x25, 15	// _390,
	bhi	.L4452		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:337: 	if (__n == 1)
	cmp	x25, 1	// _390,
	bne	.L4034		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:338: 	  traits_type::assign(*__d, *__s);
	ldrb	w1, [x23]	// _398, MEM[(const char_type &)pretmp_527]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	mov	x0, x24	// prephitmp_532, tmp1303
	strb	w1, [sp, 336]	// _398, MEM[(char_type &)&D.65589 + 16]
.L4035:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x25, [sp, 328]	// _390, MEM[(size_type *)&D.65589 + 8B]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x0, x25]	//, MEM[(char_type &)_401]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	mov	x0, 9223372036854775807	// tmp800,
	ldr	x1, [sp, 328]	// MEM[(const struct basic_string *)&D.65589 + 8B], MEM[(const struct basic_string *)&D.65589 + 8B]
	sub	x0, x0, x1	// tmp799, tmp800, MEM[(const struct basic_string *)&D.65589 + 8B]
	cmp	x0, 1	// tmp799,
	bls	.L4453		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1268: 	return _M_append(__s, __n);
	adrp	x1, .LC9	// tmp805,
	mov	x2, 2	//,
	add	x1, x1, :lo12:.LC9	//, tmp805,
	add	x0, sp, 320	// tmp1360,,
.LEHB244:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE244:
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	__errno_location		//
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	ldr	w0, [x0]	//, *_375
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x26, sp, 416	// tmp1267,,
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	strerror		//
	mov	x23, x0	// _377,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x1, x26, 16	// tmp809, tmp1267,
	str	x1, [sp, 416]	// tmp809, MEM[(struct _Alloc_hider *)&D.65588]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	mov	x2, -1	// iftmp.41_408,
	cbz	x0, .L4038	// _377,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:322: 	return __builtin_strlen(__s);
	bl	strlen		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	add	x2, x23, x0	// iftmp.41_408, _377,
.L4038:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	mov	x1, x23	//, _377
	mov	w3, 0	//,
	mov	x0, x26	//, tmp1267
.LEHB245:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE245:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x3, x4, [sp, 320]	// _413, _410, MEM[(const struct basic_string *)&D.65589]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	mov	x6, 15	// tmp1278,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x1, x2, [sp, 416]	// pretmp_1188, _411, MEM[(const struct basic_string *)&D.65588]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 336]	// D.65589.D.21280._M_allocated_capacity, D.65589.D.21280._M_allocated_capacity
	cmp	x3, x24	// _413, tmp1303
	csel	x0, x0, x6, ne	// iftmp.59_415, D.65589.D.21280._M_allocated_capacity, tmp1278,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	add	x5, x4, x2	// __size, _410, _411
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_415
	bls	.L4043		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 432]	// D.65588.D.21280._M_allocated_capacity, D.65588.D.21280._M_allocated_capacity
	add	x7, x26, 16	// tmp821, tmp1267,
	cmp	x1, x7	// pretmp_1188, tmp821
	csel	x0, x0, x6, ne	// iftmp.59_419, D.65588.D.21280._M_allocated_capacity, tmp1278,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_419
	bls	.L4454		//,
.L4043:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	add	x0, sp, 320	// tmp1362,,
.LEHB246:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE246:
.L4413:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x23, sp, 448	// tmp1268,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x1, x0	// _423,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x2, x23, 16	// tmp825, tmp1268,
	str	x2, [sp, 448]	// tmp825, MEM[(struct _Alloc_hider *)&D.65590]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x2, [x0], 16	// _426, MEM[(const struct basic_string *)iftmp.58_425]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:544: 	if (__str._M_is_local())
	cmp	x2, x0	// _426, _427
	beq	.L4455		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x2, [sp, 448]	// _426, MEM[(char * *)&D.65590]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:552: 	    _M_capacity(__str._M_allocated_capacity);
	ldr	x2, [x1, 16]	// _429, MEM[(struct basic_string &)iftmp.58_425].D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x2, [sp, 464]	// _429, MEM[(size_type *)&D.65590 + 16B]
.L4047:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:558: 	_M_length(__str.length());
	ldr	x2, [x1, 8]	// _430, MEM[(const struct basic_string *)iftmp.58_425 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x2, [sp, 456]	// _430, MEM[(size_type *)&D.65590 + 8B]
	stp	x0, xzr, [x1]	// _427,, MEM[(char * *)iftmp.58_425]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	adrp	x0, _ZSt4cerr	// tmp829,
	add	x0, x0, :lo12:_ZSt4cerr	//, tmp829,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, 16]	//, MEM[(char_type &)iftmp.58_425 + 16]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	ldp	x1, x2, [sp, 448]	//,, MEM[(const struct basic_string *)&D.65590]
.LEHB247:
	bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l		//
	mov	x27, x0	// _381,
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	ldr	x0, [x0]	// _381->_vptr.basic_ostream, _381->_vptr.basic_ostream
	ldr	x0, [x0, -24]	// MEM[(long int *)_435 + -24B], MEM[(long int *)_435 + -24B]
	add	x0, x27, x0	// tmp832, _381, MEM[(long int *)_435 + -24B]
	ldr	x25, [x0, 240]	// _439, MEM[(const struct __ctype_type * *)_438 + 240B]
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:49:       if (!__f)
	cbz	x25, .L4456	// _439,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:874: 	if (_M_widen_ok)
	ldrb	w0, [x25, 56]	// MEM[(const struct ctype *)_439]._M_widen_ok, MEM[(const struct ctype *)_439]._M_widen_ok
	cbz	w0, .L4049	// MEM[(const struct ctype *)_439]._M_widen_ok,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:875: 	  return _M_widen[static_cast<unsigned char>(__c)];
	ldrb	w1, [x25, 67]	// _446, MEM[(const struct ctype *)_439]._M_widen
.L4050:
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	mov	x0, x27	//, _381
	bl	_ZNSo3putEc		//
// /usr/local/include/c++/8.3.0/ostream:613:     { return __os.flush(); }
	bl	_ZNSo5flushEv		//
.LEHE247:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 448]	// _382, MEM[(const struct basic_string *)&D.65590]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp839, tmp1268,
	cmp	x0, x23	// _382, tmp839
	beq	.L4051		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4051:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _383, MEM[(const struct basic_string *)&D.65588]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x26, x26, 16	// tmp841, tmp1267,
	cmp	x0, x26	// _383, tmp841
	beq	.L4052		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4052:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 320]	// _384, MEM[(const struct basic_string *)&D.65589]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x0, x24	// _384, tmp1303
	beq	.L4053		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4053:
	ldr	x23, [sp, 384]	// pretmp_527, MEM[(const struct basic_string *)&D.65577]
	b	.L4030		//
.L4428:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:440:       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
	ldr	x28, [sp, 392]	// _279, MEM[(const struct basic_string *)&D.65507 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	ldr	x0, [sp, 96]	// tmp1307, %sfp
	str	x0, [sp, 288]	// tmp1307, MEM[(struct _Alloc_hider *)&D.65522]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:211: 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
	cmn	x23, x28	// prephitmp_332, _279
	ccmp	x23, 0, 0, ne	// prephitmp_332,,,
	beq	.L4457		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:215: 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
	str	x28, [sp, 136]	// _279, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:217: 	if (__dnew > size_type(_S_local_capacity))
	cmp	x28, 15	// _279,
	bhi	.L4458		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:337: 	if (__n == 1)
	cmp	x28, 1	// _279,
	bne	.L3986		//,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	ldr	x0, [sp, 96]	// pretmp_310, %sfp
// /usr/local/include/c++/8.3.0/bits/basic_string.h:338: 	  traits_type::assign(*__d, *__s);
	ldrb	w1, [x23]	// _287, MEM[(const char_type &)pretmp_345]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	w1, [sp, 304]	// _287, MEM[(char_type &)&D.65522 + 16]
.L3987:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x28, [sp, 296]	// _279, MEM[(size_type *)&D.65522 + 8B]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x0, x28]	//, MEM[(char_type &)_290]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	mov	x0, 9223372036854775807	// tmp692,
	ldr	x1, [sp, 296]	// MEM[(const struct basic_string *)&D.65522 + 8B], MEM[(const struct basic_string *)&D.65522 + 8B]
	sub	x0, x0, x1	// tmp691, tmp692, MEM[(const struct basic_string *)&D.65522 + 8B]
	cmp	x0, 1	// tmp691,
	bls	.L4459		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1268: 	return _M_append(__s, __n);
	adrp	x1, .LC9	// tmp697,
	mov	x2, 2	//,
	add	x1, x1, :lo12:.LC9	//, tmp697,
	add	x0, sp, 288	// tmp1336,,
.LEHB248:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE248:
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	__errno_location		//
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	ldr	w0, [x0]	//, *_264
	bl	strerror		//
	mov	x23, x0	// _266,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x1, sp, 432	// tmp701,,
	str	x1, [sp, 416]	// tmp701, MEM[(struct _Alloc_hider *)&D.65521]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	mov	x2, -1	// iftmp.41_297,
	cbz	x0, .L3990	// _266,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:322: 	return __builtin_strlen(__s);
	bl	strlen		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	add	x2, x23, x0	// iftmp.41_297, _266,
.L3990:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	mov	x1, x23	//, _266
	mov	w3, 0	//,
	add	x0, sp, 416	// tmp1339,,
.LEHB249:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE249:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x3, x4, [sp, 288]	// _302, _299, MEM[(const struct basic_string *)&D.65522]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	mov	x6, 15	// tmp1271,
	ldr	x0, [sp, 96]	// tmp1307, %sfp
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x1, x2, [sp, 416]	// pretmp_746, _300, MEM[(const struct basic_string *)&D.65521]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	cmp	x3, x0	// _302, tmp1307
	ldr	x0, [sp, 304]	// D.65522.D.21280._M_allocated_capacity, D.65522.D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	add	x5, x4, x2	// __size, _299, _300
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	csel	x0, x0, x6, ne	// iftmp.59_304, D.65522.D.21280._M_allocated_capacity, tmp1271,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_304
	bls	.L3995		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 432]	// D.65521.D.21280._M_allocated_capacity, D.65521.D.21280._M_allocated_capacity
	add	x7, sp, 432	// tmp713,,
	cmp	x1, x7	// pretmp_746, tmp713
	csel	x6, x0, x6, ne	// iftmp.59_308, D.65521.D.21280._M_allocated_capacity, tmp1271,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x6	// __size, iftmp.59_308
	bls	.L4460		//,
.L3995:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	add	x0, sp, 288	// tmp1343,,
.LEHB250:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE250:
.L4412:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x23, sp, 448	// tmp1268,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x1, x0	// _312,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x2, x23, 16	// tmp717, tmp1268,
	str	x2, [sp, 448]	// tmp717, MEM[(struct _Alloc_hider *)&D.65523]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x2, [x0], 16	// _315, MEM[(const struct basic_string *)iftmp.58_314]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:544: 	if (__str._M_is_local())
	cmp	x2, x0	// _315, _316
	beq	.L4461		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x2, [sp, 448]	// _315, MEM[(char * *)&D.65523]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:552: 	    _M_capacity(__str._M_allocated_capacity);
	ldr	x2, [x1, 16]	// _318, MEM[(struct basic_string &)iftmp.58_314].D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x2, [sp, 464]	// _318, MEM[(size_type *)&D.65523 + 16B]
.L3999:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:558: 	_M_length(__str.length());
	ldr	x2, [x1, 8]	// _319, MEM[(const struct basic_string *)iftmp.58_314 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x2, [sp, 456]	// _319, MEM[(size_type *)&D.65523 + 8B]
	stp	x0, xzr, [x1]	// _316,, MEM[(char * *)iftmp.58_314]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	adrp	x0, _ZSt4cerr	// tmp721,
	add	x0, x0, :lo12:_ZSt4cerr	//, tmp721,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, 16]	//, MEM[(char_type &)iftmp.58_314 + 16]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	ldp	x1, x2, [sp, 448]	//,, MEM[(const struct basic_string *)&D.65523]
.LEHB251:
	bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l		//
	mov	x28, x0	// _270,
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	ldr	x0, [x0]	// _270->_vptr.basic_ostream, _270->_vptr.basic_ostream
	ldr	x0, [x0, -24]	// MEM[(long int *)_324 + -24B], MEM[(long int *)_324 + -24B]
	add	x0, x28, x0	// tmp724, _270, MEM[(long int *)_324 + -24B]
	ldr	x0, [x0, 240]	// _328, MEM[(const struct __ctype_type * *)_327 + 240B]
	str	x0, [sp, 104]	// _328, %sfp
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:49:       if (!__f)
	cbz	x0, .L4462	// _328,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:874: 	if (_M_widen_ok)
	ldr	x1, [sp, 104]	// _328, %sfp
	ldrb	w0, [x1, 56]	// MEM[(const struct ctype *)_328]._M_widen_ok, MEM[(const struct ctype *)_328]._M_widen_ok
	cbz	w0, .L4001	// MEM[(const struct ctype *)_328]._M_widen_ok,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:875: 	  return _M_widen[static_cast<unsigned char>(__c)];
	ldrb	w1, [x1, 67]	// _335, MEM[(const struct ctype *)_328]._M_widen
.L4002:
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	mov	x0, x28	//, _270
	bl	_ZNSo3putEc		//
// /usr/local/include/c++/8.3.0/ostream:613:     { return __os.flush(); }
	bl	_ZNSo5flushEv		//
.LEHE251:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 448]	// _271, MEM[(const struct basic_string *)&D.65523]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp731, tmp1268,
	cmp	x0, x23	// _271, tmp731
	beq	.L4003		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4003:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _272, MEM[(const struct basic_string *)&D.65521]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 432	// tmp733,,
	cmp	x0, x1	// _272, tmp733
	beq	.L4004		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4004:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	ldr	x1, [sp, 96]	// tmp1307, %sfp
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 288]	// _273, MEM[(const struct basic_string *)&D.65522]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x0, x1	// _273, tmp1307
	beq	.L4005		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4005:
	ldr	x23, [sp, 384]	// prephitmp_332, MEM[(const struct basic_string *)&D.65507]
	b	.L3982		//
.L4443:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:440:       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
	ldr	x26, [sp, 392]	// prephitmp_457, MEM[(const struct basic_string *)&D.65576 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x25, sp, 352	// tmp1265,,
	add	x0, x25, 16	// tmp867, tmp1265,
	str	x0, [sp, 352]	// tmp867, MEM[(struct _Alloc_hider *)&D.65645]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:211: 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
	cmn	x23, x26	// prephitmp_459, prephitmp_457
	ccmp	x23, 0, 0, ne	// prephitmp_459,,,
	beq	.L4463		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:215: 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
	str	x26, [sp, 152]	// prephitmp_457, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:217: 	if (__dnew > size_type(_S_local_capacity))
	cmp	x26, 15	// prephitmp_457,
	bhi	.L4464		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:337: 	if (__n == 1)
	cmp	x26, 1	// prephitmp_457,
	bne	.L4067		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:338: 	  traits_type::assign(*__d, *__s);
	ldrb	w2, [x23]	// _485, MEM[(const char_type &)pretmp_617]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	mov	x1, x0	// prephitmp_440, tmp867
	strb	w2, [sp, 368]	// _485, MEM[(char_type &)&D.65645 + 16]
.L4068:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x26, [sp, 360]	// prephitmp_457, MEM[(size_type *)&D.65645 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	mov	x0, 9223372036854775807	// tmp885,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, x26]	//, MEM[(char_type &)_488]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	ldr	x1, [sp, 360]	// MEM[(const struct basic_string *)&D.65645 + 8B], MEM[(const struct basic_string *)&D.65645 + 8B]
	sub	x0, x0, x1	// tmp884, tmp885, MEM[(const struct basic_string *)&D.65645 + 8B]
	cmp	x0, 1	// tmp884,
	bls	.L4465		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1268: 	return _M_append(__s, __n);
	adrp	x1, .LC9	// tmp890,
	mov	x2, 2	//,
	add	x1, x1, :lo12:.LC9	//, tmp890,
	mov	x0, x25	//, tmp1265
.LEHB252:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE252:
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	__errno_location		//
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	ldr	w0, [x0]	//, *_462
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x26, sp, 416	// tmp1267,,
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	strerror		//
	mov	x23, x0	// _464,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x1, x26, 16	// tmp894, tmp1267,
	str	x1, [sp, 416]	// tmp894, MEM[(struct _Alloc_hider *)&D.65644]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	mov	x2, -1	// iftmp.41_495,
	cbz	x0, .L4071	// _464,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:322: 	return __builtin_strlen(__s);
	bl	strlen		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	add	x2, x23, x0	// iftmp.41_495, _464,
.L4071:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	mov	x1, x23	//, _464
	mov	w3, 0	//,
	mov	x0, x26	//, tmp1267
.LEHB253:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE253:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x3, x4, [sp, 352]	// _500, _497, MEM[(const struct basic_string *)&D.65645]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	add	x0, x25, 16	// tmp904, tmp1265,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x1, x2, [sp, 416]	// pretmp_1383, _498, MEM[(const struct basic_string *)&D.65644]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	mov	x6, 15	// tmp1282,
	cmp	x3, x0	// _500, tmp904
	ldr	x0, [sp, 368]	// D.65645.D.21280._M_allocated_capacity, D.65645.D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	add	x5, x4, x2	// __size, _497, _498
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	csel	x0, x0, x6, ne	// iftmp.59_502, D.65645.D.21280._M_allocated_capacity, tmp1282,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_502
	bls	.L4076		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 432]	// D.65644.D.21280._M_allocated_capacity, D.65644.D.21280._M_allocated_capacity
	add	x7, x26, 16	// tmp906, tmp1267,
	cmp	x1, x7	// pretmp_1383, tmp906
	csel	x6, x0, x6, ne	// iftmp.59_506, D.65644.D.21280._M_allocated_capacity, tmp1282,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x6	// __size, iftmp.59_506
	bls	.L4466		//,
.L4076:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x0, x25	//, tmp1265
.LEHB254:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE254:
.L4414:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x23, sp, 448	// tmp1268,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x1, x0	// _510,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x2, x23, 16	// tmp910, tmp1268,
	str	x2, [sp, 448]	// tmp910, MEM[(struct _Alloc_hider *)&D.65646]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x2, [x0], 16	// _513, MEM[(const struct basic_string *)iftmp.58_512]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:544: 	if (__str._M_is_local())
	cmp	x2, x0	// _513, _514
	beq	.L4467		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x2, [sp, 448]	// _513, MEM[(char * *)&D.65646]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:552: 	    _M_capacity(__str._M_allocated_capacity);
	ldr	x2, [x1, 16]	// _516, MEM[(struct basic_string &)iftmp.58_512].D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x2, [sp, 464]	// _516, MEM[(size_type *)&D.65646 + 16B]
.L4080:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:558: 	_M_length(__str.length());
	ldr	x2, [x1, 8]	// _517, MEM[(const struct basic_string *)iftmp.58_512 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x2, [sp, 456]	// _517, MEM[(size_type *)&D.65646 + 8B]
	stp	x0, xzr, [x1]	// _514,, MEM[(char * *)iftmp.58_512]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	adrp	x0, _ZSt4cerr	// tmp914,
	add	x0, x0, :lo12:_ZSt4cerr	//, tmp914,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, 16]	//, MEM[(char_type &)iftmp.58_512 + 16]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	ldp	x1, x2, [sp, 448]	//,, MEM[(const struct basic_string *)&D.65646]
.LEHB255:
	bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l		//
	mov	x28, x0	// _468,
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	ldr	x0, [x0]	// _468->_vptr.basic_ostream, _468->_vptr.basic_ostream
	ldr	x0, [x0, -24]	// MEM[(long int *)_522 + -24B], MEM[(long int *)_522 + -24B]
	add	x0, x28, x0	// tmp917, _468, MEM[(long int *)_522 + -24B]
	ldr	x27, [x0, 240]	// _526, MEM[(const struct __ctype_type * *)_525 + 240B]
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:49:       if (!__f)
	cbz	x27, .L4468	// _526,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:874: 	if (_M_widen_ok)
	ldrb	w0, [x27, 56]	// MEM[(const struct ctype *)_526]._M_widen_ok, MEM[(const struct ctype *)_526]._M_widen_ok
	cbz	w0, .L4082	// MEM[(const struct ctype *)_526]._M_widen_ok,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:875: 	  return _M_widen[static_cast<unsigned char>(__c)];
	ldrb	w1, [x27, 67]	// _533, MEM[(const struct ctype *)_526]._M_widen
.L4083:
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	mov	x0, x28	//, _468
	bl	_ZNSo3putEc		//
// /usr/local/include/c++/8.3.0/ostream:613:     { return __os.flush(); }
	bl	_ZNSo5flushEv		//
.LEHE255:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 448]	// _469, MEM[(const struct basic_string *)&D.65646]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp924, tmp1268,
	cmp	x0, x23	// _469, tmp924
	beq	.L4084		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4084:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _470, MEM[(const struct basic_string *)&D.65644]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x26, x26, 16	// tmp926, tmp1267,
	cmp	x0, x26	// _470, tmp926
	beq	.L4085		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4085:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 352]	// _471, MEM[(const struct basic_string *)&D.65645]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x25, x25, 16	// tmp928, tmp1265,
	cmp	x0, x25	// _471, tmp928
	beq	.L4086		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4086:
	ldr	x23, [sp, 384]	// prephitmp_459, MEM[(const struct basic_string *)&D.65576]
	b	.L4063		//
.L4444:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:440:       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
	ldr	x27, [sp, 360]	// _680, MEM[(const struct basic_string *)&D.65697 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x26, sp, 416	// tmp1267,,
	add	x0, x26, 16	// tmp1048, tmp1267,
	str	x0, [sp, 416]	// tmp1048, MEM[(struct _Alloc_hider *)&D.65766]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:211: 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
	cmn	x23, x27	// prephitmp_648, _680
	ccmp	x23, 0, 0, ne	// prephitmp_648,,,
	beq	.L4469		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:215: 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
	str	x27, [sp, 448]	// _680, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:217: 	if (__dnew > size_type(_S_local_capacity))
	cmp	x27, 15	// _680,
	bhi	.L4470		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:337: 	if (__n == 1)
	cmp	x27, 1	// _680,
	bne	.L4140		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:338: 	  traits_type::assign(*__d, *__s);
	ldrb	w2, [x23]	// _688, MEM[(const char_type &)pretmp_1320]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	mov	x1, x0	// pretmp_659, tmp1048
	strb	w2, [sp, 432]	// _688, MEM[(char_type &)&D.65766 + 16]
.L4141:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x27, [sp, 424]	// _680, MEM[(size_type *)&D.65766 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	mov	x0, 9223372036854775807	// tmp1066,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, x27]	//, MEM[(char_type &)_691]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	ldr	x1, [sp, 424]	// MEM[(const struct basic_string *)&D.65766 + 8B], MEM[(const struct basic_string *)&D.65766 + 8B]
	sub	x0, x0, x1	// tmp1065, tmp1066, MEM[(const struct basic_string *)&D.65766 + 8B]
	cmp	x0, 1	// tmp1065,
	bls	.L4471		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1268: 	return _M_append(__s, __n);
	adrp	x1, .LC9	// tmp1071,
	mov	x2, 2	//,
	add	x1, x1, :lo12:.LC9	//, tmp1071,
	mov	x0, x26	//, tmp1267
.LEHB256:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE256:
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	__errno_location		//
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	ldr	w0, [x0]	//, *_665
	bl	strerror		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	str	x22, [sp, 384]	// tmp1300, MEM[(struct _Alloc_hider *)&D.65765]._M_p
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	mov	x23, x0	// _667,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	mov	x2, -1	// iftmp.41_698,
	cbz	x0, .L4144	// _667,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:322: 	return __builtin_strlen(__s);
	bl	strlen		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	add	x2, x23, x0	// iftmp.41_698, _667,
.L4144:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	mov	x1, x23	//, _667
	mov	w3, 0	//,
	add	x0, sp, 384	// tmp1377,,
.LEHB257:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE257:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x3, x4, [sp, 416]	// _703, _700, MEM[(const struct basic_string *)&D.65766]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	add	x0, x26, 16	// tmp1085, tmp1267,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x1, x2, [sp, 384]	// pretmp_650, _701, MEM[(const struct basic_string *)&D.65765]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	mov	x6, 15	// tmp1290,
	cmp	x3, x0	// _703, tmp1085
	ldr	x0, [sp, 432]	// D.65766.D.21280._M_allocated_capacity, D.65766.D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	add	x5, x4, x2	// __size, _700, _701
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	csel	x0, x0, x6, ne	// iftmp.59_705, D.65766.D.21280._M_allocated_capacity, tmp1290,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_705
	bls	.L4149		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 400]	// D.65765.D.21280._M_allocated_capacity, D.65765.D.21280._M_allocated_capacity
	cmp	x1, x22	// pretmp_650, tmp1300
	csel	x6, x0, x6, ne	// iftmp.59_709, D.65765.D.21280._M_allocated_capacity, tmp1290,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x6	// __size, iftmp.59_709
	bls	.L4472		//,
.L4149:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x0, x26	//, tmp1267
.LEHB258:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE258:
.L4416:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x23, sp, 448	// tmp1268,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x1, x0	// _713,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x2, x23, 16	// tmp1091, tmp1268,
	str	x2, [sp, 448]	// tmp1091, MEM[(struct _Alloc_hider *)&D.65767]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x2, [x0], 16	// _716, MEM[(const struct basic_string *)iftmp.58_715]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:544: 	if (__str._M_is_local())
	cmp	x2, x0	// _716, _717
	beq	.L4473		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x2, [sp, 448]	// _716, MEM[(char * *)&D.65767]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:552: 	    _M_capacity(__str._M_allocated_capacity);
	ldr	x2, [x1, 16]	// _719, MEM[(struct basic_string &)iftmp.58_715].D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x2, [sp, 464]	// _719, MEM[(size_type *)&D.65767 + 16B]
.L4153:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:558: 	_M_length(__str.length());
	ldr	x2, [x1, 8]	// _720, MEM[(const struct basic_string *)iftmp.58_715 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x2, [sp, 456]	// _720, MEM[(size_type *)&D.65767 + 8B]
	stp	x0, xzr, [x1]	// _717,, MEM[(char * *)iftmp.58_715]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	adrp	x0, _ZSt4cerr	// tmp1095,
	add	x0, x0, :lo12:_ZSt4cerr	//, tmp1095,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, 16]	//, MEM[(char_type &)iftmp.58_715 + 16]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	ldp	x1, x2, [sp, 448]	//,, MEM[(const struct basic_string *)&D.65767]
.LEHB259:
	bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l		//
	mov	x28, x0	// _671,
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	ldr	x0, [x0]	// _671->_vptr.basic_ostream, _671->_vptr.basic_ostream
	ldr	x0, [x0, -24]	// MEM[(long int *)_725 + -24B], MEM[(long int *)_725 + -24B]
	add	x0, x28, x0	// tmp1098, _671, MEM[(long int *)_725 + -24B]
	ldr	x27, [x0, 240]	// _729, MEM[(const struct __ctype_type * *)_728 + 240B]
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:49:       if (!__f)
	cbz	x27, .L4474	// _729,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:874: 	if (_M_widen_ok)
	ldrb	w0, [x27, 56]	// MEM[(const struct ctype *)_729]._M_widen_ok, MEM[(const struct ctype *)_729]._M_widen_ok
	cbz	w0, .L4155	// MEM[(const struct ctype *)_729]._M_widen_ok,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:875: 	  return _M_widen[static_cast<unsigned char>(__c)];
	ldrb	w1, [x27, 67]	// _736, MEM[(const struct ctype *)_729]._M_widen
.L4156:
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	mov	x0, x28	//, _671
	bl	_ZNSo3putEc		//
// /usr/local/include/c++/8.3.0/ostream:613:     { return __os.flush(); }
	bl	_ZNSo5flushEv		//
.LEHE259:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 448]	// _672, MEM[(const struct basic_string *)&D.65767]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp1105, tmp1268,
	cmp	x0, x23	// _672, tmp1105
	beq	.L4157		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4157:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 384]	// _673, MEM[(const struct basic_string *)&D.65765]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x0, x22	// _673, tmp1300
	beq	.L4158		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4158:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _674, MEM[(const struct basic_string *)&D.65766]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x26, x26, 16	// tmp1109, tmp1267,
	cmp	x0, x26	// _674, tmp1109
	beq	.L4159		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4159:
	ldr	x23, [sp, 352]	// prephitmp_648, MEM[(const struct basic_string *)&D.65697]
	b	.L4136		//
.L4436:
// bitmapdecoding.cpp:233:     printf("bogus\n.");
	adrp	x0, .LC15	// tmp1148,
	add	x26, sp, 216	// tmp1262,,
	add	x0, x0, :lo12:.LC15	//, tmp1148,
.LEHB260:
	bl	printf		//
.LEHE260:
	b	.L4179		//
.L4034:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:350: 	if (__n == 0)
	mov	x0, x24	// prephitmp_532, tmp1303
	cbz	x25, .L4035	// _390,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x2, x25	//, _390
	mov	x1, x23	//, pretmp_527
	bl	memcpy		//
	ldr	x25, [sp, 144]	// _390, __dnew
	ldr	x0, [sp, 320]	// prephitmp_532, MEM[(const struct basic_string *)&D.65589]
	b	.L4035		//
	.p2align 2
.L4107:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:350: 	if (__n == 0)
	mov	x0, x22	// pretmp_635, tmp1300
	cbz	x26, .L4108	// _593,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x2, x26	//, _593
	mov	x1, x23	//, prephitmp_663
	bl	memcpy		//
	ldr	x26, [sp, 160]	// _593, __dnew
	ldr	x0, [sp, 384]	// pretmp_635, MEM[(const struct basic_string *)&D.65710]
	b	.L4108		//
	.p2align 2
.L4430:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:829: 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
	add	x0, x3, x0, lsl 3	// _353, _346, _246,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1656: 	if (size_type __n = this->_M_impl._M_finish - __pos)
	cmp	x2, x0	// _347, _353
	beq	.L4018		//,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1660: 	    this->_M_impl._M_finish = __pos;
	str	x0, [sp, 616]	// _353, MEM[(long unsigned int * *)&unified + 136B]
	b	.L4018		//
.L3986:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:350: 	if (__n == 0)
	ldr	x0, [sp, 96]	// pretmp_310, %sfp
	cbz	x28, .L3987	// _279,
	b	.L3985		//
	.p2align 2
.L4464:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:219: 	    _M_data(_M_create(__dnew, size_type(0)));
	mov	x2, 0	//,
	add	x1, sp, 152	//,,
	mov	x0, x25	//, tmp1265
.LEHB261:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm		//
.LEHE261:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	ldr	x1, [sp, 152]	// __dnew, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x0, [sp, 352]	// _482, MEM[(char * *)&D.65645]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x1, [sp, 368]	// __dnew, MEM[(size_type *)&D.65645 + 16B]
.L4066:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x2, x26	//, prephitmp_457
	mov	x1, x23	//, prephitmp_459
	bl	memcpy		//
	ldr	x26, [sp, 152]	// prephitmp_457, __dnew
	ldr	x1, [sp, 352]	// prephitmp_440, MEM[(const struct basic_string *)&D.65645]
	b	.L4068		//
.L4470:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:219: 	    _M_data(_M_create(__dnew, size_type(0)));
	mov	x2, 0	//,
	add	x1, sp, 448	//,,
	mov	x0, x26	//, tmp1267
.LEHB262:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm		//
.LEHE262:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	ldr	x1, [sp, 448]	// __dnew, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x0, [sp, 416]	// _685, MEM[(char * *)&D.65766]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x1, [sp, 432]	// __dnew, MEM[(size_type *)&D.65766 + 16B]
.L4139:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x2, x27	//, _680
	mov	x1, x23	//, prephitmp_648
	bl	memcpy		//
	ldr	x1, [sp, 416]	// pretmp_659, MEM[(const struct basic_string *)&D.65766]
	ldr	x27, [sp, 448]	// _680, __dnew
	b	.L4141		//
.L4049:
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:876: 	this->_M_widen_init();
	mov	x0, x25	//, _439
.LEHB263:
	bl	_ZNKSt5ctypeIcE13_M_widen_initEv		//
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	ldr	x2, [x25]	// MEM[(const struct ctype *)_439].D.31376._vptr.facet, MEM[(const struct ctype *)_439].D.31376._vptr.facet
	adrp	x0, _ZNKSt5ctypeIcE8do_widenEc	// tmp836,
	add	x0, x0, :lo12:_ZNKSt5ctypeIcE8do_widenEc	// tmp835, tmp836,
	mov	w1, 10	// _446,
	ldr	x2, [x2, 48]	// _450, MEM[(int (*) () *)_449 + 48B]
	cmp	x2, x0	// _450, tmp835
	beq	.L4050		//,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	mov	x0, x25	//, _439
	blr	x2		// _450
.LEHE263:
	and	w1, w0, 255	// _446,
	b	.L4050		//
.L4122:
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:876: 	this->_M_widen_init();
	mov	x0, x27	//, _642
.LEHB264:
	bl	_ZNKSt5ctypeIcE13_M_widen_initEv		//
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	ldr	x2, [x27]	// MEM[(const struct ctype *)_642].D.31376._vptr.facet, MEM[(const struct ctype *)_642].D.31376._vptr.facet
	adrp	x0, _ZNKSt5ctypeIcE8do_widenEc	// tmp1015,
	add	x0, x0, :lo12:_ZNKSt5ctypeIcE8do_widenEc	// tmp1014, tmp1015,
	mov	w1, 10	// _649,
	ldr	x2, [x2, 48]	// _653, MEM[(int (*) () *)_652 + 48B]
	cmp	x2, x0	// _653, tmp1014
	beq	.L4123		//,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	mov	x0, x27	//, _642
	blr	x2		// _653
.LEHE264:
	and	w1, w0, 255	// _649,
	b	.L4123		//
.L4001:
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:876: 	this->_M_widen_init();
	ldr	x0, [sp, 104]	//, %sfp
.LEHB265:
	bl	_ZNKSt5ctypeIcE13_M_widen_initEv		//
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	ldr	x0, [sp, 104]	// _328, %sfp
	mov	w1, 10	// _335,
	ldr	x2, [x0]	// MEM[(const struct ctype *)_328].D.31376._vptr.facet, MEM[(const struct ctype *)_328].D.31376._vptr.facet
	adrp	x0, _ZNKSt5ctypeIcE8do_widenEc	// tmp728,
	add	x0, x0, :lo12:_ZNKSt5ctypeIcE8do_widenEc	// tmp727, tmp728,
	ldr	x2, [x2, 48]	// _339, MEM[(int (*) () *)_338 + 48B]
	cmp	x2, x0	// _339, tmp727
	beq	.L4002		//,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	ldr	x0, [sp, 104]	//, %sfp
	blr	x2		// _339
.LEHE265:
	and	w1, w0, 255	// _335,
	b	.L4002		//
.L4452:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:219: 	    _M_data(_M_create(__dnew, size_type(0)));
	mov	x2, 0	//,
	add	x1, sp, 144	//,,
	add	x0, sp, 320	// tmp1359,,
.LEHB266:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm		//
.LEHE266:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	ldr	x1, [sp, 144]	// __dnew, __dnew
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x2, x25	//, _390
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x0, [sp, 320]	// _204, MEM[(char * *)&D.65589]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x1, [sp, 336]	// __dnew, MEM[(size_type *)&D.65589 + 16B]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x1, x23	//, pretmp_527
	bl	memcpy		//
	ldr	x25, [sp, 144]	// _390, __dnew
	ldr	x0, [sp, 320]	// prephitmp_532, MEM[(const struct basic_string *)&D.65589]
	b	.L4035		//
.L4446:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:219: 	    _M_data(_M_create(__dnew, size_type(0)));
	mov	x2, 0	//,
	add	x1, sp, 160	//,,
	add	x0, sp, 384	// tmp1370,,
.LEHB267:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm		//
.LEHE267:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	ldr	x1, [sp, 160]	// __dnew, __dnew
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x2, x26	//, _593
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x0, [sp, 384]	// _598, MEM[(char * *)&D.65710]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x1, [sp, 400]	// __dnew, MEM[(size_type *)&D.65710 + 16B]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x1, x23	//, prephitmp_663
	bl	memcpy		//
	ldr	x26, [sp, 160]	// _593, __dnew
	ldr	x0, [sp, 384]	// pretmp_635, MEM[(const struct basic_string *)&D.65710]
	b	.L4108		//
.L4455:
	ldp	x2, x3, [x1, 16]	// _428, MEM[(char * {ref-all})iftmp.58_425 + 16B]
	stp	x2, x3, [sp, 464]	// _428, MEM[(char * {ref-all})&D.65590 + 16B]
	b	.L4047		//
.L4449:
	ldp	x2, x3, [x1, 16]	// _631, MEM[(char * {ref-all})iftmp.58_628 + 16B]
	stp	x2, x3, [sp, 464]	// _631, MEM[(char * {ref-all})&D.65711 + 16B]
	b	.L4120		//
.L4082:
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:876: 	this->_M_widen_init();
	mov	x0, x27	//, _526
.LEHB268:
	bl	_ZNKSt5ctypeIcE13_M_widen_initEv		//
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	ldr	x2, [x27]	// MEM[(const struct ctype *)_526].D.31376._vptr.facet, MEM[(const struct ctype *)_526].D.31376._vptr.facet
	adrp	x0, _ZNKSt5ctypeIcE8do_widenEc	// tmp921,
	add	x0, x0, :lo12:_ZNKSt5ctypeIcE8do_widenEc	// tmp920, tmp921,
	mov	w1, 10	// _533,
	ldr	x2, [x2, 48]	// _537, MEM[(int (*) () *)_536 + 48B]
	cmp	x2, x0	// _537, tmp920
	beq	.L4083		//,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	mov	x0, x27	//, _526
	blr	x2		// _537
.LEHE268:
	and	w1, w0, 255	// _533,
	b	.L4083		//
.L4429:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:827: 	  _M_default_append(__new_size - size());
	sub	x1, x0, x1	//, _246, tmp660
	add	x0, sp, 608	//,,
.LEHB269:
	bl	_ZNSt6vectorImSaImEE17_M_default_appendEm		//
	b	.L4018		//
.L3976:
	mov	x1, x21	//, _329
	add	x0, sp, 632	//,,
	bl	_ZNSt6vectorImSaImEE17_M_default_appendEm		//
.LEHE269:
	b	.L3980		//
.L4155:
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:876: 	this->_M_widen_init();
	mov	x0, x27	//, _729
.LEHB270:
	bl	_ZNKSt5ctypeIcE13_M_widen_initEv		//
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	ldr	x2, [x27]	// MEM[(const struct ctype *)_729].D.31376._vptr.facet, MEM[(const struct ctype *)_729].D.31376._vptr.facet
	adrp	x0, _ZNKSt5ctypeIcE8do_widenEc	// tmp1102,
	add	x0, x0, :lo12:_ZNKSt5ctypeIcE8do_widenEc	// tmp1101, tmp1102,
	mov	w1, 10	// _736,
	ldr	x2, [x2, 48]	// _740, MEM[(int (*) () *)_739 + 48B]
	cmp	x2, x0	// _740, tmp1101
	beq	.L4156		//,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	mov	x0, x27	//, _729
	blr	x2		// _740
.LEHE270:
	and	w1, w0, 255	// _736,
	b	.L4156		//
.L4026:
	add	x26, sp, 216	// tmp1262,,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:827: 	  _M_default_append(__new_size - size());
	add	x0, sp, 192	//,,
.LEHB271:
	bl	_ZNSt6vectorIySaIyEE17_M_default_appendEm		//
.LEHE271:
	b	.L4028		//
.L4458:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:219: 	    _M_data(_M_create(__dnew, size_type(0)));
	mov	x2, 0	//,
	add	x1, sp, 136	//,,
	add	x0, sp, 288	// tmp1335,,
.LEHB272:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm		//
.LEHE272:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	ldr	x1, [sp, 136]	// __dnew, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x0, [sp, 288]	// _284, MEM[(char * *)&D.65522]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x1, [sp, 304]	// __dnew, MEM[(size_type *)&D.65522 + 16B]
.L3985:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x2, x28	//, _279
	mov	x1, x23	//, prephitmp_332
	bl	memcpy		//
	ldr	x28, [sp, 136]	// _279, __dnew
	ldr	x0, [sp, 288]	// pretmp_310, MEM[(const struct basic_string *)&D.65522]
	b	.L3987		//
.L4242:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x22, 0	// _334,
	mov	x27, 0	// _213,
	b	.L3973		//
.L4461:
	ldp	x2, x3, [x1, 16]	// _317, MEM[(char * {ref-all})iftmp.58_314 + 16B]
	stp	x2, x3, [sp, 464]	// _317, MEM[(char * {ref-all})&D.65523 + 16B]
	b	.L3999		//
.L4448:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1932: 			  _M_limit(__pos, __n1), __s, __n2);
	mov	x2, 0	//,
	mov	x1, 0	//,
	mov	x0, x26	//, tmp1267
.LEHB273:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm		//
.LEHE273:
	b	.L4415		//
.L4454:
	mov	x2, 0	//,
	mov	x1, 0	//,
	mov	x0, x26	//, tmp1267
.LEHB274:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm		//
.LEHE274:
	b	.L4413		//
.L4140:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:350: 	if (__n == 0)
	mov	x1, x0	// pretmp_659, tmp1048
	cbz	x27, .L4141	// _680,
	b	.L4139		//
	.p2align 2
.L4067:
	mov	x1, x0	// prephitmp_440, tmp867
	cbz	x26, .L4068	// prephitmp_457,
	b	.L4066		//
	.p2align 2
.L4460:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1932: 			  _M_limit(__pos, __n1), __s, __n2);
	mov	x2, 0	//,
	mov	x1, 0	//,
	add	x0, sp, 416	// tmp1342,,
.LEHB275:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm		//
.LEHE275:
	b	.L4412		//
.L4467:
	ldp	x2, x3, [x1, 16]	// _515, MEM[(char * {ref-all})iftmp.58_512 + 16B]
	stp	x2, x3, [sp, 464]	// _515, MEM[(char * {ref-all})&D.65646 + 16B]
	b	.L4080		//
.L4473:
	ldp	x2, x3, [x1, 16]	// _718, MEM[(char * {ref-all})iftmp.58_715 + 16B]
	stp	x2, x3, [sp, 464]	// _718, MEM[(char * {ref-all})&D.65767 + 16B]
	b	.L4153		//
.L4466:
	mov	x2, 0	//,
	mov	x1, 0	//,
	mov	x0, x26	//, tmp1267
.LEHB276:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm		//
.LEHE276:
	b	.L4414		//
.L4472:
	mov	x2, 0	//,
	mov	x1, 0	//,
	add	x0, sp, 384	// tmp1378,,
.LEHB277:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm		//
.LEHE277:
	b	.L4416		//
.L4459:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:312: 	  __throw_length_error(__N(__s));
	adrp	x0, .LC8	// tmp695,
	add	x0, x0, :lo12:.LC8	//, tmp695,
.LEHB278:
	bl	_ZSt20__throw_length_errorPKc		//
.LEHE278:
.L4457:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:212: 	  std::__throw_logic_error(__N("basic_string::"
	adrp	x0, .LC6	// tmp681,
	add	x0, x0, :lo12:.LC6	//, tmp681,
.LEHB279:
	bl	_ZSt19__throw_logic_errorPKc		//
.LEHE279:
.L4463:
	adrp	x0, .LC6	// tmp874,
	add	x0, x0, :lo12:.LC6	//, tmp874,
.LEHB280:
	bl	_ZSt19__throw_logic_errorPKc		//
.LEHE280:
.L4445:
	adrp	x0, .LC6	// tmp968,
	add	x0, x0, :lo12:.LC6	//, tmp968,
.LEHB281:
	bl	_ZSt19__throw_logic_errorPKc		//
.LEHE281:
.L4469:
	adrp	x0, .LC6	// tmp1055,
	add	x0, x0, :lo12:.LC6	//, tmp1055,
.LEHB282:
	bl	_ZSt19__throw_logic_errorPKc		//
.LEHE282:
.L4451:
	adrp	x0, .LC6	// tmp789,
	add	x0, x0, :lo12:.LC6	//, tmp789,
.LEHB283:
	bl	_ZSt19__throw_logic_errorPKc		//
.LEHE283:
	.p2align 2
.L4440:
.LEHB284:
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:102: 	  std::__throw_bad_alloc();
	bl	_ZSt17__throw_bad_allocv		//
.LEHE284:
.L4439:
.LEHB285:
	bl	_ZSt17__throw_bad_allocv		//
.LEHE285:
.L4438:
.LEHB286:
	bl	_ZSt17__throw_bad_allocv		//
.LEHE286:
.L4462:
.LEHB287:
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:50: 	__throw_bad_cast();
	bl	_ZSt16__throw_bad_castv		//
.LEHE287:
.L4435:
.LEHB288:
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:102: 	  std::__throw_bad_alloc();
	bl	_ZSt17__throw_bad_allocv		//
.LEHE288:
.L4427:
.LEHB289:
	bl	_ZSt17__throw_bad_allocv		//
.LEHE289:
.L4437:
.LEHB290:
	bl	_ZSt17__throw_bad_allocv		//
.LEHE290:
.L4471:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:312: 	  __throw_length_error(__N(__s));
	adrp	x0, .LC8	// tmp1069,
	add	x0, x0, :lo12:.LC8	//, tmp1069,
.LEHB291:
	bl	_ZSt20__throw_length_errorPKc		//
.LEHE291:
.L4474:
.LEHB292:
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:50: 	__throw_bad_cast();
	bl	_ZSt16__throw_bad_castv		//
.LEHE292:
.L4465:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:312: 	  __throw_length_error(__N(__s));
	adrp	x0, .LC8	// tmp888,
	add	x0, x0, :lo12:.LC8	//, tmp888,
.LEHB293:
	bl	_ZSt20__throw_length_errorPKc		//
.LEHE293:
.L4468:
.LEHB294:
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:50: 	__throw_bad_cast();
	bl	_ZSt16__throw_bad_castv		//
.LEHE294:
.L4447:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:312: 	  __throw_length_error(__N(__s));
	adrp	x0, .LC8	// tmp982,
	add	x0, x0, :lo12:.LC8	//, tmp982,
.LEHB295:
	bl	_ZSt20__throw_length_errorPKc		//
.LEHE295:
.L4450:
.LEHB296:
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:50: 	__throw_bad_cast();
	bl	_ZSt16__throw_bad_castv		//
.LEHE296:
.L4453:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:312: 	  __throw_length_error(__N(__s));
	adrp	x0, .LC8	// tmp803,
	add	x0, x0, :lo12:.LC8	//, tmp803,
.LEHB297:
	bl	_ZSt20__throw_length_errorPKc		//
.LEHE297:
.L4456:
.LEHB298:
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:50: 	__throw_bad_cast();
	bl	_ZSt16__throw_bad_castv		//
.LEHE298:
.L4294:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 384]	// _595, MEM[(const struct basic_string *)&D.65710]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x2, sp, 400	// tmp990,,
	mov	x19, x0	// tmp992,
	cmp	x1, x2	// _595, tmp990
	beq	.L4147		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _682
.L4425:
	bl	_ZdlPv		//
.L4147:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 352]	// _571,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x25, x25, 16	// tmp1134, tmp1265,
	cmp	x0, x25	// _571, tmp1134
	beq	.L4239		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4239:
	add	x26, sp, 216	// tmp1262,,
.L4099:
// bitmapdecoding.cpp:220:   std::vector<std::vector<unsigned long long>> allresults;
	mov	x0, x26	//, tmp1262
	bl	_ZNSt6vectorIS_IySaIyEESaIS1_EED1Ev		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 192]	// _151, results.D.43930._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4240	// _151,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4240:
// bitmapdecoding.cpp:218:   LinuxEvents<PERF_TYPE_HARDWARE> unified(evts);
	add	x0, sp, 480	// tmp1385,,
	bl	_ZN11LinuxEventsILi0EED1Ev		//
.L4234:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 168]	// _152, evts.D.42966._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4241	// _152,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4241:
	mov	x0, x19	//, tmp1244
.LEHB299:
	bl	_Unwind_Resume		//
.LEHE299:
.L4291:
	mov	x19, x0	// tmp1033,
.L4133:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 384]	// _590, MEM[(const struct basic_string *)&D.65710]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 400	// tmp1036,,
	cmp	x0, x1	// _590, tmp1036
	bne	.L4425		//,
	b	.L4147		//
.L4292:
	mov	x19, x0	// tmp1027,
.L4131:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _589, MEM[(const struct basic_string *)&D.65709]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x26, x26, 16	// tmp1032, tmp1267,
	cmp	x0, x26	// _589, tmp1032
	beq	.L4133		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L4133		//
.L4277:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 448]	// _274, MEM[(const struct basic_string *)&D.65523]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp739, tmp1268,
	mov	x19, x0	// tmp741,
	cmp	x1, x23	// _274, tmp739
	beq	.L4010		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _274
	bl	_ZdlPv		//
.L4010:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _275, MEM[(const struct basic_string *)&D.65521]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 432	// tmp745,,
	cmp	x0, x1	// _275, tmp745
	beq	.L4012		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4012:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 288]	// _276, MEM[(const struct basic_string *)&D.65522]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 304	// tmp749,,
	cmp	x0, x1	// _276, tmp749
	beq	.L3993		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L3993:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 384]	// _247, MEM[(const struct basic_string *)&D.65507]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 400	// tmp761,,
	cmp	x0, x1	// _247, tmp761
	beq	.L4020		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4020:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 632]	// _248, MEM[(struct vector *)&unified + 152B].D.42087._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4021	// _248,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4021:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 608]	// _249, MEM[(struct vector *)&unified + 128B].D.42087._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4022	// _249,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4022:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x27, .L4234	// _213,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x27	//, _213
	bl	_ZdlPv		//
	b	.L4234		//
.L4284:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 320]	// _392, MEM[(const struct basic_string *)&D.65589]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x2, sp, 336	// tmp811,,
	mov	x19, x0	// tmp813,
	cmp	x1, x2	// _392, tmp811
	beq	.L4074		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _479
.L4422:
	bl	_ZdlPv		//
.L4074:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 384]	// _369,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 400	// tmp950,,
	cmp	x0, x1	// _369, tmp950
	beq	.L4239		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L4239		//
.L4293:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 448]	// _588, MEM[(const struct basic_string *)&D.65711]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp1026, tmp1268,
	mov	x19, x0	// tmp1028,
	cmp	x1, x23	// _588, tmp1026
	beq	.L4131		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _588
	bl	_ZdlPv		//
	b	.L4131		//
.L4285:
	mov	x19, x0	// tmp939,
.L4093:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 352]	// _474, MEM[(const struct basic_string *)&D.65645]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x25, x25, 16	// tmp942, tmp1265,
	cmp	x0, x25	// _474, tmp942
	beq	.L4074		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L4074		//
.L4286:
	mov	x19, x0	// tmp933,
	b	.L4091		//
.L4283:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 448]	// _385, MEM[(const struct basic_string *)&D.65590]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp847, tmp1268,
	mov	x19, x0	// tmp849,
	cmp	x1, x23	// _385, tmp847
	beq	.L4058		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _385
	bl	_ZdlPv		//
.L4058:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _386, MEM[(const struct basic_string *)&D.65588]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x26, x26, 16	// tmp853, tmp1267,
	cmp	x0, x26	// _386, tmp853
	beq	.L4060		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4060:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 320]	// _387, MEM[(const struct basic_string *)&D.65589]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 336	// tmp857,,
	cmp	x0, x1	// _387, tmp857
	beq	.L4074		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L4074		//
.L4268:
	mov	x19, x0	// tmp947,
	b	.L4099		//
.L4280:
	mov	x19, x0	// tmp897,
	b	.L4074		//
.L4273:
	mov	x19, x0	// tmp762,
	b	.L4020		//
.L4302:
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:86: 	  __catch(...)
	bl	__cxa_begin_catch		//
.L4215:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x21, x27	// __cur, __first
	bne	.L4475		//,
.LEHB300:
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:89: 	      __throw_exception_again;
	bl	__cxa_rethrow		//
.LEHE300:
.L4300:
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:86: 	  __catch(...)
	bl	__cxa_begin_catch		//
.L4194:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x26, x21	// __first, __cur
	bne	.L4476		//,
.LEHB301:
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:89: 	      __throw_exception_again;
	bl	__cxa_rethrow		//
.LEHE301:
.L4475:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [x27]	// _843, MEM[base: __first_842, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4214	// _843,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4214:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	add	x27, x27, 24	// __first, __first,
	b	.L4215		//
.L4301:
	mov	x19, x0	// tmp1203,
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:86: 	  __catch(...)
	bl	__cxa_end_catch		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:285: 	_M_deallocate(_M_impl._M_start,
	ldr	x0, [sp, 448]	// _823, MEM[(struct _Vector_base *)&D.50608]._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4218	// _823,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L4218		//
.L4281:
	mov	x19, x0	// tmp854,
	b	.L4060		//
.L4282:
	mov	x19, x0	// tmp848,
	b	.L4058		//
.L4275:
	mov	x19, x0	// tmp746,
	b	.L4012		//
.L4276:
	mov	x19, x0	// tmp740,
	b	.L4010		//
.L4278:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 288]	// _281, MEM[(const struct basic_string *)&D.65522]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x2, sp, 304	// tmp703,,
	mov	x19, x0	// tmp705,
	cmp	x1, x2	// _281, tmp703
	beq	.L3993		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _281
	bl	_ZdlPv		//
	b	.L3993		//
.L4289:
	mov	x19, x0	// tmp1078,
	b	.L4147		//
.L4279:
	mov	x19, x0	// tmp897,
	b	.L4074		//
.L4272:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x1, [sp, 264]	// _149, avg.D.45803._M_impl._M_start
	mov	x19, x0	// tmp1252,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x1, .L4218	// _149,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _149
	bl	_ZdlPv		//
	b	.L4218		//
.L4271:
	mov	x19, x0	// tmp1250,
	mov	x0, x23	//, tmp1268
	bl	_ZNSt6vectorIS_IySaIyEESaIS1_EED1Ev		//
.L4218:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 240]	// _150, mins.D.43930._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4239	// _150,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L4239		//
.L4267:
	mov	x19, x0	// tmp1244,
	b	.L4234		//
.L4269:
	mov	x19, x0	// tmp947, tmp1247
	add	x26, sp, 216	// tmp1262,,
	mov	x0, x23	//, tmp1268
	bl	_ZNSt6vectorIS_IySaIyEESaIS1_EED1Ev		//
	b	.L4099		//
.L4476:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [x26]	// _793, MEM[base: __first_792, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4193	// _793,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4193:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	add	x26, x26, 24	// __first, __first,
	b	.L4194		//
.L4299:
	mov	x19, x0	// tmp1183,
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:86: 	  __catch(...)
	bl	__cxa_end_catch		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:285: 	_M_deallocate(_M_impl._M_start,
	ldr	x0, [sp, 448]	// _779, MEM[(struct _Vector_base *)&D.50605]._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4239	// _779,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L4239		//
.L3971:
.LEHB302:
// bitmapdecoding.cpp:209:   uint32_t *bigarray = new uint32_t[wordcount * 64];
	bl	__cxa_throw_bad_array_new_length		//
.LEHE302:
.L4290:
	mov	x19, x0	// tmp1078,
	b	.L4147		//
.L4270:
	mov	x19, x0	// tmp1206,
	b	.L4218		//
.L4274:
	mov	x19, x0	// tmp704,
	b	.L3993		//
.L4295:
	mov	x19, x0	// tmp1120,
.L4166:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _677, MEM[(const struct basic_string *)&D.65766]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x26, x26, 16	// tmp1123, tmp1267,
	cmp	x0, x26	// _677, tmp1123
	bne	.L4425		//,
	b	.L4147		//
.L4296:
	mov	x19, x0	// tmp1114,
.L4164:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 384]	// _676, MEM[(const struct basic_string *)&D.65765]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 400	// tmp1119,,
	cmp	x0, x1	// _676, tmp1119
	beq	.L4166		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L4166		//
.L4298:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 416]	// _682, MEM[(const struct basic_string *)&D.65766]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x26, x26, 16	// tmp1077, tmp1267,
	mov	x19, x0	// tmp1079,
	cmp	x1, x26	// _682, tmp1077
	beq	.L4147		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _682
	b	.L4425		//
.L4287:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 448]	// _472, MEM[(const struct basic_string *)&D.65646]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp932, tmp1268,
	mov	x19, x0	// tmp934,
	cmp	x1, x23	// _472, tmp932
	beq	.L4091		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _472
	bl	_ZdlPv		//
.L4091:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _473, MEM[(const struct basic_string *)&D.65644]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x26, x26, 16	// tmp938, tmp1267,
	cmp	x0, x26	// _473, tmp938
	beq	.L4093		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L4093		//
.L4288:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 352]	// _479, MEM[(const struct basic_string *)&D.65645]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x25, x25, 16	// tmp896, tmp1265,
	mov	x19, x0	// tmp898,
	cmp	x1, x25	// _479, tmp896
	beq	.L4074		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _479
	b	.L4422		//
.L4297:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 448]	// _675, MEM[(const struct basic_string *)&D.65767]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp1113, tmp1268,
	mov	x19, x0	// tmp1115,
	cmp	x1, x23	// _675, tmp1113
	beq	.L4164		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _675
	bl	_ZdlPv		//
	b	.L4164		//
	.cfi_endproc
.LFE2329:
	.section	.gcc_except_table
	.align	2
.LLSDA2329:
	.byte	0xff
	.byte	0x9b
	.uleb128 .LLSDATT2329-.LLSDATTD2329
.LLSDATTD2329:
	.byte	0x1
	.uleb128 .LLSDACSE2329-.LLSDACSB2329
.LLSDACSB2329:
	.uleb128 .LEHB229-.LFB2329
	.uleb128 .LEHE229-.LEHB229
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB230-.LFB2329
	.uleb128 .LEHE230-.LEHB230
	.uleb128 .L4267-.LFB2329
	.uleb128 0
	.uleb128 .LEHB231-.LFB2329
	.uleb128 .LEHE231-.LEHB231
	.uleb128 .L4273-.LFB2329
	.uleb128 0
	.uleb128 .LEHB232-.LFB2329
	.uleb128 .LEHE232-.LEHB232
	.uleb128 .L4268-.LFB2329
	.uleb128 0
	.uleb128 .LEHB233-.LFB2329
	.uleb128 .LEHE233-.LEHB233
	.uleb128 .L4300-.LFB2329
	.uleb128 0x1
	.uleb128 .LEHB234-.LFB2329
	.uleb128 .LEHE234-.LEHB234
	.uleb128 .L4269-.LFB2329
	.uleb128 0
	.uleb128 .LEHB235-.LFB2329
	.uleb128 .LEHE235-.LEHB235
	.uleb128 .L4270-.LFB2329
	.uleb128 0
	.uleb128 .LEHB236-.LFB2329
	.uleb128 .LEHE236-.LEHB236
	.uleb128 .L4302-.LFB2329
	.uleb128 0x1
	.uleb128 .LEHB237-.LFB2329
	.uleb128 .LEHE237-.LEHB237
	.uleb128 .L4271-.LFB2329
	.uleb128 0
	.uleb128 .LEHB238-.LFB2329
	.uleb128 .LEHE238-.LEHB238
	.uleb128 .L4272-.LFB2329
	.uleb128 0
	.uleb128 .LEHB239-.LFB2329
	.uleb128 .LEHE239-.LEHB239
	.uleb128 .L4268-.LFB2329
	.uleb128 0
	.uleb128 .LEHB240-.LFB2329
	.uleb128 .LEHE240-.LEHB240
	.uleb128 .L4294-.LFB2329
	.uleb128 0
	.uleb128 .LEHB241-.LFB2329
	.uleb128 .LEHE241-.LEHB241
	.uleb128 .L4291-.LFB2329
	.uleb128 0
	.uleb128 .LEHB242-.LFB2329
	.uleb128 .LEHE242-.LEHB242
	.uleb128 .L4292-.LFB2329
	.uleb128 0
	.uleb128 .LEHB243-.LFB2329
	.uleb128 .LEHE243-.LEHB243
	.uleb128 .L4293-.LFB2329
	.uleb128 0
	.uleb128 .LEHB244-.LFB2329
	.uleb128 .LEHE244-.LEHB244
	.uleb128 .L4284-.LFB2329
	.uleb128 0
	.uleb128 .LEHB245-.LFB2329
	.uleb128 .LEHE245-.LEHB245
	.uleb128 .L4281-.LFB2329
	.uleb128 0
	.uleb128 .LEHB246-.LFB2329
	.uleb128 .LEHE246-.LEHB246
	.uleb128 .L4282-.LFB2329
	.uleb128 0
	.uleb128 .LEHB247-.LFB2329
	.uleb128 .LEHE247-.LEHB247
	.uleb128 .L4283-.LFB2329
	.uleb128 0
	.uleb128 .LEHB248-.LFB2329
	.uleb128 .LEHE248-.LEHB248
	.uleb128 .L4278-.LFB2329
	.uleb128 0
	.uleb128 .LEHB249-.LFB2329
	.uleb128 .LEHE249-.LEHB249
	.uleb128 .L4275-.LFB2329
	.uleb128 0
	.uleb128 .LEHB250-.LFB2329
	.uleb128 .LEHE250-.LEHB250
	.uleb128 .L4276-.LFB2329
	.uleb128 0
	.uleb128 .LEHB251-.LFB2329
	.uleb128 .LEHE251-.LEHB251
	.uleb128 .L4277-.LFB2329
	.uleb128 0
	.uleb128 .LEHB252-.LFB2329
	.uleb128 .LEHE252-.LEHB252
	.uleb128 .L4288-.LFB2329
	.uleb128 0
	.uleb128 .LEHB253-.LFB2329
	.uleb128 .LEHE253-.LEHB253
	.uleb128 .L4285-.LFB2329
	.uleb128 0
	.uleb128 .LEHB254-.LFB2329
	.uleb128 .LEHE254-.LEHB254
	.uleb128 .L4286-.LFB2329
	.uleb128 0
	.uleb128 .LEHB255-.LFB2329
	.uleb128 .LEHE255-.LEHB255
	.uleb128 .L4287-.LFB2329
	.uleb128 0
	.uleb128 .LEHB256-.LFB2329
	.uleb128 .LEHE256-.LEHB256
	.uleb128 .L4298-.LFB2329
	.uleb128 0
	.uleb128 .LEHB257-.LFB2329
	.uleb128 .LEHE257-.LEHB257
	.uleb128 .L4295-.LFB2329
	.uleb128 0
	.uleb128 .LEHB258-.LFB2329
	.uleb128 .LEHE258-.LEHB258
	.uleb128 .L4296-.LFB2329
	.uleb128 0
	.uleb128 .LEHB259-.LFB2329
	.uleb128 .LEHE259-.LEHB259
	.uleb128 .L4297-.LFB2329
	.uleb128 0
	.uleb128 .LEHB260-.LFB2329
	.uleb128 .LEHE260-.LEHB260
	.uleb128 .L4268-.LFB2329
	.uleb128 0
	.uleb128 .LEHB261-.LFB2329
	.uleb128 .LEHE261-.LEHB261
	.uleb128 .L4279-.LFB2329
	.uleb128 0
	.uleb128 .LEHB262-.LFB2329
	.uleb128 .LEHE262-.LEHB262
	.uleb128 .L4289-.LFB2329
	.uleb128 0
	.uleb128 .LEHB263-.LFB2329
	.uleb128 .LEHE263-.LEHB263
	.uleb128 .L4283-.LFB2329
	.uleb128 0
	.uleb128 .LEHB264-.LFB2329
	.uleb128 .LEHE264-.LEHB264
	.uleb128 .L4293-.LFB2329
	.uleb128 0
	.uleb128 .LEHB265-.LFB2329
	.uleb128 .LEHE265-.LEHB265
	.uleb128 .L4277-.LFB2329
	.uleb128 0
	.uleb128 .LEHB266-.LFB2329
	.uleb128 .LEHE266-.LEHB266
	.uleb128 .L4280-.LFB2329
	.uleb128 0
	.uleb128 .LEHB267-.LFB2329
	.uleb128 .LEHE267-.LEHB267
	.uleb128 .L4290-.LFB2329
	.uleb128 0
	.uleb128 .LEHB268-.LFB2329
	.uleb128 .LEHE268-.LEHB268
	.uleb128 .L4287-.LFB2329
	.uleb128 0
	.uleb128 .LEHB269-.LFB2329
	.uleb128 .LEHE269-.LEHB269
	.uleb128 .L4273-.LFB2329
	.uleb128 0
	.uleb128 .LEHB270-.LFB2329
	.uleb128 .LEHE270-.LEHB270
	.uleb128 .L4297-.LFB2329
	.uleb128 0
	.uleb128 .LEHB271-.LFB2329
	.uleb128 .LEHE271-.LEHB271
	.uleb128 .L4268-.LFB2329
	.uleb128 0
	.uleb128 .LEHB272-.LFB2329
	.uleb128 .LEHE272-.LEHB272
	.uleb128 .L4274-.LFB2329
	.uleb128 0
	.uleb128 .LEHB273-.LFB2329
	.uleb128 .LEHE273-.LEHB273
	.uleb128 .L4292-.LFB2329
	.uleb128 0
	.uleb128 .LEHB274-.LFB2329
	.uleb128 .LEHE274-.LEHB274
	.uleb128 .L4282-.LFB2329
	.uleb128 0
	.uleb128 .LEHB275-.LFB2329
	.uleb128 .LEHE275-.LEHB275
	.uleb128 .L4276-.LFB2329
	.uleb128 0
	.uleb128 .LEHB276-.LFB2329
	.uleb128 .LEHE276-.LEHB276
	.uleb128 .L4286-.LFB2329
	.uleb128 0
	.uleb128 .LEHB277-.LFB2329
	.uleb128 .LEHE277-.LEHB277
	.uleb128 .L4296-.LFB2329
	.uleb128 0
	.uleb128 .LEHB278-.LFB2329
	.uleb128 .LEHE278-.LEHB278
	.uleb128 .L4278-.LFB2329
	.uleb128 0
	.uleb128 .LEHB279-.LFB2329
	.uleb128 .LEHE279-.LEHB279
	.uleb128 .L4274-.LFB2329
	.uleb128 0
	.uleb128 .LEHB280-.LFB2329
	.uleb128 .LEHE280-.LEHB280
	.uleb128 .L4279-.LFB2329
	.uleb128 0
	.uleb128 .LEHB281-.LFB2329
	.uleb128 .LEHE281-.LEHB281
	.uleb128 .L4290-.LFB2329
	.uleb128 0
	.uleb128 .LEHB282-.LFB2329
	.uleb128 .LEHE282-.LEHB282
	.uleb128 .L4289-.LFB2329
	.uleb128 0
	.uleb128 .LEHB283-.LFB2329
	.uleb128 .LEHE283-.LEHB283
	.uleb128 .L4280-.LFB2329
	.uleb128 0
	.uleb128 .LEHB284-.LFB2329
	.uleb128 .LEHE284-.LEHB284
	.uleb128 .L4302-.LFB2329
	.uleb128 0x1
	.uleb128 .LEHB285-.LFB2329
	.uleb128 .LEHE285-.LEHB285
	.uleb128 .L4270-.LFB2329
	.uleb128 0
	.uleb128 .LEHB286-.LFB2329
	.uleb128 .LEHE286-.LEHB286
	.uleb128 .L4300-.LFB2329
	.uleb128 0x1
	.uleb128 .LEHB287-.LFB2329
	.uleb128 .LEHE287-.LEHB287
	.uleb128 .L4277-.LFB2329
	.uleb128 0
	.uleb128 .LEHB288-.LFB2329
	.uleb128 .LEHE288-.LEHB288
	.uleb128 .L4268-.LFB2329
	.uleb128 0
	.uleb128 .LEHB289-.LFB2329
	.uleb128 .LEHE289-.LEHB289
	.uleb128 .L4267-.LFB2329
	.uleb128 0
	.uleb128 .LEHB290-.LFB2329
	.uleb128 .LEHE290-.LEHB290
	.uleb128 .L4268-.LFB2329
	.uleb128 0
	.uleb128 .LEHB291-.LFB2329
	.uleb128 .LEHE291-.LEHB291
	.uleb128 .L4298-.LFB2329
	.uleb128 0
	.uleb128 .LEHB292-.LFB2329
	.uleb128 .LEHE292-.LEHB292
	.uleb128 .L4297-.LFB2329
	.uleb128 0
	.uleb128 .LEHB293-.LFB2329
	.uleb128 .LEHE293-.LEHB293
	.uleb128 .L4288-.LFB2329
	.uleb128 0
	.uleb128 .LEHB294-.LFB2329
	.uleb128 .LEHE294-.LEHB294
	.uleb128 .L4287-.LFB2329
	.uleb128 0
	.uleb128 .LEHB295-.LFB2329
	.uleb128 .LEHE295-.LEHB295
	.uleb128 .L4294-.LFB2329
	.uleb128 0
	.uleb128 .LEHB296-.LFB2329
	.uleb128 .LEHE296-.LEHB296
	.uleb128 .L4293-.LFB2329
	.uleb128 0
	.uleb128 .LEHB297-.LFB2329
	.uleb128 .LEHE297-.LEHB297
	.uleb128 .L4284-.LFB2329
	.uleb128 0
	.uleb128 .LEHB298-.LFB2329
	.uleb128 .LEHE298-.LEHB298
	.uleb128 .L4283-.LFB2329
	.uleb128 0
	.uleb128 .LEHB299-.LFB2329
	.uleb128 .LEHE299-.LEHB299
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB300-.LFB2329
	.uleb128 .LEHE300-.LEHB300
	.uleb128 .L4301-.LFB2329
	.uleb128 0
	.uleb128 .LEHB301-.LFB2329
	.uleb128 .LEHE301-.LEHB301
	.uleb128 .L4299-.LFB2329
	.uleb128 0
	.uleb128 .LEHB302-.LFB2329
	.uleb128 .LEHE302-.LEHB302
	.uleb128 0
	.uleb128 0
.LLSDACSE2329:
	.byte	0x1
	.byte	0
	.align	2
	.4byte	0

.LLSDATT2329:
	.section	.text._Z4testIXadL_Z14faster_decoderPjRjjmEEEvPKcc,"axG",@progbits,_Z4testIXadL_Z14faster_decoderPjRjjmEEEvPKcc,comdat
	.size	_Z4testIXadL_Z14faster_decoderPjRjjmEEEvPKcc, .-_Z4testIXadL_Z14faster_decoderPjRjjmEEEvPKcc
	.text
	.align	2
	.p2align 3,,7
	.global	_Z8fasttestPKcc
	.type	_Z8fasttestPKcc, %function
_Z8fasttestPKcc:
.LFB1949:
	.cfi_startproc
	.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
	.cfi_lsda 0x1b,.LLSDA1949
	sub	sp, sp, #688	//,,
	.cfi_def_cfa_offset 688
// bitmapdecoding.cpp:503:   uint64_t *array = build_bitmap(filename, target, &wordcount);
	add	x2, sp, 136	//,,
// bitmapdecoding.cpp:501: void fasttest(const char *filename, char target) {
	stp	x29, x30, [sp]	//,,
	.cfi_offset 29, -688
	.cfi_offset 30, -680
	mov	x29, sp	//,
	stp	x19, x20, [sp, 16]	//,,
	stp	x21, x22, [sp, 32]	//,,
	stp	x23, x24, [sp, 48]	//,,
	stp	x25, x26, [sp, 64]	//,,
	stp	x27, x28, [sp, 80]	//,,
	str	d8, [sp, 96]	//,
	.cfi_offset 19, -672
	.cfi_offset 20, -664
	.cfi_offset 21, -656
	.cfi_offset 22, -648
	.cfi_offset 23, -640
	.cfi_offset 24, -632
	.cfi_offset 25, -624
	.cfi_offset 26, -616
	.cfi_offset 27, -608
	.cfi_offset 28, -600
	.cfi_offset 72, -592
.LEHB303:
// bitmapdecoding.cpp:503:   uint64_t *array = build_bitmap(filename, target, &wordcount);
	bl	_Z12build_bitmapPKccPm		//
	mov	x20, x0	// _66,
// bitmapdecoding.cpp:504:   uint32_t *bigarray = new uint32_t[wordcount * 64];
	mov	x1, 2305843009213693950	// tmp759,
// bitmapdecoding.cpp:504:   uint32_t *bigarray = new uint32_t[wordcount * 64];
	ldr	x0, [sp, 136]	// wordcount.19_1, wordcount
// bitmapdecoding.cpp:504:   uint32_t *bigarray = new uint32_t[wordcount * 64];
	cmp	x1, x0, lsl 6	// tmp759, wordcount.19_1,
	bcc	.L4478		//,
// bitmapdecoding.cpp:504:   uint32_t *bigarray = new uint32_t[wordcount * 64];
	lsl	x0, x0, 8	//, wordcount.19_1,
	bl	_Znam		//
.LEHE303:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	add	x1, sp, 512	// tmp1460,,
// bitmapdecoding.cpp:504:   uint32_t *bigarray = new uint32_t[wordcount * 64];
	mov	x19, x0	// _70,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	add	x0, sp, 176	// tmp1461,,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:96: 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [sp, 176]	//,, MEM[(struct _Vector_impl *)&evts]._M_start
	str	xzr, [sp, 192]	//, MEM[(struct _Vector_impl *)&evts]._M_end_of_storage
// bitmapdecoding.cpp:508:   evts.push_back(PERF_COUNT_HW_CPU_CYCLES);
	str	wzr, [sp, 512]	//, D.46620
.LEHB304:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	bl	_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_		//
// bitmapdecoding.cpp:509:   evts.push_back(PERF_COUNT_HW_INSTRUCTIONS);
	mov	w2, 1	// tmp764,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	add	x1, sp, 512	// tmp1462,,
	add	x0, sp, 176	// tmp1463,,
// bitmapdecoding.cpp:509:   evts.push_back(PERF_COUNT_HW_INSTRUCTIONS);
	str	w2, [sp, 512]	// tmp764, D.46621
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	bl	_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_		//
// bitmapdecoding.cpp:510:   evts.push_back(PERF_COUNT_HW_BRANCH_MISSES);
	mov	w2, 5	// tmp767,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	add	x1, sp, 512	// tmp1464,,
	add	x0, sp, 176	// tmp1465,,
// bitmapdecoding.cpp:510:   evts.push_back(PERF_COUNT_HW_BRANCH_MISSES);
	str	w2, [sp, 512]	// tmp767, D.46622
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	bl	_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_		//
// bitmapdecoding.cpp:511:   evts.push_back(PERF_COUNT_HW_CACHE_REFERENCES);
	mov	w2, 2	// tmp770,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	add	x1, sp, 512	// tmp1466,,
	add	x0, sp, 176	// tmp1467,,
// bitmapdecoding.cpp:511:   evts.push_back(PERF_COUNT_HW_CACHE_REFERENCES);
	str	w2, [sp, 512]	// tmp770, D.46623
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	bl	_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_		//
// bitmapdecoding.cpp:512:   evts.push_back(PERF_COUNT_HW_CACHE_MISSES);
	mov	w2, 3	// tmp773,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	add	x0, sp, 176	// tmp1468,,
	add	x1, sp, 512	// tmp1469,,
// bitmapdecoding.cpp:512:   evts.push_back(PERF_COUNT_HW_CACHE_MISSES);
	str	w2, [sp, 512]	// tmp773, D.46624
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1091:       { emplace_back(std::move(__x)); }
	bl	_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:460: 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
	ldp	x1, x0, [sp, 176]	// prephitmp_340, pretmp_337, MEM[(int * *)&evts]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x25, x0, x1	// prephitmp_334, pretmp_337, prephitmp_340
	asr	x21, x25, 2	// prephitmp_318, prephitmp_334,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	cbz	x21, .L4814	// prephitmp_318,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	mov	x0, 4611686018427387903	// tmp777,
	cmp	x21, x0	// prephitmp_318, tmp777
	bhi	.L5008		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x25	//, prephitmp_334
	bl	_Znwm		//
.LEHE304:
	mov	x26, x0	// _240,
	ldp	x1, x0, [sp, 176]	// prephitmp_340, pretmp_337, evts.D.42966._M_impl._M_start
	sub	x25, x0, x1	// prephitmp_334, pretmp_337, prephitmp_340
	asr	x22, x25, 2	// prephitmp_322, prephitmp_334,
	mov	x21, x22	// prephitmp_318, prephitmp_322
.L4480:
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	cmp	x1, x0	// prephitmp_340, pretmp_337
	beq	.L4482		//,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:368: 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
	mov	x2, x25	//, prephitmp_334
	mov	x0, x26	//, _240
	bl	memmove		//
.L4482:
// linux-perf-events.h:27:     memset(&attribs, 0, sizeof(attribs));
	add	x0, sp, 512	// tmp1470,,
// linux-perf-events.h:26:   explicit LinuxEvents(std::vector<int> config_vec) : fd(0), working(true) {
	str	wzr, [sp, 512]	//, unified.fd
// linux-perf-events.h:28:     attribs.type = TYPE;
	mov	x3, 481036337152	// tmp784,
// linux-perf-events.h:26:   explicit LinuxEvents(std::vector<int> config_vec) : fd(0), working(true) {
	mov	w4, 1	// tmp780,
// linux-perf-events.h:30:     attribs.disabled = 1;
	mov	w1, 97	// tmp790,
// linux-perf-events.h:35:     attribs.read_format = PERF_FORMAT_GROUP | PERF_FORMAT_ID;
	mov	x2, 12	// tmp785,
// linux-perf-events.h:27:     memset(&attribs, 0, sizeof(attribs));
	stp	xzr, xzr, [x0, 32]	// MEM[(void *)&unified + 16B]
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:369: 	  return __result + _Num;
	add	x25, x26, x25	// _238, _240, prephitmp_334
// linux-perf-events.h:27:     memset(&attribs, 0, sizeof(attribs));
	stp	xzr, xzr, [x0, 48]	// MEM[(void *)&unified + 16B]
// linux-perf-events.h:28:     attribs.type = TYPE;
	str	x3, [sp, 520]	// tmp784, MEM[(unsigned int *)&unified + 8B]
// linux-perf-events.h:27:     memset(&attribs, 0, sizeof(attribs));
	add	x3, sp, 528	// tmp1472,,
// linux-perf-events.h:26:   explicit LinuxEvents(std::vector<int> config_vec) : fd(0), working(true) {
	strb	w4, [sp, 516]	// tmp780, unified.working
// linux-perf-events.h:27:     memset(&attribs, 0, sizeof(attribs));
	stp	xzr, xzr, [x3]	// MEM[(void *)&unified + 16B]
// linux-perf-events.h:30:     attribs.disabled = 1;
	strb	w1, [sp, 560]	// tmp790, MEM[(struct perf_event_attr *)&unified + 48B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:96: 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
	add	x1, sp, 512	//,,
// linux-perf-events.h:35:     attribs.read_format = PERF_FORMAT_GROUP | PERF_FORMAT_ID;
	str	x2, [sp, 552]	// tmp785, unified.attribs.read_format
// linux-perf-events.h:41:     num_events = config_vec.size();
	str	w22, [sp, 632]	// prephitmp_322, unified.num_events
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:96: 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [x1, 128]	//,,
	stp	xzr, xzr, [x1, 144]	//,,
	str	xzr, [sp, 672]	//, MEM[(struct _Vector_impl *)&unified + 152B]._M_finish
	str	xzr, [sp, 680]	//, MEM[(struct _Vector_impl *)&unified + 152B]._M_end_of_storage
// linux-perf-events.h:27:     memset(&attribs, 0, sizeof(attribs));
	stp	xzr, xzr, [x0, 64]	// MEM[(void *)&unified + 16B]
	stp	xzr, xzr, [x0, 80]	// MEM[(void *)&unified + 16B]
	stp	xzr, xzr, [x0, 96]	// MEM[(void *)&unified + 16B]
	str	xzr, [sp, 624]	//, MEM[(void *)&unified + 16B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:826: 	if (__new_size > size())
	cbnz	x21, .L4483	// prephitmp_318,
.L4487:
// linux-perf-events.h:44:     for (auto config : config_vec) {
	cmp	x25, x26	// _238, _240
	mov	x21, x26	// ivtmp.1643, _240
	mov	w24, 0	// i,
	mov	w22, -1	// group,
	beq	.L4523		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x0, sp, 336	// tmp1450,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x27, sp, 432	// tmp1448,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	str	x0, [sp, 112]	// tmp1450, %sfp
	b	.L4522		//
	.p2align 2
.L4488:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:933: 	return *(this->_M_impl._M_start + __n);
	ldr	x2, [sp, 664]	// MEM[(long unsigned int * *)&unified + 152B], MEM[(long unsigned int * *)&unified + 152B]
// linux-perf-events.h:50:       ioctl(fd, PERF_EVENT_IOC_ID, &ids[i++]);
	mov	x1, 9223	//,
	movk	x1, 0x8008, lsl 16	//,,
	add	x21, x21, 4	// ivtmp.1643, ivtmp.1643,
// linux-perf-events.h:50:       ioctl(fd, PERF_EVENT_IOC_ID, &ids[i++]);
	add	w23, w24, 1	// i, i,
// linux-perf-events.h:50:       ioctl(fd, PERF_EVENT_IOC_ID, &ids[i++]);
	add	x2, x2, x24, uxtw 3	//, MEM[(long unsigned int * *)&unified + 152B], i,,
	bl	ioctl		//
// linux-perf-events.h:52:         group = fd;
	ldr	w0, [sp, 512]	//, unified.fd
	cmn	w22, #1	// group,
	csel	w22, w0, w22, eq	// group, unified.fd, group,
// linux-perf-events.h:44:     for (auto config : config_vec) {
	cmp	x25, x21	// _238, ivtmp.1643
	beq	.L4523		//,
// linux-perf-events.h:50:       ioctl(fd, PERF_EVENT_IOC_ID, &ids[i++]);
	mov	w24, w23	// i, i
.L4522:
// linux-perf-events.h:45:       attribs.config = config;
	ldrsw	x6, [x21]	// MEM[base: _2060, offset: 0], MEM[base: _2060, offset: 0]
// linux-perf-events.h:46:       fd = syscall(__NR_perf_event_open, &attribs, pid, cpu, group, flags);
	mov	x5, 0	//,
	mov	w4, w22	//, group
	mov	w3, -1	//,
	mov	w2, 0	//,
	add	x1, sp, 520	//,,
	mov	x0, 241	//,
// linux-perf-events.h:45:       attribs.config = config;
	str	x6, [sp, 528]	// MEM[base: _2060, offset: 0], unified.attribs.config
// linux-perf-events.h:46:       fd = syscall(__NR_perf_event_open, &attribs, pid, cpu, group, flags);
	bl	syscall		//
// linux-perf-events.h:46:       fd = syscall(__NR_perf_event_open, &attribs, pid, cpu, group, flags);
	str	w0, [sp, 512]	// _258, unified.fd
// linux-perf-events.h:47:       if (fd == -1) {
	cmn	w0, #1	// _258,
	bne	.L4488		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x1, .LC7	// tmp806,
	adrp	x2, .LC7+15	// tmp808,
	add	x1, x1, :lo12:.LC7	//, tmp806,
	add	x2, x2, :lo12:.LC7+15	//, tmp808,
	mov	w3, 0	//,
	add	x0, sp, 416	// tmp1478,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	str	x27, [sp, 416]	// tmp1448, MEM[(struct _Alloc_hider *)&D.66146]._M_p
.LEHB305:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE305:
// linux-perf-events.h:88:     if (working)
	ldrb	w0, [sp, 516]	// unified.working, unified.working
	ldr	x23, [sp, 416]	// pretmp_286, MEM[(const struct basic_string *)&D.66146]
	cbnz	w0, .L5009	// unified.working,
.L4489:
// linux-perf-events.h:90:     working = false;
	strb	wzr, [sp, 516]	//, unified.working
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x23, x27	// pretmp_286, tmp1448
	beq	.L4514		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x23	//, pretmp_286
	bl	_ZdlPv		//
.L4514:
	ldr	w0, [sp, 512]	//, unified.fd
	b	.L4488		//
.L4523:
// linux-perf-events.h:56:     temp_result_vec.resize(num_events * 2 + 1);
	ldr	w0, [sp, 632]	//, unified.num_events
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:826: 	if (__new_size > size())
	ldr	x3, [sp, 640]	// _373, MEM[(long unsigned int * *)&unified + 128B]
	ldr	x2, [sp, 648]	// _374, MEM[(long unsigned int * *)&unified + 136B]
// linux-perf-events.h:56:     temp_result_vec.resize(num_events * 2 + 1);
	lsl	w0, w0, 1	// tmp794, unified.num_events,
// linux-perf-events.h:56:     temp_result_vec.resize(num_events * 2 + 1);
	add	w0, w0, 1	// _272, tmp794,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x1, x2, x3	// tmp796, _374, _373
// linux-perf-events.h:56:     temp_result_vec.resize(num_events * 2 + 1);
	sxtw	x0, w0	// _273, _272
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	asr	x1, x1, 3	// tmp797, tmp796,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:826: 	if (__new_size > size())
	cmp	x0, x1	// _273, tmp797
	bhi	.L5010		//,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:828: 	else if (__new_size < size())
	bcc	.L5011		//,
.L4525:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x26, .L4532	// _240,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x26	//, _240
	bl	_ZdlPv		//
.L4532:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldp	x0, x1, [sp, 176]	// MEM[(int * *)&evts], MEM[(int * *)&evts + 8B], MEM[(int * *)&evts]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:96: 	: _Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [sp, 200]	//,, MEM[(struct _Vector_impl *)&results]._M_start
	stp	xzr, xzr, [sp, 216]	//,, MEM[(struct _Vector_impl *)&results]._M_end_of_storage
	stp	xzr, xzr, [sp, 232]	//,, MEM[(struct _Vector_impl *)&allresults]._M_finish
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x1, x1, x0	// tmp905, MEM[(int * *)&evts + 8B], MEM[(int * *)&evts]
	asr	x1, x1, 2	// tmp908, tmp905,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:826: 	if (__new_size > size())
	cbnz	x1, .L4533	// tmp908,
.L4535:
// bitmapdecoding.cpp:519:   init_buf(&b, 64 * wordcount);
	ldr	x1, [sp, 136]	// wordcount, wordcount
	add	x0, sp, 248	// tmp1497,,
	lsl	x1, x1, 6	//, wordcount,
.LEHB306:
	bl	_Z8init_bufP5buf_sm		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x22, sp, 432	// tmp1443,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x24, sp, 368	// tmp1445,,
// bitmapdecoding.cpp:519:   init_buf(&b, 64 * wordcount);
	mov	w21, 10	// ivtmp_2101,
	.p2align 3
.L4534:
// linux-perf-events.h:62:     if (ioctl(fd, PERF_EVENT_IOC_RESET, PERF_IOC_FLAG_GROUP) == -1) {
	ldr	w0, [sp, 512]	//, unified.fd
	mov	w2, 1	//,
	mov	x1, 9219	//,
	bl	ioctl		//
// linux-perf-events.h:62:     if (ioctl(fd, PERF_EVENT_IOC_RESET, PERF_IOC_FLAG_GROUP) == -1) {
	cmn	w0, #1	//,
	beq	.L5012		//,
.L4536:
// linux-perf-events.h:66:     if (ioctl(fd, PERF_EVENT_IOC_ENABLE, PERF_IOC_FLAG_GROUP) == -1) {
	ldr	w0, [sp, 512]	//, unified.fd
	mov	w2, 1	//,
	mov	x1, 9216	//,
	bl	ioctl		//
// linux-perf-events.h:66:     if (ioctl(fd, PERF_EVENT_IOC_ENABLE, PERF_IOC_FLAG_GROUP) == -1) {
	cmn	w0, #1	//,
	beq	.L5013		//,
.L4569:
// bitmapdecoding.cpp:344:     b->buffer[i] = b->initbuffer[i];
	ldp	x2, x3, [sp, 256]	// _113, _118, b.buffer
// bitmapdecoding.cpp:344:     b->buffer[i] = b->initbuffer[i];
	mov	x0, 8	// ivtmp.1631,
// bitmapdecoding.cpp:342:   b->matches = 0;
	str	wzr, [sp, 248]	//, b.matches
	.p2align 3
.L4605:
// bitmapdecoding.cpp:344:     b->buffer[i] = b->initbuffer[i];
	ldr	x1, [x3, x0]	// _110, MEM[base: _118, index: ivtmp.1631_2065, offset: 0B]
// bitmapdecoding.cpp:344:     b->buffer[i] = b->initbuffer[i];
	str	x1, [x2, x0]	// _110, MEM[base: _113, index: ivtmp.1631_2065, offset: 0B]
	add	x0, x0, 8	// ivtmp.1631, ivtmp.1631,
// bitmapdecoding.cpp:343:   for (int i = 1; i <= 64; i++) {
	cmp	x0, 520	// ivtmp.1631,
	bne	.L4605		//,
// bitmapdecoding.cpp:524:     for (size_t idx = 0; idx < wordcount; idx++) {
	ldr	x9, [sp, 136]	// wordcount.21_1589, wordcount
	mov	w10, 0	// b__lsm.1568,
	mov	w7, 0	// b__lsm.1567,
// bitmapdecoding.cpp:524:     for (size_t idx = 0; idx < wordcount; idx++) {
	mov	x0, 0	// idx,
// bitmapdecoding.cpp:524:     for (size_t idx = 0; idx < wordcount; idx++) {
	cbz	x9, .L4607	// wordcount.21_1589,
	.p2align 3
.L4606:
// bitmapdecoding.cpp:525:       sorter(array[idx], idx, &b);
	ldr	x4, [x20, x0, lsl 3]	// _7, MEM[base: _66, index: idx_358, step: 8, offset: 0B]
// bitmapdecoding.cpp:321:   if (bits != 0) {
	cbz	x4, .L4608	// _7,
// bitmapdecoding.cpp:44:   return __builtin_popcountll(input_num);
	fmov	d0, x4	// tmp1521, _7
// bitmapdecoding.cpp:327:     b->matches += cnt;
	mov	w10, 1	// b__lsm.1568,
// bitmapdecoding.cpp:44:   return __builtin_popcountll(input_num);
	cnt	v0.8b, v0.8b	// tmp1091, tmp1521
	addv	b0, v0.8b	// tmp1093, tmp1091
	umov	w1, v0.b[0]	// tmp1092, tmp1093,
	and	x1, x1, 255	// tmp1089, tmp1092
// bitmapdecoding.cpp:323:     b->buffer[cnt]->idx = idx;
	sxtw	x8, w1	// _108, tmp1089
	ldr	x6, [x2, x8, lsl 3]	// _160, *_159
// bitmapdecoding.cpp:325:     b->buffer[cnt]->word = bits;
	mov	x5, x6	// tmp1097, _160
// bitmapdecoding.cpp:324:     b->buffer[cnt]->location = b->matches;
	stp	w0, w7, [x6, 8]	// idx, b__lsm.1567, _160->idx
// bitmapdecoding.cpp:327:     b->matches += cnt;
	add	w7, w7, w1	// b__lsm.1567, b__lsm.1567, tmp1089
// bitmapdecoding.cpp:325:     b->buffer[cnt]->word = bits;
	str	x4, [x5], 16	// _7, _160->word
// bitmapdecoding.cpp:326:     b->buffer[cnt]++;
	str	x5, [x2, x8, lsl 3]	// tmp1097, *_159
.L4608:
// bitmapdecoding.cpp:524:     for (size_t idx = 0; idx < wordcount; idx++) {
	add	x0, x0, 1	// idx, idx,
// bitmapdecoding.cpp:524:     for (size_t idx = 0; idx < wordcount; idx++) {
	cmp	x0, x9	// idx, wordcount.21_1589
	bne	.L4606		//,
	cbz	w10, .L4607	// b__lsm.1568,
	str	w7, [sp, 248]	// b__lsm.1567, MEM[(uint32_t *)&b]
.L4607:
// bitmapdecoding.cpp:371:   if (bfinal->initbuffer[1] != bfinal->buffer[1])
	ldr	x1, [x2, 8]	// _603, MEM[(struct lead_t * *)_113 + 8B]
// bitmapdecoding.cpp:371:   if (bfinal->initbuffer[1] != bfinal->buffer[1])
	ldr	x0, [x3, 8]	// _601, MEM[(struct lead_t * *)_118 + 8B]
// bitmapdecoding.cpp:371:   if (bfinal->initbuffer[1] != bfinal->buffer[1])
	cmp	x0, x1	// _601, _603
	beq	.L4610		//,
// bitmapdecoding.cpp:372:     unpack<1>(bfinal->initbuffer[1], bfinal->buffer[1], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj1EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4610:
// bitmapdecoding.cpp:373:   if (bfinal->initbuffer[2] != bfinal->buffer[2])
	ldr	x1, [x2, 16]	// _607, MEM[(struct lead_t * *)prephitmp_1843 + 16B]
// bitmapdecoding.cpp:373:   if (bfinal->initbuffer[2] != bfinal->buffer[2])
	ldr	x0, [x3, 16]	// _605, MEM[(struct lead_t * *)prephitmp_1018 + 16B]
// bitmapdecoding.cpp:373:   if (bfinal->initbuffer[2] != bfinal->buffer[2])
	cmp	x0, x1	// _605, _607
	beq	.L4611		//,
// bitmapdecoding.cpp:374:     unpack<2>(bfinal->initbuffer[2], bfinal->buffer[2], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj2EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4611:
// bitmapdecoding.cpp:375:   if (bfinal->initbuffer[3] != bfinal->buffer[3])
	ldr	x1, [x2, 24]	// _611, MEM[(struct lead_t * *)prephitmp_1016 + 24B]
// bitmapdecoding.cpp:375:   if (bfinal->initbuffer[3] != bfinal->buffer[3])
	ldr	x0, [x3, 24]	// _609, MEM[(struct lead_t * *)prephitmp_1844 + 24B]
// bitmapdecoding.cpp:375:   if (bfinal->initbuffer[3] != bfinal->buffer[3])
	cmp	x0, x1	// _609, _611
	beq	.L4612		//,
// bitmapdecoding.cpp:376:     unpack<3>(bfinal->initbuffer[3], bfinal->buffer[3], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj3EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4612:
// bitmapdecoding.cpp:377:   if (bfinal->initbuffer[4] != bfinal->buffer[4])
	ldr	x1, [x2, 32]	// _615, MEM[(struct lead_t * *)prephitmp_285 + 32B]
// bitmapdecoding.cpp:377:   if (bfinal->initbuffer[4] != bfinal->buffer[4])
	ldr	x0, [x3, 32]	// _613, MEM[(struct lead_t * *)prephitmp_281 + 32B]
// bitmapdecoding.cpp:377:   if (bfinal->initbuffer[4] != bfinal->buffer[4])
	cmp	x0, x1	// _613, _615
	beq	.L4613		//,
// bitmapdecoding.cpp:378:     unpack<4>(bfinal->initbuffer[4], bfinal->buffer[4], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj4EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4613:
// bitmapdecoding.cpp:379:   if (bfinal->initbuffer[5] != bfinal->buffer[5])
	ldr	x1, [x2, 40]	// _619, MEM[(struct lead_t * *)prephitmp_474 + 40B]
// bitmapdecoding.cpp:379:   if (bfinal->initbuffer[5] != bfinal->buffer[5])
	ldr	x0, [x3, 40]	// _617, MEM[(struct lead_t * *)prephitmp_1406 + 40B]
// bitmapdecoding.cpp:379:   if (bfinal->initbuffer[5] != bfinal->buffer[5])
	cmp	x0, x1	// _617, _619
	beq	.L4614		//,
// bitmapdecoding.cpp:380:     unpack<5>(bfinal->initbuffer[5], bfinal->buffer[5], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj5EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4614:
// bitmapdecoding.cpp:381:   if (bfinal->initbuffer[6] != bfinal->buffer[6])
	ldr	x1, [x2, 48]	// _623, MEM[(struct lead_t * *)prephitmp_904 + 48B]
// bitmapdecoding.cpp:381:   if (bfinal->initbuffer[6] != bfinal->buffer[6])
	ldr	x0, [x3, 48]	// _621, MEM[(struct lead_t * *)prephitmp_1739 + 48B]
// bitmapdecoding.cpp:381:   if (bfinal->initbuffer[6] != bfinal->buffer[6])
	cmp	x0, x1	// _621, _623
	beq	.L4615		//,
// bitmapdecoding.cpp:382:     unpack<6>(bfinal->initbuffer[6], bfinal->buffer[6], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj6EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4615:
// bitmapdecoding.cpp:383:   if (bfinal->initbuffer[7] != bfinal->buffer[7])
	ldr	x1, [x2, 56]	// _627, MEM[(struct lead_t * *)prephitmp_979 + 56B]
// bitmapdecoding.cpp:383:   if (bfinal->initbuffer[7] != bfinal->buffer[7])
	ldr	x0, [x3, 56]	// _625, MEM[(struct lead_t * *)prephitmp_892 + 56B]
// bitmapdecoding.cpp:383:   if (bfinal->initbuffer[7] != bfinal->buffer[7])
	cmp	x0, x1	// _625, _627
	beq	.L4616		//,
// bitmapdecoding.cpp:384:     unpack<7>(bfinal->initbuffer[7], bfinal->buffer[7], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj7EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4616:
// bitmapdecoding.cpp:385:   if (bfinal->initbuffer[8] != bfinal->buffer[8])
	ldr	x1, [x2, 64]	// _631, MEM[(struct lead_t * *)prephitmp_961 + 64B]
// bitmapdecoding.cpp:385:   if (bfinal->initbuffer[8] != bfinal->buffer[8])
	ldr	x0, [x3, 64]	// _629, MEM[(struct lead_t * *)prephitmp_945 + 64B]
// bitmapdecoding.cpp:385:   if (bfinal->initbuffer[8] != bfinal->buffer[8])
	cmp	x0, x1	// _629, _631
	beq	.L4617		//,
// bitmapdecoding.cpp:386:     unpack<8>(bfinal->initbuffer[8], bfinal->buffer[8], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj8EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4617:
// bitmapdecoding.cpp:387:   if (bfinal->initbuffer[9] != bfinal->buffer[9])
	ldr	x1, [x2, 72]	// _635, MEM[(struct lead_t * *)prephitmp_933 + 72B]
// bitmapdecoding.cpp:387:   if (bfinal->initbuffer[9] != bfinal->buffer[9])
	ldr	x0, [x3, 72]	// _633, MEM[(struct lead_t * *)prephitmp_975 + 72B]
// bitmapdecoding.cpp:387:   if (bfinal->initbuffer[9] != bfinal->buffer[9])
	cmp	x0, x1	// _633, _635
	beq	.L4618		//,
// bitmapdecoding.cpp:388:     unpack<9>(bfinal->initbuffer[9], bfinal->buffer[9], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj9EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4618:
// bitmapdecoding.cpp:389:   if (bfinal->initbuffer[10] != bfinal->buffer[10])
	ldr	x1, [x2, 80]	// _639, MEM[(struct lead_t * *)prephitmp_1753 + 80B]
// bitmapdecoding.cpp:389:   if (bfinal->initbuffer[10] != bfinal->buffer[10])
	ldr	x0, [x3, 80]	// _637, MEM[(struct lead_t * *)prephitmp_1750 + 80B]
// bitmapdecoding.cpp:389:   if (bfinal->initbuffer[10] != bfinal->buffer[10])
	cmp	x0, x1	// _637, _639
	beq	.L4619		//,
// bitmapdecoding.cpp:390:     unpack<10>(bfinal->initbuffer[10], bfinal->buffer[10], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj10EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4619:
// bitmapdecoding.cpp:391:   if (bfinal->initbuffer[11] != bfinal->buffer[11])
	ldr	x1, [x2, 88]	// _643, MEM[(struct lead_t * *)prephitmp_942 + 88B]
// bitmapdecoding.cpp:391:   if (bfinal->initbuffer[11] != bfinal->buffer[11])
	ldr	x0, [x3, 88]	// _641, MEM[(struct lead_t * *)prephitmp_1762 + 88B]
// bitmapdecoding.cpp:391:   if (bfinal->initbuffer[11] != bfinal->buffer[11])
	cmp	x0, x1	// _641, _643
	beq	.L4620		//,
// bitmapdecoding.cpp:392:     unpack<11>(bfinal->initbuffer[11], bfinal->buffer[11], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj11EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4620:
// bitmapdecoding.cpp:393:   if (bfinal->initbuffer[12] != bfinal->buffer[12])
	ldr	x1, [x2, 96]	// _647, MEM[(struct lead_t * *)prephitmp_910 + 96B]
// bitmapdecoding.cpp:393:   if (bfinal->initbuffer[12] != bfinal->buffer[12])
	ldr	x0, [x3, 96]	// _645, MEM[(struct lead_t * *)prephitmp_929 + 96B]
// bitmapdecoding.cpp:393:   if (bfinal->initbuffer[12] != bfinal->buffer[12])
	cmp	x0, x1	// _645, _647
	beq	.L4621		//,
// bitmapdecoding.cpp:394:     unpack<12>(bfinal->initbuffer[12], bfinal->buffer[12], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj12EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4621:
// bitmapdecoding.cpp:395:   if (bfinal->initbuffer[13] != bfinal->buffer[13])
	ldr	x1, [x2, 104]	// _651, MEM[(struct lead_t * *)prephitmp_516 + 104B]
// bitmapdecoding.cpp:395:   if (bfinal->initbuffer[13] != bfinal->buffer[13])
	ldr	x0, [x3, 104]	// _649, MEM[(struct lead_t * *)prephitmp_483 + 104B]
// bitmapdecoding.cpp:395:   if (bfinal->initbuffer[13] != bfinal->buffer[13])
	cmp	x0, x1	// _649, _651
	beq	.L4622		//,
// bitmapdecoding.cpp:396:     unpack<13>(bfinal->initbuffer[13], bfinal->buffer[13], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj13EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4622:
// bitmapdecoding.cpp:397:   if (bfinal->initbuffer[14] != bfinal->buffer[14])
	ldr	x1, [x2, 112]	// _655, MEM[(struct lead_t * *)prephitmp_484 + 112B]
// bitmapdecoding.cpp:397:   if (bfinal->initbuffer[14] != bfinal->buffer[14])
	ldr	x0, [x3, 112]	// _653, MEM[(struct lead_t * *)prephitmp_486 + 112B]
// bitmapdecoding.cpp:397:   if (bfinal->initbuffer[14] != bfinal->buffer[14])
	cmp	x0, x1	// _653, _655
	beq	.L4623		//,
// bitmapdecoding.cpp:398:     unpack<14>(bfinal->initbuffer[14], bfinal->buffer[14], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj14EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4623:
// bitmapdecoding.cpp:399:   if (bfinal->initbuffer[15] != bfinal->buffer[15])
	ldr	x1, [x2, 120]	// _659, MEM[(struct lead_t * *)prephitmp_856 + 120B]
// bitmapdecoding.cpp:399:   if (bfinal->initbuffer[15] != bfinal->buffer[15])
	ldr	x0, [x3, 120]	// _657, MEM[(struct lead_t * *)prephitmp_1897 + 120B]
// bitmapdecoding.cpp:399:   if (bfinal->initbuffer[15] != bfinal->buffer[15])
	cmp	x0, x1	// _657, _659
	beq	.L4624		//,
// bitmapdecoding.cpp:400:     unpack<15>(bfinal->initbuffer[15], bfinal->buffer[15], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj15EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4624:
// bitmapdecoding.cpp:401:   if (bfinal->initbuffer[16] != bfinal->buffer[16])
	ldr	x1, [x2, 128]	// _663, MEM[(struct lead_t * *)prephitmp_561 + 128B]
// bitmapdecoding.cpp:401:   if (bfinal->initbuffer[16] != bfinal->buffer[16])
	ldr	x0, [x3, 128]	// _661, MEM[(struct lead_t * *)prephitmp_559 + 128B]
// bitmapdecoding.cpp:401:   if (bfinal->initbuffer[16] != bfinal->buffer[16])
	cmp	x0, x1	// _661, _663
	beq	.L4625		//,
// bitmapdecoding.cpp:402:     unpack<16>(bfinal->initbuffer[16], bfinal->buffer[16], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj16EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4625:
// bitmapdecoding.cpp:403:   if (bfinal->initbuffer[17] != bfinal->buffer[17])
	ldr	x1, [x2, 136]	// _667, MEM[(struct lead_t * *)prephitmp_570 + 136B]
// bitmapdecoding.cpp:403:   if (bfinal->initbuffer[17] != bfinal->buffer[17])
	ldr	x0, [x3, 136]	// _665, MEM[(struct lead_t * *)prephitmp_568 + 136B]
// bitmapdecoding.cpp:403:   if (bfinal->initbuffer[17] != bfinal->buffer[17])
	cmp	x0, x1	// _665, _667
	beq	.L4626		//,
// bitmapdecoding.cpp:404:     unpack<17>(bfinal->initbuffer[17], bfinal->buffer[17], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj17EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4626:
// bitmapdecoding.cpp:405:   if (bfinal->initbuffer[18] != bfinal->buffer[18])
	ldr	x1, [x2, 144]	// _671, MEM[(struct lead_t * *)prephitmp_467 + 144B]
// bitmapdecoding.cpp:405:   if (bfinal->initbuffer[18] != bfinal->buffer[18])
	ldr	x0, [x3, 144]	// _669, MEM[(struct lead_t * *)prephitmp_1894 + 144B]
// bitmapdecoding.cpp:405:   if (bfinal->initbuffer[18] != bfinal->buffer[18])
	cmp	x0, x1	// _669, _671
	beq	.L4627		//,
// bitmapdecoding.cpp:406:     unpack<18>(bfinal->initbuffer[18], bfinal->buffer[18], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj18EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4627:
// bitmapdecoding.cpp:407:   if (bfinal->initbuffer[19] != bfinal->buffer[19])
	ldr	x1, [x2, 152]	// _675, MEM[(struct lead_t * *)prephitmp_546 + 152B]
// bitmapdecoding.cpp:407:   if (bfinal->initbuffer[19] != bfinal->buffer[19])
	ldr	x0, [x3, 152]	// _673, MEM[(struct lead_t * *)prephitmp_1611 + 152B]
// bitmapdecoding.cpp:407:   if (bfinal->initbuffer[19] != bfinal->buffer[19])
	cmp	x0, x1	// _673, _675
	beq	.L4628		//,
// bitmapdecoding.cpp:408:     unpack<19>(bfinal->initbuffer[19], bfinal->buffer[19], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj19EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4628:
// bitmapdecoding.cpp:409:   if (bfinal->initbuffer[20] != bfinal->buffer[20])
	ldr	x1, [x2, 160]	// _679, MEM[(struct lead_t * *)prephitmp_246 + 160B]
// bitmapdecoding.cpp:409:   if (bfinal->initbuffer[20] != bfinal->buffer[20])
	ldr	x0, [x3, 160]	// _677, MEM[(struct lead_t * *)prephitmp_520 + 160B]
// bitmapdecoding.cpp:409:   if (bfinal->initbuffer[20] != bfinal->buffer[20])
	cmp	x0, x1	// _677, _679
	beq	.L4629		//,
// bitmapdecoding.cpp:410:     unpack<20>(bfinal->initbuffer[20], bfinal->buffer[20], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj20EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4629:
// bitmapdecoding.cpp:411:   if (bfinal->initbuffer[21] != bfinal->buffer[21])
	ldr	x1, [x2, 168]	// _683, MEM[(struct lead_t * *)prephitmp_1004 + 168B]
// bitmapdecoding.cpp:411:   if (bfinal->initbuffer[21] != bfinal->buffer[21])
	ldr	x0, [x3, 168]	// _681, MEM[(struct lead_t * *)prephitmp_1067 + 168B]
// bitmapdecoding.cpp:411:   if (bfinal->initbuffer[21] != bfinal->buffer[21])
	cmp	x0, x1	// _681, _683
	beq	.L4630		//,
// bitmapdecoding.cpp:412:     unpack<21>(bfinal->initbuffer[21], bfinal->buffer[21], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj21EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4630:
// bitmapdecoding.cpp:413:   if (bfinal->initbuffer[22] != bfinal->buffer[22])
	ldr	x1, [x2, 176]	// _687, MEM[(struct lead_t * *)prephitmp_966 + 176B]
// bitmapdecoding.cpp:413:   if (bfinal->initbuffer[22] != bfinal->buffer[22])
	ldr	x0, [x3, 176]	// _685, MEM[(struct lead_t * *)prephitmp_967 + 176B]
// bitmapdecoding.cpp:413:   if (bfinal->initbuffer[22] != bfinal->buffer[22])
	cmp	x0, x1	// _685, _687
	beq	.L4631		//,
// bitmapdecoding.cpp:414:     unpack<22>(bfinal->initbuffer[22], bfinal->buffer[22], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj22EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4631:
// bitmapdecoding.cpp:415:   if (bfinal->initbuffer[23] != bfinal->buffer[23])
	ldr	x1, [x2, 184]	// _691, MEM[(struct lead_t * *)prephitmp_879 + 184B]
// bitmapdecoding.cpp:415:   if (bfinal->initbuffer[23] != bfinal->buffer[23])
	ldr	x0, [x3, 184]	// _689, MEM[(struct lead_t * *)prephitmp_917 + 184B]
// bitmapdecoding.cpp:415:   if (bfinal->initbuffer[23] != bfinal->buffer[23])
	cmp	x0, x1	// _689, _691
	beq	.L4632		//,
// bitmapdecoding.cpp:416:     unpack<23>(bfinal->initbuffer[23], bfinal->buffer[23], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj23EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4632:
// bitmapdecoding.cpp:417:   if (bfinal->initbuffer[24] != bfinal->buffer[24])
	ldr	x1, [x2, 192]	// _695, MEM[(struct lead_t * *)prephitmp_1516 + 192B]
// bitmapdecoding.cpp:417:   if (bfinal->initbuffer[24] != bfinal->buffer[24])
	ldr	x0, [x3, 192]	// _693, MEM[(struct lead_t * *)prephitmp_1124 + 192B]
// bitmapdecoding.cpp:417:   if (bfinal->initbuffer[24] != bfinal->buffer[24])
	cmp	x0, x1	// _693, _695
	beq	.L4633		//,
// bitmapdecoding.cpp:418:     unpack<24>(bfinal->initbuffer[24], bfinal->buffer[24], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj24EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4633:
// bitmapdecoding.cpp:419:   if (bfinal->initbuffer[25] != bfinal->buffer[25])
	ldr	x1, [x2, 200]	// _699, MEM[(struct lead_t * *)prephitmp_451 + 200B]
// bitmapdecoding.cpp:419:   if (bfinal->initbuffer[25] != bfinal->buffer[25])
	ldr	x0, [x3, 200]	// _697, MEM[(struct lead_t * *)prephitmp_1117 + 200B]
// bitmapdecoding.cpp:419:   if (bfinal->initbuffer[25] != bfinal->buffer[25])
	cmp	x0, x1	// _697, _699
	beq	.L4634		//,
// bitmapdecoding.cpp:420:     unpack<25>(bfinal->initbuffer[25], bfinal->buffer[25], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj25EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4634:
// bitmapdecoding.cpp:421:   if (bfinal->initbuffer[26] != bfinal->buffer[26])
	ldr	x1, [x2, 208]	// _703, MEM[(struct lead_t * *)prephitmp_459 + 208B]
// bitmapdecoding.cpp:421:   if (bfinal->initbuffer[26] != bfinal->buffer[26])
	ldr	x0, [x3, 208]	// _701, MEM[(struct lead_t * *)prephitmp_445 + 208B]
// bitmapdecoding.cpp:421:   if (bfinal->initbuffer[26] != bfinal->buffer[26])
	cmp	x0, x1	// _701, _703
	beq	.L4635		//,
// bitmapdecoding.cpp:422:     unpack<26>(bfinal->initbuffer[26], bfinal->buffer[26], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj26EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4635:
// bitmapdecoding.cpp:423:   if (bfinal->initbuffer[27] != bfinal->buffer[27])
	ldr	x1, [x2, 216]	// _707, MEM[(struct lead_t * *)prephitmp_398 + 216B]
// bitmapdecoding.cpp:423:   if (bfinal->initbuffer[27] != bfinal->buffer[27])
	ldr	x0, [x3, 216]	// _705, MEM[(struct lead_t * *)prephitmp_1883 + 216B]
// bitmapdecoding.cpp:423:   if (bfinal->initbuffer[27] != bfinal->buffer[27])
	cmp	x0, x1	// _705, _707
	beq	.L4636		//,
// bitmapdecoding.cpp:424:     unpack<27>(bfinal->initbuffer[27], bfinal->buffer[27], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj27EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4636:
// bitmapdecoding.cpp:425:   if (bfinal->initbuffer[28] != bfinal->buffer[28])
	ldr	x1, [x2, 224]	// _711, MEM[(struct lead_t * *)prephitmp_1874 + 224B]
// bitmapdecoding.cpp:425:   if (bfinal->initbuffer[28] != bfinal->buffer[28])
	ldr	x0, [x3, 224]	// _709, MEM[(struct lead_t * *)prephitmp_415 + 224B]
// bitmapdecoding.cpp:425:   if (bfinal->initbuffer[28] != bfinal->buffer[28])
	cmp	x0, x1	// _709, _711
	beq	.L4637		//,
// bitmapdecoding.cpp:426:     unpack<28>(bfinal->initbuffer[28], bfinal->buffer[28], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj28EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4637:
// bitmapdecoding.cpp:427:   if (bfinal->initbuffer[29] != bfinal->buffer[29])
	ldr	x1, [x2, 232]	// _715, MEM[(struct lead_t * *)prephitmp_245 + 232B]
// bitmapdecoding.cpp:427:   if (bfinal->initbuffer[29] != bfinal->buffer[29])
	ldr	x0, [x3, 232]	// _713, MEM[(struct lead_t * *)prephitmp_397 + 232B]
// bitmapdecoding.cpp:427:   if (bfinal->initbuffer[29] != bfinal->buffer[29])
	cmp	x0, x1	// _713, _715
	beq	.L4638		//,
// bitmapdecoding.cpp:428:     unpack<29>(bfinal->initbuffer[29], bfinal->buffer[29], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj29EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4638:
// bitmapdecoding.cpp:429:   if (bfinal->initbuffer[30] != bfinal->buffer[30])
	ldr	x1, [x2, 240]	// _719, MEM[(struct lead_t * *)prephitmp_309 + 240B]
// bitmapdecoding.cpp:429:   if (bfinal->initbuffer[30] != bfinal->buffer[30])
	ldr	x0, [x3, 240]	// _717, MEM[(struct lead_t * *)prephitmp_310 + 240B]
// bitmapdecoding.cpp:429:   if (bfinal->initbuffer[30] != bfinal->buffer[30])
	cmp	x0, x1	// _717, _719
	beq	.L4639		//,
// bitmapdecoding.cpp:430:     unpack<30>(bfinal->initbuffer[30], bfinal->buffer[30], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj30EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4639:
// bitmapdecoding.cpp:431:   if (bfinal->initbuffer[31] != bfinal->buffer[31])
	ldr	x1, [x2, 248]	// _723, MEM[(struct lead_t * *)prephitmp_458 + 248B]
// bitmapdecoding.cpp:431:   if (bfinal->initbuffer[31] != bfinal->buffer[31])
	ldr	x0, [x3, 248]	// _721, MEM[(struct lead_t * *)prephitmp_508 + 248B]
// bitmapdecoding.cpp:431:   if (bfinal->initbuffer[31] != bfinal->buffer[31])
	cmp	x0, x1	// _721, _723
	beq	.L4640		//,
// bitmapdecoding.cpp:432:     unpack<31>(bfinal->initbuffer[31], bfinal->buffer[31], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj31EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4640:
// bitmapdecoding.cpp:433:   if (bfinal->initbuffer[32] != bfinal->buffer[32])
	ldr	x1, [x2, 256]	// _727, MEM[(struct lead_t * *)prephitmp_367 + 256B]
// bitmapdecoding.cpp:433:   if (bfinal->initbuffer[32] != bfinal->buffer[32])
	ldr	x0, [x3, 256]	// _725, MEM[(struct lead_t * *)prephitmp_385 + 256B]
// bitmapdecoding.cpp:433:   if (bfinal->initbuffer[32] != bfinal->buffer[32])
	cmp	x0, x1	// _725, _727
	beq	.L4641		//,
// bitmapdecoding.cpp:434:     unpack<32>(bfinal->initbuffer[32], bfinal->buffer[32], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj32EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4641:
// bitmapdecoding.cpp:435:   if (bfinal->initbuffer[33] != bfinal->buffer[33])
	ldr	x1, [x2, 264]	// _731, MEM[(struct lead_t * *)prephitmp_919 + 264B]
// bitmapdecoding.cpp:435:   if (bfinal->initbuffer[33] != bfinal->buffer[33])
	ldr	x0, [x3, 264]	// _729, MEM[(struct lead_t * *)prephitmp_460 + 264B]
// bitmapdecoding.cpp:435:   if (bfinal->initbuffer[33] != bfinal->buffer[33])
	cmp	x0, x1	// _729, _731
	beq	.L4642		//,
// bitmapdecoding.cpp:436:     unpack<33>(bfinal->initbuffer[33], bfinal->buffer[33], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj33EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4642:
// bitmapdecoding.cpp:437:   if (bfinal->initbuffer[34] != bfinal->buffer[34])
	ldr	x1, [x2, 272]	// _735, MEM[(struct lead_t * *)prephitmp_2111 + 272B]
// bitmapdecoding.cpp:437:   if (bfinal->initbuffer[34] != bfinal->buffer[34])
	ldr	x0, [x3, 272]	// _733, MEM[(struct lead_t * *)prephitmp_1162 + 272B]
// bitmapdecoding.cpp:437:   if (bfinal->initbuffer[34] != bfinal->buffer[34])
	cmp	x0, x1	// _733, _735
	beq	.L4643		//,
// bitmapdecoding.cpp:438:     unpack<34>(bfinal->initbuffer[34], bfinal->buffer[34], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj34EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4643:
// bitmapdecoding.cpp:439:   if (bfinal->initbuffer[35] != bfinal->buffer[35])
	ldr	x1, [x2, 280]	// _739, MEM[(struct lead_t * *)prephitmp_2115 + 280B]
// bitmapdecoding.cpp:439:   if (bfinal->initbuffer[35] != bfinal->buffer[35])
	ldr	x0, [x3, 280]	// _737, MEM[(struct lead_t * *)prephitmp_2113 + 280B]
// bitmapdecoding.cpp:439:   if (bfinal->initbuffer[35] != bfinal->buffer[35])
	cmp	x0, x1	// _737, _739
	beq	.L4644		//,
// bitmapdecoding.cpp:440:     unpack<35>(bfinal->initbuffer[35], bfinal->buffer[35], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj35EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4644:
// bitmapdecoding.cpp:441:   if (bfinal->initbuffer[36] != bfinal->buffer[36])
	ldr	x1, [x2, 288]	// _743, MEM[(struct lead_t * *)prephitmp_2119 + 288B]
// bitmapdecoding.cpp:441:   if (bfinal->initbuffer[36] != bfinal->buffer[36])
	ldr	x0, [x3, 288]	// _741, MEM[(struct lead_t * *)prephitmp_2117 + 288B]
// bitmapdecoding.cpp:441:   if (bfinal->initbuffer[36] != bfinal->buffer[36])
	cmp	x0, x1	// _741, _743
	beq	.L4645		//,
// bitmapdecoding.cpp:442:     unpack<36>(bfinal->initbuffer[36], bfinal->buffer[36], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj36EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4645:
// bitmapdecoding.cpp:443:   if (bfinal->initbuffer[37] != bfinal->buffer[37])
	ldr	x1, [x2, 296]	// _747, MEM[(struct lead_t * *)prephitmp_2123 + 296B]
// bitmapdecoding.cpp:443:   if (bfinal->initbuffer[37] != bfinal->buffer[37])
	ldr	x0, [x3, 296]	// _745, MEM[(struct lead_t * *)prephitmp_2121 + 296B]
// bitmapdecoding.cpp:443:   if (bfinal->initbuffer[37] != bfinal->buffer[37])
	cmp	x0, x1	// _745, _747
	beq	.L4646		//,
// bitmapdecoding.cpp:444:     unpack<37>(bfinal->initbuffer[37], bfinal->buffer[37], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj37EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4646:
// bitmapdecoding.cpp:445:   if (bfinal->initbuffer[38] != bfinal->buffer[38])
	ldr	x1, [x2, 304]	// _751, MEM[(struct lead_t * *)prephitmp_2127 + 304B]
// bitmapdecoding.cpp:445:   if (bfinal->initbuffer[38] != bfinal->buffer[38])
	ldr	x0, [x3, 304]	// _749, MEM[(struct lead_t * *)prephitmp_2125 + 304B]
// bitmapdecoding.cpp:445:   if (bfinal->initbuffer[38] != bfinal->buffer[38])
	cmp	x0, x1	// _749, _751
	beq	.L4647		//,
// bitmapdecoding.cpp:446:     unpack<38>(bfinal->initbuffer[38], bfinal->buffer[38], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj38EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4647:
// bitmapdecoding.cpp:447:   if (bfinal->initbuffer[39] != bfinal->buffer[39])
	ldr	x1, [x2, 312]	// _755, MEM[(struct lead_t * *)prephitmp_2131 + 312B]
// bitmapdecoding.cpp:447:   if (bfinal->initbuffer[39] != bfinal->buffer[39])
	ldr	x0, [x3, 312]	// _753, MEM[(struct lead_t * *)prephitmp_2129 + 312B]
// bitmapdecoding.cpp:447:   if (bfinal->initbuffer[39] != bfinal->buffer[39])
	cmp	x0, x1	// _753, _755
	beq	.L4648		//,
// bitmapdecoding.cpp:448:     unpack<39>(bfinal->initbuffer[39], bfinal->buffer[39], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj39EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4648:
// bitmapdecoding.cpp:449:   if (bfinal->initbuffer[40] != bfinal->buffer[40])
	ldr	x1, [x2, 320]	// _759, MEM[(struct lead_t * *)prephitmp_2135 + 320B]
// bitmapdecoding.cpp:449:   if (bfinal->initbuffer[40] != bfinal->buffer[40])
	ldr	x0, [x3, 320]	// _757, MEM[(struct lead_t * *)prephitmp_2133 + 320B]
// bitmapdecoding.cpp:449:   if (bfinal->initbuffer[40] != bfinal->buffer[40])
	cmp	x0, x1	// _757, _759
	beq	.L4649		//,
// bitmapdecoding.cpp:450:     unpack<40>(bfinal->initbuffer[40], bfinal->buffer[40], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj40EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4649:
// bitmapdecoding.cpp:451:   if (bfinal->initbuffer[41] != bfinal->buffer[41])
	ldr	x1, [x2, 328]	// _763, MEM[(struct lead_t * *)prephitmp_2139 + 328B]
// bitmapdecoding.cpp:451:   if (bfinal->initbuffer[41] != bfinal->buffer[41])
	ldr	x0, [x3, 328]	// _761, MEM[(struct lead_t * *)prephitmp_2137 + 328B]
// bitmapdecoding.cpp:451:   if (bfinal->initbuffer[41] != bfinal->buffer[41])
	cmp	x0, x1	// _761, _763
	beq	.L4650		//,
// bitmapdecoding.cpp:452:     unpack<41>(bfinal->initbuffer[41], bfinal->buffer[41], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj41EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4650:
// bitmapdecoding.cpp:453:   if (bfinal->initbuffer[42] != bfinal->buffer[42])
	ldr	x1, [x2, 336]	// _767, MEM[(struct lead_t * *)prephitmp_2143 + 336B]
// bitmapdecoding.cpp:453:   if (bfinal->initbuffer[42] != bfinal->buffer[42])
	ldr	x0, [x3, 336]	// _765, MEM[(struct lead_t * *)prephitmp_2141 + 336B]
// bitmapdecoding.cpp:453:   if (bfinal->initbuffer[42] != bfinal->buffer[42])
	cmp	x0, x1	// _765, _767
	beq	.L4651		//,
// bitmapdecoding.cpp:454:     unpack<42>(bfinal->initbuffer[42], bfinal->buffer[42], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj42EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4651:
// bitmapdecoding.cpp:455:   if (bfinal->initbuffer[43] != bfinal->buffer[43])
	ldr	x1, [x2, 344]	// _771, MEM[(struct lead_t * *)prephitmp_2147 + 344B]
// bitmapdecoding.cpp:455:   if (bfinal->initbuffer[43] != bfinal->buffer[43])
	ldr	x0, [x3, 344]	// _769, MEM[(struct lead_t * *)prephitmp_2145 + 344B]
// bitmapdecoding.cpp:455:   if (bfinal->initbuffer[43] != bfinal->buffer[43])
	cmp	x0, x1	// _769, _771
	beq	.L4652		//,
// bitmapdecoding.cpp:456:     unpack<43>(bfinal->initbuffer[43], bfinal->buffer[43], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj43EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4652:
// bitmapdecoding.cpp:457:   if (bfinal->initbuffer[44] != bfinal->buffer[44])
	ldr	x1, [x2, 352]	// _775, MEM[(struct lead_t * *)prephitmp_2151 + 352B]
// bitmapdecoding.cpp:457:   if (bfinal->initbuffer[44] != bfinal->buffer[44])
	ldr	x0, [x3, 352]	// _773, MEM[(struct lead_t * *)prephitmp_2149 + 352B]
// bitmapdecoding.cpp:457:   if (bfinal->initbuffer[44] != bfinal->buffer[44])
	cmp	x0, x1	// _773, _775
	beq	.L4653		//,
// bitmapdecoding.cpp:458:     unpack<44>(bfinal->initbuffer[44], bfinal->buffer[44], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj44EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4653:
// bitmapdecoding.cpp:459:   if (bfinal->initbuffer[45] != bfinal->buffer[45])
	ldr	x1, [x2, 360]	// _779, MEM[(struct lead_t * *)prephitmp_2155 + 360B]
// bitmapdecoding.cpp:459:   if (bfinal->initbuffer[45] != bfinal->buffer[45])
	ldr	x0, [x3, 360]	// _777, MEM[(struct lead_t * *)prephitmp_2153 + 360B]
// bitmapdecoding.cpp:459:   if (bfinal->initbuffer[45] != bfinal->buffer[45])
	cmp	x0, x1	// _777, _779
	beq	.L4654		//,
// bitmapdecoding.cpp:460:     unpack<45>(bfinal->initbuffer[45], bfinal->buffer[45], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj45EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4654:
// bitmapdecoding.cpp:461:   if (bfinal->initbuffer[46] != bfinal->buffer[46])
	ldr	x1, [x2, 368]	// _783, MEM[(struct lead_t * *)prephitmp_2159 + 368B]
// bitmapdecoding.cpp:461:   if (bfinal->initbuffer[46] != bfinal->buffer[46])
	ldr	x0, [x3, 368]	// _781, MEM[(struct lead_t * *)prephitmp_2157 + 368B]
// bitmapdecoding.cpp:461:   if (bfinal->initbuffer[46] != bfinal->buffer[46])
	cmp	x0, x1	// _781, _783
	beq	.L4655		//,
// bitmapdecoding.cpp:462:     unpack<46>(bfinal->initbuffer[46], bfinal->buffer[46], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj46EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4655:
// bitmapdecoding.cpp:463:   if (bfinal->initbuffer[47] != bfinal->buffer[47])
	ldr	x1, [x2, 376]	// _787, MEM[(struct lead_t * *)prephitmp_2163 + 376B]
// bitmapdecoding.cpp:463:   if (bfinal->initbuffer[47] != bfinal->buffer[47])
	ldr	x0, [x3, 376]	// _785, MEM[(struct lead_t * *)prephitmp_2161 + 376B]
// bitmapdecoding.cpp:463:   if (bfinal->initbuffer[47] != bfinal->buffer[47])
	cmp	x0, x1	// _785, _787
	beq	.L4656		//,
// bitmapdecoding.cpp:464:     unpack<47>(bfinal->initbuffer[47], bfinal->buffer[47], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj47EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4656:
// bitmapdecoding.cpp:465:   if (bfinal->initbuffer[48] != bfinal->buffer[48])
	ldr	x1, [x2, 384]	// _791, MEM[(struct lead_t * *)prephitmp_2167 + 384B]
// bitmapdecoding.cpp:465:   if (bfinal->initbuffer[48] != bfinal->buffer[48])
	ldr	x0, [x3, 384]	// _789, MEM[(struct lead_t * *)prephitmp_2165 + 384B]
// bitmapdecoding.cpp:465:   if (bfinal->initbuffer[48] != bfinal->buffer[48])
	cmp	x0, x1	// _789, _791
	beq	.L4657		//,
// bitmapdecoding.cpp:466:     unpack<48>(bfinal->initbuffer[48], bfinal->buffer[48], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj48EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4657:
// bitmapdecoding.cpp:467:   if (bfinal->initbuffer[49] != bfinal->buffer[49])
	ldr	x1, [x2, 392]	// _795, MEM[(struct lead_t * *)prephitmp_2171 + 392B]
// bitmapdecoding.cpp:467:   if (bfinal->initbuffer[49] != bfinal->buffer[49])
	ldr	x0, [x3, 392]	// _793, MEM[(struct lead_t * *)prephitmp_2169 + 392B]
// bitmapdecoding.cpp:467:   if (bfinal->initbuffer[49] != bfinal->buffer[49])
	cmp	x0, x1	// _793, _795
	beq	.L4658		//,
// bitmapdecoding.cpp:468:     unpack<49>(bfinal->initbuffer[49], bfinal->buffer[49], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj49EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4658:
// bitmapdecoding.cpp:469:   if (bfinal->initbuffer[50] != bfinal->buffer[50])
	ldr	x1, [x2, 400]	// _799, MEM[(struct lead_t * *)prephitmp_2175 + 400B]
// bitmapdecoding.cpp:469:   if (bfinal->initbuffer[50] != bfinal->buffer[50])
	ldr	x0, [x3, 400]	// _797, MEM[(struct lead_t * *)prephitmp_2173 + 400B]
// bitmapdecoding.cpp:469:   if (bfinal->initbuffer[50] != bfinal->buffer[50])
	cmp	x0, x1	// _797, _799
	beq	.L4659		//,
// bitmapdecoding.cpp:470:     unpack<50>(bfinal->initbuffer[50], bfinal->buffer[50], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj50EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4659:
// bitmapdecoding.cpp:471:   if (bfinal->initbuffer[51] != bfinal->buffer[51])
	ldr	x1, [x2, 408]	// _803, MEM[(struct lead_t * *)prephitmp_2179 + 408B]
// bitmapdecoding.cpp:471:   if (bfinal->initbuffer[51] != bfinal->buffer[51])
	ldr	x0, [x3, 408]	// _801, MEM[(struct lead_t * *)prephitmp_2177 + 408B]
// bitmapdecoding.cpp:471:   if (bfinal->initbuffer[51] != bfinal->buffer[51])
	cmp	x0, x1	// _801, _803
	beq	.L4660		//,
// bitmapdecoding.cpp:472:     unpack<51>(bfinal->initbuffer[51], bfinal->buffer[51], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj51EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4660:
// bitmapdecoding.cpp:473:   if (bfinal->initbuffer[52] != bfinal->buffer[52])
	ldr	x1, [x2, 416]	// _807, MEM[(struct lead_t * *)prephitmp_2183 + 416B]
// bitmapdecoding.cpp:473:   if (bfinal->initbuffer[52] != bfinal->buffer[52])
	ldr	x0, [x3, 416]	// _805, MEM[(struct lead_t * *)prephitmp_2181 + 416B]
// bitmapdecoding.cpp:473:   if (bfinal->initbuffer[52] != bfinal->buffer[52])
	cmp	x0, x1	// _805, _807
	beq	.L4661		//,
// bitmapdecoding.cpp:474:     unpack<52>(bfinal->initbuffer[52], bfinal->buffer[52], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj52EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4661:
// bitmapdecoding.cpp:475:   if (bfinal->initbuffer[53] != bfinal->buffer[53])
	ldr	x1, [x2, 424]	// _811, MEM[(struct lead_t * *)prephitmp_2187 + 424B]
// bitmapdecoding.cpp:475:   if (bfinal->initbuffer[53] != bfinal->buffer[53])
	ldr	x0, [x3, 424]	// _809, MEM[(struct lead_t * *)prephitmp_2185 + 424B]
// bitmapdecoding.cpp:475:   if (bfinal->initbuffer[53] != bfinal->buffer[53])
	cmp	x0, x1	// _809, _811
	beq	.L4662		//,
// bitmapdecoding.cpp:476:     unpack<53>(bfinal->initbuffer[53], bfinal->buffer[53], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj53EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4662:
// bitmapdecoding.cpp:477:   if (bfinal->initbuffer[54] != bfinal->buffer[54])
	ldr	x1, [x2, 432]	// _815, MEM[(struct lead_t * *)prephitmp_2191 + 432B]
// bitmapdecoding.cpp:477:   if (bfinal->initbuffer[54] != bfinal->buffer[54])
	ldr	x0, [x3, 432]	// _813, MEM[(struct lead_t * *)prephitmp_2189 + 432B]
// bitmapdecoding.cpp:477:   if (bfinal->initbuffer[54] != bfinal->buffer[54])
	cmp	x0, x1	// _813, _815
	beq	.L4663		//,
// bitmapdecoding.cpp:478:     unpack<54>(bfinal->initbuffer[54], bfinal->buffer[54], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj54EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4663:
// bitmapdecoding.cpp:479:   if (bfinal->initbuffer[55] != bfinal->buffer[55])
	ldr	x1, [x2, 440]	// _819, MEM[(struct lead_t * *)prephitmp_2195 + 440B]
// bitmapdecoding.cpp:479:   if (bfinal->initbuffer[55] != bfinal->buffer[55])
	ldr	x0, [x3, 440]	// _817, MEM[(struct lead_t * *)prephitmp_2193 + 440B]
// bitmapdecoding.cpp:479:   if (bfinal->initbuffer[55] != bfinal->buffer[55])
	cmp	x0, x1	// _817, _819
	beq	.L4664		//,
// bitmapdecoding.cpp:480:     unpack<55>(bfinal->initbuffer[55], bfinal->buffer[55], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj55EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4664:
// bitmapdecoding.cpp:481:   if (bfinal->initbuffer[56] != bfinal->buffer[56])
	ldr	x1, [x2, 448]	// _823, MEM[(struct lead_t * *)prephitmp_2199 + 448B]
// bitmapdecoding.cpp:481:   if (bfinal->initbuffer[56] != bfinal->buffer[56])
	ldr	x0, [x3, 448]	// _821, MEM[(struct lead_t * *)prephitmp_2197 + 448B]
// bitmapdecoding.cpp:481:   if (bfinal->initbuffer[56] != bfinal->buffer[56])
	cmp	x0, x1	// _821, _823
	beq	.L4665		//,
// bitmapdecoding.cpp:482:     unpack<56>(bfinal->initbuffer[56], bfinal->buffer[56], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj56EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4665:
// bitmapdecoding.cpp:483:   if (bfinal->initbuffer[57] != bfinal->buffer[57])
	ldr	x1, [x2, 456]	// _827, MEM[(struct lead_t * *)prephitmp_2203 + 456B]
// bitmapdecoding.cpp:483:   if (bfinal->initbuffer[57] != bfinal->buffer[57])
	ldr	x0, [x3, 456]	// _825, MEM[(struct lead_t * *)prephitmp_2201 + 456B]
// bitmapdecoding.cpp:483:   if (bfinal->initbuffer[57] != bfinal->buffer[57])
	cmp	x0, x1	// _825, _827
	beq	.L4666		//,
// bitmapdecoding.cpp:484:     unpack<57>(bfinal->initbuffer[57], bfinal->buffer[57], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj57EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4666:
// bitmapdecoding.cpp:485:   if (bfinal->initbuffer[58] != bfinal->buffer[58])
	ldr	x1, [x2, 464]	// _831, MEM[(struct lead_t * *)prephitmp_2207 + 464B]
// bitmapdecoding.cpp:485:   if (bfinal->initbuffer[58] != bfinal->buffer[58])
	ldr	x0, [x3, 464]	// _829, MEM[(struct lead_t * *)prephitmp_2205 + 464B]
// bitmapdecoding.cpp:485:   if (bfinal->initbuffer[58] != bfinal->buffer[58])
	cmp	x0, x1	// _829, _831
	beq	.L4667		//,
// bitmapdecoding.cpp:486:     unpack<58>(bfinal->initbuffer[58], bfinal->buffer[58], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj58EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4667:
// bitmapdecoding.cpp:487:   if (bfinal->initbuffer[59] != bfinal->buffer[59])
	ldr	x1, [x2, 472]	// _835, MEM[(struct lead_t * *)prephitmp_2211 + 472B]
// bitmapdecoding.cpp:487:   if (bfinal->initbuffer[59] != bfinal->buffer[59])
	ldr	x0, [x3, 472]	// _833, MEM[(struct lead_t * *)prephitmp_2209 + 472B]
// bitmapdecoding.cpp:487:   if (bfinal->initbuffer[59] != bfinal->buffer[59])
	cmp	x0, x1	// _833, _835
	beq	.L4668		//,
// bitmapdecoding.cpp:488:     unpack<59>(bfinal->initbuffer[59], bfinal->buffer[59], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj59EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4668:
// bitmapdecoding.cpp:489:   if (bfinal->initbuffer[60] != bfinal->buffer[60])
	ldr	x1, [x2, 480]	// _839, MEM[(struct lead_t * *)prephitmp_2215 + 480B]
// bitmapdecoding.cpp:489:   if (bfinal->initbuffer[60] != bfinal->buffer[60])
	ldr	x0, [x3, 480]	// _837, MEM[(struct lead_t * *)prephitmp_2213 + 480B]
// bitmapdecoding.cpp:489:   if (bfinal->initbuffer[60] != bfinal->buffer[60])
	cmp	x0, x1	// _837, _839
	beq	.L4669		//,
// bitmapdecoding.cpp:490:     unpack<60>(bfinal->initbuffer[60], bfinal->buffer[60], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj60EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4669:
// bitmapdecoding.cpp:491:   if (bfinal->initbuffer[61] != bfinal->buffer[61])
	ldr	x1, [x2, 488]	// _843, MEM[(struct lead_t * *)prephitmp_2219 + 488B]
// bitmapdecoding.cpp:491:   if (bfinal->initbuffer[61] != bfinal->buffer[61])
	ldr	x0, [x3, 488]	// _841, MEM[(struct lead_t * *)prephitmp_2217 + 488B]
// bitmapdecoding.cpp:491:   if (bfinal->initbuffer[61] != bfinal->buffer[61])
	cmp	x0, x1	// _841, _843
	beq	.L4670		//,
// bitmapdecoding.cpp:492:     unpack<61>(bfinal->initbuffer[61], bfinal->buffer[61], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj61EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4670:
// bitmapdecoding.cpp:493:   if (bfinal->initbuffer[62] != bfinal->buffer[62])
	ldr	x1, [x2, 496]	// _847, MEM[(struct lead_t * *)prephitmp_2223 + 496B]
// bitmapdecoding.cpp:493:   if (bfinal->initbuffer[62] != bfinal->buffer[62])
	ldr	x0, [x3, 496]	// _845, MEM[(struct lead_t * *)prephitmp_2221 + 496B]
// bitmapdecoding.cpp:493:   if (bfinal->initbuffer[62] != bfinal->buffer[62])
	cmp	x0, x1	// _845, _847
	beq	.L4671		//,
// bitmapdecoding.cpp:494:     unpack<62>(bfinal->initbuffer[62], bfinal->buffer[62], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj62EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4671:
// bitmapdecoding.cpp:495:   if (bfinal->initbuffer[63] != bfinal->buffer[63])
	ldr	x1, [x2, 504]	// _851, MEM[(struct lead_t * *)prephitmp_2227 + 504B]
// bitmapdecoding.cpp:495:   if (bfinal->initbuffer[63] != bfinal->buffer[63])
	ldr	x0, [x3, 504]	// _849, MEM[(struct lead_t * *)prephitmp_2225 + 504B]
// bitmapdecoding.cpp:495:   if (bfinal->initbuffer[63] != bfinal->buffer[63])
	cmp	x0, x1	// _849, _851
	beq	.L4672		//,
// bitmapdecoding.cpp:496:     unpack<63>(bfinal->initbuffer[63], bfinal->buffer[63], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj63EEvP6lead_sS1_Pj		//
	ldp	x2, x3, [sp, 256]	// _113, _118, MEM[(struct lead_t * * *)&b + 8B]
.L4672:
// bitmapdecoding.cpp:497:   if (bfinal->initbuffer[64] != bfinal->buffer[64])
	ldr	x1, [x2, 512]	// _855, MEM[(struct lead_t * *)prephitmp_2231 + 512B]
// bitmapdecoding.cpp:497:   if (bfinal->initbuffer[64] != bfinal->buffer[64])
	ldr	x0, [x3, 512]	// _853, MEM[(struct lead_t * *)prephitmp_2229 + 512B]
// bitmapdecoding.cpp:497:   if (bfinal->initbuffer[64] != bfinal->buffer[64])
	cmp	x0, x1	// _853, _855
	beq	.L4673		//,
// bitmapdecoding.cpp:498:     unpack<64>(bfinal->initbuffer[64], bfinal->buffer[64], out);
	mov	x2, x19	//, _70
	bl	_Z6unpackILj64EEvP6lead_sS1_Pj		//
.L4673:
// linux-perf-events.h:72:     if (ioctl(fd, PERF_EVENT_IOC_DISABLE, PERF_IOC_FLAG_GROUP) == -1) {
	ldr	w0, [sp, 512]	//, unified.fd
	mov	w2, 1	//,
	mov	x1, 9217	//,
// bitmapdecoding.cpp:528:     matches = b.matches;
	ldr	w25, [sp, 248]	//, b.matches
// linux-perf-events.h:72:     if (ioctl(fd, PERF_EVENT_IOC_DISABLE, PERF_IOC_FLAG_GROUP) == -1) {
	bl	ioctl		//
// linux-perf-events.h:72:     if (ioctl(fd, PERF_EVENT_IOC_DISABLE, PERF_IOC_FLAG_GROUP) == -1) {
	cmn	w0, #1	//,
	beq	.L5014		//,
.L4674:
// linux-perf-events.h:76:     if (read(fd, temp_result_vec.data(), temp_result_vec.size() * 8) == -1) {
	ldr	w0, [sp, 512]	//, unified.fd
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldr	x3, [sp, 648]	// MEM[(long unsigned int * *)&unified + 136B], MEM[(long unsigned int * *)&unified + 136B]
// linux-perf-events.h:76:     if (read(fd, temp_result_vec.data(), temp_result_vec.size() * 8) == -1) {
	ldr	x2, [sp, 640]	// _575, MEM[(long unsigned int * *)&unified + 128B]
// linux-perf-events.h:76:     if (read(fd, temp_result_vec.data(), temp_result_vec.size() * 8) == -1) {
	mov	x1, x2	//, _575
	sub	x2, x3, x2	//, MEM[(long unsigned int * *)&unified + 136B], _575
	bl	read		//
// linux-perf-events.h:76:     if (read(fd, temp_result_vec.data(), temp_result_vec.size() * 8) == -1) {
	cmn	x0, #1	//,
	beq	.L5015		//,
.L4707:
// linux-perf-events.h:81:     for (uint32_t i = 1; i < temp_result_vec.size(); i += 2) {
	ldr	x5, [sp, 640]	// _232, MEM[(long unsigned int * *)&unified + 128B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldr	x4, [sp, 648]	// MEM[(long unsigned int * *)&unified + 136B], MEM[(long unsigned int * *)&unified + 136B]
	sub	x4, x4, x5	// tmp1270, MEM[(long unsigned int * *)&unified + 136B], _232
	asr	x4, x4, 3	// _244, tmp1270,
// linux-perf-events.h:81:     for (uint32_t i = 1; i < temp_result_vec.size(); i += 2) {
	cmp	x4, 1	// _244,
	bls	.L4740		//,
// linux-perf-events.h:82:       results[i / 2] = temp_result_vec[i];
	ldr	x6, [sp, 200]	// _592, MEM[(long long unsigned int * *)&results]
// linux-perf-events.h:81:     for (uint32_t i = 1; i < temp_result_vec.size(); i += 2) {
	mov	x1, 1	// _582,
// linux-perf-events.h:82:       results[i / 2] = temp_result_vec[i];
	mov	w0, w1	// i, _582
	.p2align 3
.L4741:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:933: 	return *(this->_M_impl._M_start + __n);
	lsr	w2, w0, 1	// tmp1274, i,
// linux-perf-events.h:81:     for (uint32_t i = 1; i < temp_result_vec.size(); i += 2) {
	add	w0, w0, 2	// i, i,
// linux-perf-events.h:82:       results[i / 2] = temp_result_vec[i];
	ldr	x3, [x5, x1, lsl 3]	// *_589, *_589
// linux-perf-events.h:81:     for (uint32_t i = 1; i < temp_result_vec.size(); i += 2) {
	uxtw	x1, w0	// _582, i
// linux-perf-events.h:82:       results[i / 2] = temp_result_vec[i];
	str	x3, [x6, x2, lsl 3]	// *_589, *_594
// linux-perf-events.h:81:     for (uint32_t i = 1; i < temp_result_vec.size(); i += 2) {
	cmp	x4, x1	// _244, _582
	bhi	.L4741		//,
.L4740:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1076: 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
	ldp	x23, x0, [sp, 232]	// _1030, allresults.D.44829._M_impl._M_end_of_storage, allresults.D.44829._M_impl._M_finish
	cmp	x23, x0	// _1030, allresults.D.44829._M_impl._M_end_of_storage
	beq	.L4744		//,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldp	x0, x26, [sp, 200]	// MEM[(long long unsigned int * *)&results], MEM[(long long unsigned int * *)&results + 8B], MEM[(long long unsigned int * *)&results]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [x23]	//,, MEM[(struct _Vector_impl *)_1030]._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x27, x23	// pretmp_2265, _1030
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	str	xzr, [x23, 16]	//, MEM[(struct _Vector_impl *)_1030]._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x3, 0	// _1049,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x26, x26, x0	// _1036, MEM[(long long unsigned int * *)&results + 8B], MEM[(long long unsigned int * *)&results]
	asr	x0, x26, 3	// tmp1284, _1036,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	cbz	x0, .L4746	// tmp1284,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	mov	x1, 2305843009213693951	// tmp1285,
	cmp	x0, x1	// tmp1284, tmp1285
	bhi	.L5016		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x26	//, _1036
	bl	_Znwm		//
	ldr	x27, [sp, 232]	// pretmp_2265, allresults.D.44829._M_impl._M_finish
	mov	x3, x0	// _1049,
.L4746:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:312: 	this->_M_impl._M_finish = this->_M_impl._M_start;
	stp	x3, x3, [x23]	// _1049, _1049, MEM[(struct _Vector_base *)_1030]._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	add	x26, x3, x26	// tmp1287, _1049, _1036
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:463: 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
	ldp	x1, x0, [sp, 200]	// _1042, _1043, MEM[(long long unsigned int * *)&results]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	str	x26, [x23, 16]	// tmp1287, MEM[(struct _Vector_base *)_1030]._M_impl._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	cmp	x1, x0	// _1042, _1043
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:366: 	  const ptrdiff_t _Num = __last - __first;
	sub	x26, x0, x1	// _1044, _1043, _1042
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	beq	.L4749		//,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:368: 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
	mov	x0, x3	//, _1049
	mov	x2, x26	//, _1044
	bl	memmove		//
	mov	x3, x0	// _1049,
.L4749:
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:369: 	  return __result + _Num;
	add	x3, x3, x26	// tmp1288, _1049, _1044
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:462: 	this->_M_impl._M_finish =
	str	x3, [x23, 8]	// tmp1288, _1030->D.43930._M_impl._M_finish
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1081: 	    ++this->_M_impl._M_finish;
	add	x27, x27, 24	// tmp1289, pretmp_2265,
	str	x27, [sp, 232]	// tmp1289, allresults.D.44829._M_impl._M_finish
.L4750:
// bitmapdecoding.cpp:520:   for (uint32_t i = 0; i < iterations; i++) {
	subs	w21, w21, #1	// ivtmp_2101, ivtmp_2101,
	bne	.L4534		//,
// bitmapdecoding.cpp:532:   destroy_buf(&b);
	add	x0, sp, 248	// tmp1544,,
	bl	_Z11destroy_bufP5buf_s		//
// bitmapdecoding.cpp:533:   if (bigarray[0] == 0)
	ldr	w0, [x19]	//, *_70
	cbz	w0, .L5017	// *_70,
.L4751:
// bitmapdecoding.cpp:535:   printf("matches = %u words = %zu 1-bit density %4.3f %% \n", matches,
	ldr	d0, [sp, 136]	// wordcount.22_10, wordcount
// bitmapdecoding.cpp:536:          wordcount, double(matches) / (64 * wordcount) * 100);
	ucvtf	d8, w25	// _11, matches
// bitmapdecoding.cpp:535:   printf("matches = %u words = %zu 1-bit density %4.3f %% \n", matches,
	mov	x1, 4636737291354636288	// tmp1456,
	fmov	d1, x1	// tmp1300, tmp1456
	adrp	x0, .LC16	// tmp1302,
	mov	w1, w25	//, matches
	fmov	x2, d0	//, wordcount.22_10
// bitmapdecoding.cpp:536:          wordcount, double(matches) / (64 * wordcount) * 100);
	shl	d0, d0, 6	// tmp1296, wordcount.22_10,
// bitmapdecoding.cpp:535:   printf("matches = %u words = %zu 1-bit density %4.3f %% \n", matches,
	add	x0, x0, :lo12:.LC16	//, tmp1302,
// bitmapdecoding.cpp:536:          wordcount, double(matches) / (64 * wordcount) * 100);
	ucvtf	d0, d0	// tmp1297, tmp1296
	fdiv	d0, d8, d0	// tmp1298, _11, tmp1297
// bitmapdecoding.cpp:535:   printf("matches = %u words = %zu 1-bit density %4.3f %% \n", matches,
	fmul	d0, d0, d1	//, tmp1298, tmp1300
	bl	printf		//
// bitmapdecoding.cpp:537:   printf("bytes per index = %4.3f \n", wordcount * 64.0 / matches);
	ldr	d0, [sp, 136]	// wordcount, wordcount
	mov	x0, 4634204016564240384	// tmp1455,
	fmov	d1, x0	// tmp1306, tmp1455
// bitmapdecoding.cpp:537:   printf("bytes per index = %4.3f \n", wordcount * 64.0 / matches);
	adrp	x0, .LC17	// tmp1309,
	add	x0, x0, :lo12:.LC17	//, tmp1309,
// bitmapdecoding.cpp:537:   printf("bytes per index = %4.3f \n", wordcount * 64.0 / matches);
	ucvtf	d0, d0	// tmp1303, wordcount
	fmul	d0, d0, d1	// tmp1305, tmp1303, tmp1306
// bitmapdecoding.cpp:537:   printf("bytes per index = %4.3f \n", wordcount * 64.0 / matches);
	fdiv	d0, d0, d8	//, tmp1305, _11
	bl	printf		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:460: 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
	ldp	x23, x24, [sp, 224]	// pretmp_2239, pretmp_2241, MEM[(struct vector * *)&allresults]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	mov	x1, -6148914691236517206	// tmp1312,
	movk	x1, 0xaaab, lsl 0	// tmp1312,,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [sp, 480]	//,, MEM[(struct _Vector_impl *)&D.46867]._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x25, 0	// __first,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	str	xzr, [sp, 496]	//, MEM[(struct _Vector_impl *)&D.46867]._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x21, x24, x23	// _1053, pretmp_2241, pretmp_2239
	asr	x0, x21, 3	// tmp1310, _1053,
	mul	x0, x0, x1	// tmp1311, tmp1310, tmp1312
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	cbz	x0, .L4753	// tmp1311,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	mov	x1, -6148914691236517206	// tmp1313,
	movk	x1, 0xaaa, lsl 48	// tmp1313,,
	cmp	x0, x1	// tmp1311, tmp1313
	bhi	.L5018		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x21	//, _1053
	bl	_Znwm		//
.LEHE306:
	ldp	x23, x24, [sp, 224]	// pretmp_2239, pretmp_2241, MEM[(struct vector * *)&allresults]
	mov	x25, x0	// __first,
.L4753:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	add	x21, x25, x21	// tmp1315, __first, _1053
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:312: 	this->_M_impl._M_finish = this->_M_impl._M_start;
	stp	x25, x25, [sp, 480]	// __first, __first, MEM[(struct _Vector_base *)&D.46867]._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	cmp	x23, x24	// pretmp_2239, pretmp_2241
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	str	x21, [sp, 496]	// tmp1315, MEM[(struct _Vector_base *)&D.46867]._M_impl._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:79: 	  _ForwardIterator __cur = __result;
	mov	x21, x25	// __cur, __first
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	beq	.L4755		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	mov	x26, 2305843009213693951	// tmp1439,
	.p2align 3
.L4761:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldp	x0, x22, [x23]	// MEM[base: _2071, offset: 0B], MEM[base: _2071, offset: 8B], MEM[base: _2071, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [x21]	//,, MEM[base: __cur_1490, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x3, 0	// _1093,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	str	xzr, [x21, 16]	//, MEM[base: __cur_1490, offset: 16B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x22, x22, x0	// _1080, MEM[base: _2071, offset: 8B], MEM[base: _2071, offset: 0B]
	asr	x0, x22, 3	// tmp1318, _1080,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	cbz	x0, .L4757	// tmp1318,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	cmp	x0, x26	// tmp1318, tmp1439
	bhi	.L5019		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x22	//, _1080
.LEHB307:
	bl	_Znwm		//
.LEHE307:
	mov	x3, x0	// _1093,
.L4757:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	add	x22, x3, x22	// tmp1321, _1093, _1080
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:312: 	this->_M_impl._M_finish = this->_M_impl._M_start;
	stp	x3, x3, [x21]	// _1093, _1093, MEM[base: __cur_1490, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	str	x22, [x21, 16]	// tmp1321, MEM[base: __cur_1490, offset: 16B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:463: 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
	ldp	x1, x0, [x23]	// _1086, _1087, MEM[base: _2071, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	cmp	x1, x0	// _1086, _1087
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:366: 	  const ptrdiff_t _Num = __last - __first;
	sub	x22, x0, x1	// _1088, _1087, _1086
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	beq	.L4760		//,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:368: 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
	mov	x0, x3	//, _1093
	mov	x2, x22	//, _1088
	bl	memmove		//
	mov	x3, x0	// _1093,
.L4760:
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:369: 	  return __result + _Num;
	add	x3, x3, x22	// tmp1322, _1093, _1088
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:462: 	this->_M_impl._M_finish =
	str	x3, [x21, 8]	// tmp1322, MEM[base: __cur_1490, offset: 8B]
	add	x23, x23, 24	// ivtmp.1607, ivtmp.1607,
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	add	x21, x21, 24	// __cur, __cur,
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	cmp	x24, x23	// pretmp_2241, ivtmp.1607
	bne	.L4761		//,
.L4755:
// bitmapdecoding.cpp:538:   std::vector<unsigned long long> mins = compute_mins(allresults);
	add	x23, sp, 480	// tmp1410,,
	add	x8, sp, 272	//,,
	mov	x0, x23	//, tmp1410
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:462: 	this->_M_impl._M_finish =
	str	x21, [sp, 488]	// __cur, D.46867.D.44829._M_impl._M_finish
.LEHB308:
// bitmapdecoding.cpp:538:   std::vector<unsigned long long> mins = compute_mins(allresults);
	bl	_Z12compute_minsSt6vectorIS_IySaIyEESaIS1_EE		//
.LEHE308:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldp	x21, x22, [sp, 480]	// __first, pretmp_2249, D.46867.D.44829._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x21, x22	// __first, pretmp_2249
	beq	.L4769		//,
	.p2align 3
.L4771:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [x21]	// _1110, MEM[base: __first_1492, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4770	// _1110,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4770:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	add	x21, x21, 24	// __first, __first,
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x22, x21	// pretmp_2249, __first
	bne	.L4771		//,
	ldr	x22, [sp, 480]	// pretmp_2249, MEM[(struct _Vector_base *)&D.46867]._M_impl._M_start
.L4769:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x22, .L4772	// pretmp_2249,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x22	//, pretmp_2249
	bl	_ZdlPv		//
.L4772:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:460: 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
	ldp	x24, x25, [sp, 224]	// pretmp_2251, pretmp_2253, MEM[(struct vector * *)&allresults]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	mov	x1, -6148914691236517206	// tmp1332,
	movk	x1, 0xaaab, lsl 0	// tmp1332,,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [sp, 480]	//,, MEM[(struct _Vector_impl *)&D.46870]._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x26, 0	// __first,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	str	xzr, [sp, 496]	//, MEM[(struct _Vector_impl *)&D.46870]._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x21, x25, x24	// _1097, pretmp_2253, pretmp_2251
	asr	x0, x21, 3	// tmp1330, _1097,
	mul	x0, x0, x1	// tmp1331, tmp1330, tmp1332
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	cbz	x0, .L4774	// tmp1331,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	mov	x1, -6148914691236517206	// tmp1333,
	movk	x1, 0xaaa, lsl 48	// tmp1333,,
	cmp	x0, x1	// tmp1331, tmp1333
	bhi	.L5020		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x21	//, _1097
.LEHB309:
	bl	_Znwm		//
.LEHE309:
	ldp	x24, x25, [sp, 224]	// pretmp_2251, pretmp_2253, MEM[(struct vector * *)&allresults]
	mov	x26, x0	// __first,
.L4774:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	add	x21, x26, x21	// tmp1335, __first, _1097
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:312: 	this->_M_impl._M_finish = this->_M_impl._M_start;
	stp	x26, x26, [sp, 480]	// __first, __first, MEM[(struct _Vector_base *)&D.46870]._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	cmp	x24, x25	// pretmp_2251, pretmp_2253
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	str	x21, [sp, 496]	// tmp1335, MEM[(struct _Vector_base *)&D.46870]._M_impl._M_end_of_storage
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:79: 	  _ForwardIterator __cur = __result;
	mov	x21, x26	// __cur, __first
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	beq	.L4776		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	mov	x27, 2305843009213693951	// tmp1437,
	.p2align 3
.L4782:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	ldp	x0, x22, [x24]	// MEM[base: _2087, offset: 0B], MEM[base: _2087, offset: 8B], MEM[base: _2087, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	stp	xzr, xzr, [x21]	//,, MEM[base: __cur_1015, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x3, 0	// _1143,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:100: 	: _Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
	str	xzr, [x21, 16]	//, MEM[base: __cur_1015, offset: 16B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:806:       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
	sub	x22, x22, x0	// _1130, MEM[base: _2087, offset: 8B], MEM[base: _2087, offset: 0B]
	asr	x0, x22, 3	// tmp1338, _1130,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	cbz	x0, .L4778	// tmp1338,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:101: 	if (__n > this->max_size())
	cmp	x0, x27	// tmp1338, tmp1437
	bhi	.L5021		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:111: 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
	mov	x0, x22	//, _1130
.LEHB310:
	bl	_Znwm		//
.LEHE310:
	mov	x3, x0	// _1143,
.L4778:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	add	x22, x3, x22	// tmp1341, _1143, _1130
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:312: 	this->_M_impl._M_finish = this->_M_impl._M_start;
	stp	x3, x3, [x21]	// _1143, _1143, MEM[base: __cur_1015, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:313: 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
	str	x22, [x21, 16]	// tmp1341, MEM[base: __cur_1015, offset: 16B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:463: 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
	ldp	x1, x0, [x24]	// _1136, _1137, MEM[base: _2087, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	cmp	x1, x0	// _1136, _1137
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:366: 	  const ptrdiff_t _Num = __last - __first;
	sub	x22, x0, x1	// _1138, _1137, _1136
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:367: 	  if (_Num)
	beq	.L4781		//,
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:368: 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
	mov	x0, x3	//, _1143
	mov	x2, x22	//, _1138
	bl	memmove		//
	mov	x3, x0	// _1143,
.L4781:
// /usr/local/include/c++/8.3.0/bits/stl_algobase.h:369: 	  return __result + _Num;
	add	x3, x3, x22	// tmp1342, _1143, _1138
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:462: 	this->_M_impl._M_finish =
	str	x3, [x21, 8]	// tmp1342, MEM[base: __cur_1015, offset: 8B]
	add	x24, x24, 24	// ivtmp.1591, ivtmp.1591,
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	add	x21, x21, 24	// __cur, __cur,
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:82: 	      for (; __first != __last; ++__first, (void)++__cur)
	cmp	x25, x24	// pretmp_2253, ivtmp.1591
	bne	.L4782		//,
.L4776:
// bitmapdecoding.cpp:539:   std::vector<double> avg = compute_averages(allresults);
	add	x8, sp, 296	//,,
	mov	x0, x23	//, tmp1410
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:462: 	this->_M_impl._M_finish =
	str	x21, [sp, 488]	// __cur, D.46870.D.44829._M_impl._M_finish
.LEHB311:
// bitmapdecoding.cpp:539:   std::vector<double> avg = compute_averages(allresults);
	bl	_Z16compute_averagesSt6vectorIS_IySaIyEESaIS1_EE		//
.LEHE311:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldp	x21, x22, [sp, 480]	// __first, pretmp_2261, D.46870.D.44829._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x21, x22	// __first, pretmp_2261
	beq	.L4791		//,
	.p2align 3
.L4793:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [x21]	// _1148, MEM[base: __first_1513, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4792	// _1148,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4792:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	add	x21, x21, 24	// __first, __first,
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x22, x21	// pretmp_2261, __first
	bne	.L4793		//,
	ldr	x22, [sp, 480]	// pretmp_2261, MEM[(struct _Vector_base *)&D.46870]._M_impl._M_start
.L4791:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x22, .L4794	// pretmp_2261,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x22	//, pretmp_2261
	bl	_ZdlPv		//
.L4794:
// bitmapdecoding.cpp:544:          double(mins[1]) / mins[0], double(mins[0]) / matches,
	ldr	x1, [sp, 272]	// _152, MEM[(long long unsigned int * *)&mins]
// bitmapdecoding.cpp:540:   printf("instructions per cycle %4.2f, cycles per value set:  "
	adrp	x0, .LC18	// tmp1361,
	ldr	d4, [sp, 136]	// wordcount, wordcount
	add	x0, x0, :lo12:.LC18	//, tmp1361,
// bitmapdecoding.cpp:544:          double(mins[1]) / mins[0], double(mins[0]) / matches,
	ldp	d0, d5, [x1]	// MEM[(value_type &)_152], MEM[(value_type &)_152 + 8], MEM[(value_type &)_152]
// bitmapdecoding.cpp:540:   printf("instructions per cycle %4.2f, cycles per value set:  "
	ucvtf	d4, d4	// _29, wordcount
	ucvtf	d0, d0	// _24, MEM[(value_type &)_152]
// bitmapdecoding.cpp:544:          double(mins[1]) / mins[0], double(mins[0]) / matches,
	ucvtf	d5, d5	// _22, MEM[(value_type &)_152 + 8]
// bitmapdecoding.cpp:540:   printf("instructions per cycle %4.2f, cycles per value set:  "
	fdiv	d3, d0, d4	//, _24, _29
	fdiv	d1, d0, d8	//, _24, _11
	fdiv	d4, d5, d4	//, _22, _29
	fdiv	d2, d5, d8	//, _22, _11
	fdiv	d0, d5, d0	//, _22, _24
.LEHB312:
	bl	printf		//
// bitmapdecoding.cpp:548:          double(mins[0]) / (64 * wordcount),
	ldr	d0, [sp, 136]	// wordcount, wordcount
// bitmapdecoding.cpp:547:   printf(" cycles per input byte %4.2f instructions per input byte %4.2f \n",
	adrp	x0, .LC19	// tmp1371,
// bitmapdecoding.cpp:548:          double(mins[0]) / (64 * wordcount),
	ldr	x1, [sp, 272]	// _153, MEM[(long long unsigned int * *)&mins]
// bitmapdecoding.cpp:547:   printf(" cycles per input byte %4.2f instructions per input byte %4.2f \n",
	add	x0, x0, :lo12:.LC19	//, tmp1371,
// bitmapdecoding.cpp:548:          double(mins[0]) / (64 * wordcount),
	shl	d0, d0, 6	// tmp1362, wordcount,
// bitmapdecoding.cpp:549:          double(mins[1]) / (64 * wordcount));
	ldp	d2, d1, [x1]	// MEM[(value_type &)_153], MEM[(value_type &)_153 + 8], MEM[(value_type &)_153]
// bitmapdecoding.cpp:547:   printf(" cycles per input byte %4.2f instructions per input byte %4.2f \n",
	ucvtf	d0, d0	// _36, tmp1362
// bitmapdecoding.cpp:548:          double(mins[0]) / (64 * wordcount),
	ucvtf	d2, d2	// tmp1367, MEM[(value_type &)_153]
// bitmapdecoding.cpp:549:          double(mins[1]) / (64 * wordcount));
	ucvtf	d1, d1	// tmp1364, MEM[(value_type &)_153 + 8]
// bitmapdecoding.cpp:547:   printf(" cycles per input byte %4.2f instructions per input byte %4.2f \n",
	fdiv	d1, d1, d0	//, tmp1364, _36
	fdiv	d0, d2, d0	//, tmp1367, _36
	bl	printf		//
// bitmapdecoding.cpp:553:          mins[0], mins[1], mins[2], mins[3], mins[4]);
	ldr	x5, [sp, 272]	// _154, MEM[(long long unsigned int * *)&mins]
// bitmapdecoding.cpp:551:   printf("min: %8llu cycles, %8llu instructions, \t%8llu branch mis., %8llu "
	adrp	x0, .LC20	// tmp1378,
	add	x0, x0, :lo12:.LC20	//, tmp1378,
	ldp	x1, x2, [x5]	//,, MEM[(value_type &)_154]
	ldp	x3, x4, [x5, 16]	//,, MEM[(value_type &)_154 + 16]
	ldr	x5, [x5, 32]	//, MEM[(value_type &)_154 + 32]
	bl	printf		//
// bitmapdecoding.cpp:556:          avg[0], avg[1], avg[2], avg[3], avg[4]);
	ldr	x1, [sp, 296]	// _155, MEM[(double * *)&avg]
// bitmapdecoding.cpp:554:   printf("avg: %8.1f cycles, %8.1f instructions, \t%8.1f branch mis., %8.1f "
	adrp	x0, .LC21	// tmp1385,
	add	x0, x0, :lo12:.LC21	//, tmp1385,
	ldp	d0, d1, [x1]	//,, MEM[(value_type &)_155]
	ldp	d2, d3, [x1, 16]	//,, MEM[(value_type &)_155 + 16]
	ldr	d4, [x1, 32]	//, MEM[(value_type &)_155 + 32]
	bl	printf		//
// bitmapdecoding.cpp:557:   printf("\n");
	mov	w0, 10	//,
	bl	putchar		//
.LEHE312:
// bitmapdecoding.cpp:558:   delete[] array;
	cbz	x20, .L4795	// _66,
// bitmapdecoding.cpp:558:   delete[] array;
	mov	x0, x20	//, _66
	bl	_ZdaPv		//
.L4795:
// bitmapdecoding.cpp:559:   delete[] bigarray;
	mov	x0, x19	//, _70
	bl	_ZdaPv		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 296]	// _167, avg.D.45803._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4796	// _167,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4796:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 272]	// _166, mins.D.43930._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4797	// _166,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4797:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldp	x19, x20, [sp, 224]	// __first, pretmp_2263, allresults.D.44829._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x19, x20	// __first, pretmp_2263
	beq	.L4798		//,
	.p2align 3
.L4800:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [x19]	// _1154, MEM[base: __first_1514, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4799	// _1154,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4799:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	add	x19, x19, 24	// __first, __first,
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x20, x19	// pretmp_2263, __first
	bne	.L4800		//,
	ldr	x20, [sp, 224]	// pretmp_2263, MEM[(struct _Vector_base *)&allresults]._M_impl._M_start
.L4798:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x20, .L4801	// pretmp_2263,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x20	//, pretmp_2263
	bl	_ZdlPv		//
.L4801:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 200]	// _165, results.D.43930._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4802	// _165,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4802:
// linux-perf-events.h:59:   ~LinuxEvents() { close(fd); }
	ldr	w0, [sp, 512]	//, unified.fd
	bl	close		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 664]	// _1158, MEM[(struct vector *)&unified + 152B].D.42087._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4803	// _1158,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4803:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 640]	// _1159, MEM[(struct vector *)&unified + 128B].D.42087._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4804	// _1159,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4804:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 176]	// _164, evts.D.42966._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4477	// _164,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4477:
// bitmapdecoding.cpp:560: }
	ldp	x29, x30, [sp]	//,,
	ldp	x19, x20, [sp, 16]	//,,
	ldp	x21, x22, [sp, 32]	//,,
	ldp	x23, x24, [sp, 48]	//,,
	ldp	x25, x26, [sp, 64]	//,,
	ldp	x27, x28, [sp, 80]	//,,
	ldr	d8, [sp, 96]	//,
	add	sp, sp, 688	//,,
	.cfi_remember_state
	.cfi_restore 72
	.cfi_restore 29
	.cfi_restore 30
	.cfi_restore 27
	.cfi_restore 28
	.cfi_restore 25
	.cfi_restore 26
	.cfi_restore 23
	.cfi_restore 24
	.cfi_restore 21
	.cfi_restore 22
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
	ret	
.L5014:
	.cfi_restore_state
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x26, sp, 384	// tmp1407,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x1, .LC13	// tmp1102,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x4, x26, 16	// tmp1100, tmp1407,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x2, .LC13+29	// tmp1104,
	mov	x0, x26	//, tmp1407
	add	x1, x1, :lo12:.LC13	//, tmp1102,
	mov	w3, 0	//,
	add	x2, x2, :lo12:.LC13+29	//, tmp1104,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	str	x4, [sp, 384]	// tmp1100, MEM[(struct _Alloc_hider *)&D.66337]._M_p
.LEHB313:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
// linux-perf-events.h:88:     if (working)
	ldrb	w0, [sp, 516]	// unified.working, unified.working
	ldr	x23, [sp, 384]	// pretmp_2279, MEM[(const struct basic_string *)&D.66337]
	cbnz	w0, .L5022	// unified.working,
.L4675:
// linux-perf-events.h:90:     working = false;
	strb	wzr, [sp, 516]	//, unified.working
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x26, x26, 16	// tmp1170, tmp1407,
	cmp	x23, x26	// pretmp_2279, tmp1170
	beq	.L4674		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x23	//, pretmp_2279
	bl	_ZdlPv		//
	b	.L4674		//
.L5012:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x1, .LC11	// tmp917,
	adrp	x2, .LC11+27	// tmp919,
	add	x1, x1, :lo12:.LC11	//, tmp917,
	add	x2, x2, :lo12:.LC11+27	//, tmp919,
	mov	w3, 0	//,
	add	x0, sp, 416	// tmp1500,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	str	x22, [sp, 416]	// tmp1443, MEM[(struct _Alloc_hider *)&D.66216]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
// linux-perf-events.h:88:     if (working)
	ldrb	w0, [sp, 516]	// unified.working, unified.working
	ldr	x23, [sp, 416]	// pretmp_2295, MEM[(const struct basic_string *)&D.66216]
	cbnz	w0, .L5023	// unified.working,
.L4537:
// linux-perf-events.h:90:     working = false;
	strb	wzr, [sp, 516]	//, unified.working
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x23, x22	// pretmp_2295, tmp1443
	beq	.L4536		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x23	//, pretmp_2295
	bl	_ZdlPv		//
// linux-perf-events.h:66:     if (ioctl(fd, PERF_EVENT_IOC_ENABLE, PERF_IOC_FLAG_GROUP) == -1) {
	ldr	w0, [sp, 512]	//, unified.fd
	mov	w2, 1	//,
	mov	x1, 9216	//,
	bl	ioctl		//
// linux-perf-events.h:66:     if (ioctl(fd, PERF_EVENT_IOC_ENABLE, PERF_IOC_FLAG_GROUP) == -1) {
	cmn	w0, #1	//,
	bne	.L4569		//,
.L5013:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x1, .LC12	// tmp1002,
	adrp	x2, .LC12+28	// tmp1004,
	add	x1, x1, :lo12:.LC12	//, tmp1002,
	add	x2, x2, :lo12:.LC12+28	//, tmp1004,
	mov	w3, 0	//,
	add	x0, sp, 416	// tmp1512,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	str	x22, [sp, 416]	// tmp1443, MEM[(struct _Alloc_hider *)&D.66215]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
// linux-perf-events.h:88:     if (working)
	ldrb	w0, [sp, 516]	// unified.working, unified.working
	ldr	x23, [sp, 416]	// pretmp_2287, MEM[(const struct basic_string *)&D.66215]
	cbnz	w0, .L5024	// unified.working,
.L4570:
// linux-perf-events.h:90:     working = false;
	strb	wzr, [sp, 516]	//, unified.working
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x23, x22	// pretmp_2287, tmp1443
	beq	.L4569		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x23	//, pretmp_2287
	bl	_ZdlPv		//
	b	.L4569		//
.L4744:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1085: 	  _M_realloc_insert(end(), __x);
	mov	x1, x23	//, _1030
	add	x2, sp, 200	//,,
	add	x0, sp, 224	//,,
	bl	_ZNSt6vectorIS_IySaIyEESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_		//
	b	.L4750		//
.L5015:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x26, sp, 384	// tmp1407,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x1, .LC14	// tmp1189,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x4, x26, 16	// tmp1187, tmp1407,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	adrp	x2, .LC14+4	// tmp1191,
	mov	x0, x26	//, tmp1407
	add	x1, x1, :lo12:.LC14	//, tmp1189,
	mov	w3, 0	//,
	add	x2, x2, :lo12:.LC14+4	//, tmp1191,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	str	x4, [sp, 384]	// tmp1187, MEM[(struct _Alloc_hider *)&D.66336]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE313:
// linux-perf-events.h:88:     if (working)
	ldrb	w0, [sp, 516]	// unified.working, unified.working
	ldr	x23, [sp, 384]	// pretmp_2271, MEM[(const struct basic_string *)&D.66336]
	cbnz	w0, .L5025	// unified.working,
.L4708:
// linux-perf-events.h:90:     working = false;
	strb	wzr, [sp, 516]	//, unified.working
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x26, x26, 16	// tmp1257, tmp1407,
	cmp	x23, x26	// pretmp_2271, tmp1257
	beq	.L4707		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x23	//, pretmp_2271
	bl	_ZdlPv		//
	b	.L4707		//
.L5022:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:440:       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
	ldr	x27, [sp, 392]	// _876, MEM[(const struct basic_string *)&D.66337 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	str	x22, [sp, 416]	// tmp1443, MEM[(struct _Alloc_hider *)&D.66352]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:211: 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
	cmn	x23, x27	// pretmp_2279, _876
	ccmp	x23, 0, 0, ne	// pretmp_2279,,,
	beq	.L5026		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:215: 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
	str	x27, [sp, 168]	// _876, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:217: 	if (__dnew > size_type(_S_local_capacity))
	cmp	x27, 15	// _876,
	bhi	.L5027		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:337: 	if (__n == 1)
	cmp	x27, 1	// _876,
	bne	.L4679		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:338: 	  traits_type::assign(*__d, *__s);
	ldrb	w1, [x23]	// _884, MEM[(const char_type &)pretmp_2279]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	mov	x0, x22	// pretmp_2284, tmp1443
	strb	w1, [sp, 432]	// _884, MEM[(char_type &)&D.66352 + 16]
	b	.L4680		//
.L5023:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:440:       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
	ldr	x25, [sp, 424]	// _417, MEM[(const struct basic_string *)&D.66216 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	str	x24, [sp, 352]	// tmp1445, MEM[(struct _Alloc_hider *)&D.66228]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:211: 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
	cmn	x23, x25	// pretmp_2295, _417
	ccmp	x23, 0, 0, ne	// pretmp_2295,,,
	beq	.L5028		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:215: 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
	str	x25, [sp, 152]	// _417, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:217: 	if (__dnew > size_type(_S_local_capacity))
	cmp	x25, 15	// _417,
	bhi	.L5029		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:337: 	if (__n == 1)
	cmp	x25, 1	// _417,
	bne	.L4541		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:338: 	  traits_type::assign(*__d, *__s);
	ldrb	w1, [x23]	// _425, MEM[(const char_type &)pretmp_2295]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	mov	x0, x24	// pretmp_2300, tmp1445
	strb	w1, [sp, 368]	// _425, MEM[(char_type &)&D.66228 + 16]
	b	.L4542		//
.L5009:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:440:       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
	ldr	x28, [sp, 424]	// _306, MEM[(const struct basic_string *)&D.66146 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	ldr	x0, [sp, 112]	// tmp1450, %sfp
	str	x0, [sp, 320]	// tmp1450, MEM[(struct _Alloc_hider *)&D.66161]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:211: 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
	cmn	x23, x28	// pretmp_286, _306
	ccmp	x23, 0, 0, ne	// pretmp_286,,,
	beq	.L5030		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:215: 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
	str	x28, [sp, 144]	// _306, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:217: 	if (__dnew > size_type(_S_local_capacity))
	cmp	x28, 15	// _306,
	bhi	.L5031		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:337: 	if (__n == 1)
	cmp	x28, 1	// _306,
	bne	.L4493		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:338: 	  traits_type::assign(*__d, *__s);
	ldrb	w1, [x23]	// _314, MEM[(const char_type &)pretmp_286]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	w1, [sp, 336]	// _314, MEM[(char_type &)&D.66161 + 16]
	ldr	x0, [sp, 112]	// pretmp_1100, %sfp
	b	.L4494		//
.L5024:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:440:       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
	ldr	x25, [sp, 424]	// _504, MEM[(const struct basic_string *)&D.66215 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x26, sp, 384	// tmp1407,,
	add	x0, x26, 16	// tmp1007, tmp1407,
	str	x0, [sp, 384]	// tmp1007, MEM[(struct _Alloc_hider *)&D.66284]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:211: 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
	cmn	x23, x25	// pretmp_2287, _504
	ccmp	x23, 0, 0, ne	// pretmp_2287,,,
	beq	.L5032		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:215: 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
	str	x25, [sp, 160]	// _504, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:217: 	if (__dnew > size_type(_S_local_capacity))
	cmp	x25, 15	// _504,
	bhi	.L5033		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:337: 	if (__n == 1)
	cmp	x25, 1	// _504,
	bne	.L4574		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:338: 	  traits_type::assign(*__d, *__s);
	ldrb	w2, [x23]	// _512, MEM[(const char_type &)pretmp_2287]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	mov	x1, x0	// pretmp_2292, tmp1007
	strb	w2, [sp, 400]	// _512, MEM[(char_type &)&D.66284 + 16]
.L4575:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x25, [sp, 392]	// _504, MEM[(size_type *)&D.66284 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	mov	x0, 9223372036854775807	// tmp1025,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, x25]	//, MEM[(char_type &)_515]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	ldr	x1, [sp, 392]	// MEM[(const struct basic_string *)&D.66284 + 8B], MEM[(const struct basic_string *)&D.66284 + 8B]
	sub	x0, x0, x1	// tmp1024, tmp1025, MEM[(const struct basic_string *)&D.66284 + 8B]
	cmp	x0, 1	// tmp1024,
	bls	.L5034		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1268: 	return _M_append(__s, __n);
	adrp	x1, .LC9	// tmp1030,
	mov	x2, 2	//,
	add	x1, x1, :lo12:.LC9	//, tmp1030,
	mov	x0, x26	//, tmp1407
.LEHB314:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE314:
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	__errno_location		//
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	ldr	w0, [x0]	//, *_489
	bl	strerror		//
	mov	x23, x0	// _491,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x1, sp, 464	// tmp1034,,
	str	x1, [sp, 448]	// tmp1034, MEM[(struct _Alloc_hider *)&D.66283]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	mov	x2, -1	// iftmp.41_522,
	cbz	x0, .L4578	// _491,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:322: 	return __builtin_strlen(__s);
	bl	strlen		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	add	x2, x23, x0	// iftmp.41_522, _491,
.L4578:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	mov	x1, x23	//, _491
	mov	w3, 0	//,
	add	x0, sp, 448	// tmp1514,,
.LEHB315:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE315:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x3, x4, [sp, 384]	// _527, _524, MEM[(const struct basic_string *)&D.66284]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	add	x0, x26, 16	// tmp1044, tmp1407,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x1, x2, [sp, 448]	// pretmp_2294, _525, MEM[(const struct basic_string *)&D.66283]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	mov	x6, 15	// tmp1424,
	cmp	x3, x0	// _527, tmp1044
	ldr	x0, [sp, 400]	// D.66284.D.21280._M_allocated_capacity, D.66284.D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	add	x5, x4, x2	// __size, _524, _525
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	csel	x0, x0, x6, ne	// iftmp.59_529, D.66284.D.21280._M_allocated_capacity, tmp1424,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_529
	bls	.L4583		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 464]	// D.66283.D.21280._M_allocated_capacity, D.66283.D.21280._M_allocated_capacity
	add	x7, sp, 464	// tmp1046,,
	cmp	x1, x7	// pretmp_2294, tmp1046
	csel	x0, x0, x6, ne	// iftmp.59_533, D.66283.D.21280._M_allocated_capacity, tmp1424,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_533
	bls	.L5035		//,
.L4583:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x0, x26	//, tmp1407
.LEHB316:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE316:
.L4993:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x23, sp, 480	// tmp1410,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x1, x0	// _537,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x2, x23, 16	// tmp1050, tmp1410,
	str	x2, [sp, 480]	// tmp1050, MEM[(struct _Alloc_hider *)&D.66285]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x2, [x0], 16	// _540, MEM[(const struct basic_string *)iftmp.58_539]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:544: 	if (__str._M_is_local())
	cmp	x2, x0	// _540, _541
	beq	.L5036		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x2, [sp, 480]	// _540, MEM[(char * *)&D.66285]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:552: 	    _M_capacity(__str._M_allocated_capacity);
	ldr	x2, [x1, 16]	// _543, MEM[(struct basic_string &)iftmp.58_539].D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x2, [sp, 496]	// _543, MEM[(size_type *)&D.66285 + 16B]
.L4587:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:558: 	_M_length(__str.length());
	ldr	x2, [x1, 8]	// _544, MEM[(const struct basic_string *)iftmp.58_539 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x2, [sp, 488]	// _544, MEM[(size_type *)&D.66285 + 8B]
	stp	x0, xzr, [x1]	// _541,, MEM[(char * *)iftmp.58_539]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	adrp	x0, _ZSt4cerr	// tmp1054,
	add	x0, x0, :lo12:_ZSt4cerr	//, tmp1054,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, 16]	//, MEM[(char_type &)iftmp.58_539 + 16]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	ldp	x1, x2, [sp, 480]	//,, MEM[(const struct basic_string *)&D.66285]
.LEHB317:
	bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l		//
	mov	x27, x0	// _495,
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	ldr	x0, [x0]	// _495->_vptr.basic_ostream, _495->_vptr.basic_ostream
	ldr	x0, [x0, -24]	// MEM[(long int *)_549 + -24B], MEM[(long int *)_549 + -24B]
	add	x0, x27, x0	// tmp1057, _495, MEM[(long int *)_549 + -24B]
	ldr	x25, [x0, 240]	// _553, MEM[(const struct __ctype_type * *)_552 + 240B]
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:49:       if (!__f)
	cbz	x25, .L5037	// _553,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:874: 	if (_M_widen_ok)
	ldrb	w0, [x25, 56]	// MEM[(const struct ctype *)_553]._M_widen_ok, MEM[(const struct ctype *)_553]._M_widen_ok
	cbz	w0, .L4589	// MEM[(const struct ctype *)_553]._M_widen_ok,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:875: 	  return _M_widen[static_cast<unsigned char>(__c)];
	ldrb	w1, [x25, 67]	// _560, MEM[(const struct ctype *)_553]._M_widen
.L4590:
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	mov	x0, x27	//, _495
	bl	_ZNSo3putEc		//
// /usr/local/include/c++/8.3.0/ostream:613:     { return __os.flush(); }
	bl	_ZNSo5flushEv		//
.LEHE317:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 480]	// _496, MEM[(const struct basic_string *)&D.66285]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp1064, tmp1410,
	cmp	x0, x23	// _496, tmp1064
	beq	.L4591		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4591:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 448]	// _497, MEM[(const struct basic_string *)&D.66283]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 464	// tmp1066,,
	cmp	x0, x1	// _497, tmp1066
	beq	.L4592		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4592:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 384]	// _498, MEM[(const struct basic_string *)&D.66284]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x26, x26, 16	// tmp1068, tmp1407,
	cmp	x0, x26	// _498, tmp1068
	beq	.L4593		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4593:
	ldr	x23, [sp, 416]	// pretmp_2287, MEM[(const struct basic_string *)&D.66215]
	b	.L4570		//
.L5025:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:440:       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
	ldr	x27, [sp, 392]	// _963, MEM[(const struct basic_string *)&D.66336 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x0, sp, 464	// tmp1194,,
	str	x0, [sp, 448]	// tmp1194, MEM[(struct _Alloc_hider *)&D.66408]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:211: 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
	cmn	x23, x27	// pretmp_2271, _963
	ccmp	x23, 0, 0, ne	// pretmp_2271,,,
	beq	.L5038		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:215: 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
	str	x27, [sp, 480]	// _963, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:217: 	if (__dnew > size_type(_S_local_capacity))
	cmp	x27, 15	// _963,
	bhi	.L5039		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:337: 	if (__n == 1)
	cmp	x27, 1	// _963,
	bne	.L4712		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:338: 	  traits_type::assign(*__d, *__s);
	ldrb	w2, [x23]	// _971, MEM[(const char_type &)pretmp_2271]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	mov	x1, x0	// pretmp_2276, tmp1194
	strb	w2, [sp, 464]	// _971, MEM[(char_type &)&D.66408 + 16]
.L4713:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x27, [sp, 456]	// _963, MEM[(size_type *)&D.66408 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	mov	x0, 9223372036854775807	// tmp1212,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, x27]	//, MEM[(char_type &)_974]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	ldr	x1, [sp, 456]	// MEM[(const struct basic_string *)&D.66408 + 8B], MEM[(const struct basic_string *)&D.66408 + 8B]
	sub	x0, x0, x1	// tmp1211, tmp1212, MEM[(const struct basic_string *)&D.66408 + 8B]
	cmp	x0, 1	// tmp1211,
	bls	.L5040		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1268: 	return _M_append(__s, __n);
	adrp	x1, .LC9	// tmp1217,
	mov	x2, 2	//,
	add	x1, x1, :lo12:.LC9	//, tmp1217,
	add	x0, sp, 448	// tmp1535,,
.LEHB318:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE318:
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	__errno_location		//
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	ldr	w0, [x0]	//, *_948
	bl	strerror		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	str	x22, [sp, 416]	// tmp1443, MEM[(struct _Alloc_hider *)&D.66407]._M_p
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	mov	x23, x0	// _950,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	mov	x2, -1	// iftmp.41_981,
	cbz	x0, .L4716	// _950,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:322: 	return __builtin_strlen(__s);
	bl	strlen		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	add	x2, x23, x0	// iftmp.41_981, _950,
.L4716:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	mov	x1, x23	//, _950
	mov	w3, 0	//,
	add	x0, sp, 416	// tmp1537,,
.LEHB319:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE319:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x3, x4, [sp, 448]	// _986, _983, MEM[(const struct basic_string *)&D.66408]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	add	x0, sp, 464	// tmp1231,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x1, x2, [sp, 416]	// pretmp_2278, _984, MEM[(const struct basic_string *)&D.66407]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	mov	x6, 15	// tmp1432,
	cmp	x3, x0	// _986, tmp1231
	ldr	x0, [sp, 464]	// D.66408.D.21280._M_allocated_capacity, D.66408.D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	add	x5, x4, x2	// __size, _983, _984
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	csel	x0, x0, x6, ne	// iftmp.59_988, D.66408.D.21280._M_allocated_capacity, tmp1432,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_988
	bls	.L4721		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 432]	// D.66407.D.21280._M_allocated_capacity, D.66407.D.21280._M_allocated_capacity
	cmp	x1, x22	// pretmp_2278, tmp1443
	csel	x0, x0, x6, ne	// iftmp.59_992, D.66407.D.21280._M_allocated_capacity, tmp1432,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_992
	bls	.L5041		//,
.L4721:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	add	x0, sp, 448	// tmp1540,,
.LEHB320:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE320:
.L4995:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x23, sp, 480	// tmp1410,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x1, x0	// _996,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x2, x23, 16	// tmp1237, tmp1410,
	str	x2, [sp, 480]	// tmp1237, MEM[(struct _Alloc_hider *)&D.66409]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x2, [x0], 16	// _999, MEM[(const struct basic_string *)iftmp.58_998]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:544: 	if (__str._M_is_local())
	cmp	x2, x0	// _999, _1000
	beq	.L5042		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x2, [sp, 480]	// _999, MEM[(char * *)&D.66409]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:552: 	    _M_capacity(__str._M_allocated_capacity);
	ldr	x2, [x1, 16]	// _1002, MEM[(struct basic_string &)iftmp.58_998].D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x2, [sp, 496]	// _1002, MEM[(size_type *)&D.66409 + 16B]
.L4725:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:558: 	_M_length(__str.length());
	ldr	x2, [x1, 8]	// _1003, MEM[(const struct basic_string *)iftmp.58_998 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x2, [sp, 488]	// _1003, MEM[(size_type *)&D.66409 + 8B]
	stp	x0, xzr, [x1]	// _1000,, MEM[(char * *)iftmp.58_998]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	adrp	x0, _ZSt4cerr	// tmp1241,
	add	x0, x0, :lo12:_ZSt4cerr	//, tmp1241,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, 16]	//, MEM[(char_type &)iftmp.58_998 + 16]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	ldp	x1, x2, [sp, 480]	//,, MEM[(const struct basic_string *)&D.66409]
.LEHB321:
	bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l		//
	mov	x28, x0	// _954,
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	ldr	x0, [x0]	// _954->_vptr.basic_ostream, _954->_vptr.basic_ostream
	ldr	x0, [x0, -24]	// MEM[(long int *)_1008 + -24B], MEM[(long int *)_1008 + -24B]
	add	x0, x28, x0	// tmp1244, _954, MEM[(long int *)_1008 + -24B]
	ldr	x27, [x0, 240]	// _1012, MEM[(const struct __ctype_type * *)_1011 + 240B]
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:49:       if (!__f)
	cbz	x27, .L5043	// _1012,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:874: 	if (_M_widen_ok)
	ldrb	w0, [x27, 56]	// MEM[(const struct ctype *)_1012]._M_widen_ok, MEM[(const struct ctype *)_1012]._M_widen_ok
	cbz	w0, .L4727	// MEM[(const struct ctype *)_1012]._M_widen_ok,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:875: 	  return _M_widen[static_cast<unsigned char>(__c)];
	ldrb	w1, [x27, 67]	// _1019, MEM[(const struct ctype *)_1012]._M_widen
.L4728:
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	mov	x0, x28	//, _954
	bl	_ZNSo3putEc		//
// /usr/local/include/c++/8.3.0/ostream:613:     { return __os.flush(); }
	bl	_ZNSo5flushEv		//
.LEHE321:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 480]	// _955, MEM[(const struct basic_string *)&D.66409]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp1251, tmp1410,
	cmp	x0, x23	// _955, tmp1251
	beq	.L4729		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4729:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _956, MEM[(const struct basic_string *)&D.66407]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x0, x22	// _956, tmp1443
	beq	.L4730		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4730:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 448]	// _957, MEM[(const struct basic_string *)&D.66408]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 464	// tmp1255,,
	cmp	x0, x1	// _957, tmp1255
	beq	.L4731		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4731:
	ldr	x23, [sp, 384]	// pretmp_2271, MEM[(const struct basic_string *)&D.66336]
	b	.L4708		//
.L5017:
// bitmapdecoding.cpp:534:     printf("bogus\n.");
	adrp	x0, .LC15	// tmp1295,
	add	x0, x0, :lo12:.LC15	//, tmp1295,
.LEHB322:
	bl	printf		//
.LEHE322:
	b	.L4751		//
.L4679:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:350: 	if (__n == 0)
	mov	x0, x22	// pretmp_2284, tmp1443
	cbnz	x27, .L4678	// _876,
.L4680:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x27, [sp, 424]	// _876, MEM[(size_type *)&D.66352 + 8B]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x0, x27]	//, MEM[(char_type &)_887]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	mov	x0, 9223372036854775807	// tmp1125,
	ldr	x1, [sp, 424]	// MEM[(const struct basic_string *)&D.66352 + 8B], MEM[(const struct basic_string *)&D.66352 + 8B]
	sub	x0, x0, x1	// tmp1124, tmp1125, MEM[(const struct basic_string *)&D.66352 + 8B]
	cmp	x0, 1	// tmp1124,
	bls	.L5044		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1268: 	return _M_append(__s, __n);
	adrp	x1, .LC9	// tmp1130,
	mov	x2, 2	//,
	add	x1, x1, :lo12:.LC9	//, tmp1130,
	add	x0, sp, 416	// tmp1523,,
.LEHB323:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE323:
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	__errno_location		//
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	ldr	w0, [x0]	//, *_861
	bl	strerror		//
	mov	x23, x0	// _863,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x1, sp, 464	// tmp1134,,
	str	x1, [sp, 448]	// tmp1134, MEM[(struct _Alloc_hider *)&D.66351]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	mov	x2, -1	// iftmp.41_894,
	cbz	x0, .L4683	// _863,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:322: 	return __builtin_strlen(__s);
	bl	strlen		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	add	x2, x23, x0	// iftmp.41_894, _863,
.L4683:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	mov	x1, x23	//, _863
	mov	w3, 0	//,
	add	x0, sp, 448	// tmp1526,,
.LEHB324:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE324:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x3, x4, [sp, 416]	// _899, _896, MEM[(const struct basic_string *)&D.66352]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	mov	x6, 15	// tmp1428,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x1, x2, [sp, 448]	// pretmp_2286, _897, MEM[(const struct basic_string *)&D.66351]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 432]	// D.66352.D.21280._M_allocated_capacity, D.66352.D.21280._M_allocated_capacity
	cmp	x3, x22	// _899, tmp1443
	csel	x0, x0, x6, ne	// iftmp.59_901, D.66352.D.21280._M_allocated_capacity, tmp1428,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	add	x5, x4, x2	// __size, _896, _897
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_901
	bls	.L4688		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 464]	// D.66351.D.21280._M_allocated_capacity, D.66351.D.21280._M_allocated_capacity
	add	x7, sp, 464	// tmp1146,,
	cmp	x1, x7	// pretmp_2286, tmp1146
	csel	x0, x0, x6, ne	// iftmp.59_905, D.66351.D.21280._M_allocated_capacity, tmp1428,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_905
	bls	.L5045		//,
.L4688:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	add	x0, sp, 416	// tmp1529,,
.LEHB325:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE325:
.L4994:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x23, sp, 480	// tmp1410,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x1, x0	// _909,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x2, x23, 16	// tmp1150, tmp1410,
	str	x2, [sp, 480]	// tmp1150, MEM[(struct _Alloc_hider *)&D.66353]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x2, [x0], 16	// _912, MEM[(const struct basic_string *)iftmp.58_911]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:544: 	if (__str._M_is_local())
	cmp	x2, x0	// _912, _913
	beq	.L5046		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x2, [sp, 480]	// _912, MEM[(char * *)&D.66353]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:552: 	    _M_capacity(__str._M_allocated_capacity);
	ldr	x2, [x1, 16]	// _915, MEM[(struct basic_string &)iftmp.58_911].D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x2, [sp, 496]	// _915, MEM[(size_type *)&D.66353 + 16B]
.L4692:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:558: 	_M_length(__str.length());
	ldr	x2, [x1, 8]	// _916, MEM[(const struct basic_string *)iftmp.58_911 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x2, [sp, 488]	// _916, MEM[(size_type *)&D.66353 + 8B]
	stp	x0, xzr, [x1]	// _913,, MEM[(char * *)iftmp.58_911]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	adrp	x0, _ZSt4cerr	// tmp1154,
	add	x0, x0, :lo12:_ZSt4cerr	//, tmp1154,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, 16]	//, MEM[(char_type &)iftmp.58_911 + 16]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	ldp	x1, x2, [sp, 480]	//,, MEM[(const struct basic_string *)&D.66353]
.LEHB326:
	bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l		//
	mov	x28, x0	// _867,
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	ldr	x0, [x0]	// _867->_vptr.basic_ostream, _867->_vptr.basic_ostream
	ldr	x0, [x0, -24]	// MEM[(long int *)_921 + -24B], MEM[(long int *)_921 + -24B]
	add	x0, x28, x0	// tmp1157, _867, MEM[(long int *)_921 + -24B]
	ldr	x27, [x0, 240]	// _925, MEM[(const struct __ctype_type * *)_924 + 240B]
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:49:       if (!__f)
	cbz	x27, .L5047	// _925,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:874: 	if (_M_widen_ok)
	ldrb	w0, [x27, 56]	// MEM[(const struct ctype *)_925]._M_widen_ok, MEM[(const struct ctype *)_925]._M_widen_ok
	cbz	w0, .L4694	// MEM[(const struct ctype *)_925]._M_widen_ok,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:875: 	  return _M_widen[static_cast<unsigned char>(__c)];
	ldrb	w1, [x27, 67]	// _932, MEM[(const struct ctype *)_925]._M_widen
.L4695:
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	mov	x0, x28	//, _867
	bl	_ZNSo3putEc		//
// /usr/local/include/c++/8.3.0/ostream:613:     { return __os.flush(); }
	bl	_ZNSo5flushEv		//
.LEHE326:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 480]	// _868, MEM[(const struct basic_string *)&D.66353]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp1164, tmp1410,
	cmp	x0, x23	// _868, tmp1164
	beq	.L4696		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4696:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 448]	// _869, MEM[(const struct basic_string *)&D.66351]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 464	// tmp1166,,
	cmp	x0, x1	// _869, tmp1166
	beq	.L4697		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4697:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _870, MEM[(const struct basic_string *)&D.66352]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x0, x22	// _870, tmp1443
	beq	.L4698		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4698:
	ldr	x23, [sp, 384]	// pretmp_2279, MEM[(const struct basic_string *)&D.66337]
	b	.L4675		//
.L4541:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:350: 	if (__n == 0)
	mov	x0, x24	// pretmp_2300, tmp1445
	cbnz	x25, .L4540	// _417,
.L4542:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x25, [sp, 360]	// _417, MEM[(size_type *)&D.66228 + 8B]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x0, x25]	//, MEM[(char_type &)_428]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	mov	x0, 9223372036854775807	// tmp940,
	ldr	x1, [sp, 360]	// MEM[(const struct basic_string *)&D.66228 + 8B], MEM[(const struct basic_string *)&D.66228 + 8B]
	sub	x0, x0, x1	// tmp939, tmp940, MEM[(const struct basic_string *)&D.66228 + 8B]
	cmp	x0, 1	// tmp939,
	bls	.L5048		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1268: 	return _M_append(__s, __n);
	adrp	x1, .LC9	// tmp945,
	mov	x2, 2	//,
	add	x1, x1, :lo12:.LC9	//, tmp945,
	add	x0, sp, 352	// tmp1502,,
.LEHB327:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE327:
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	__errno_location		//
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	ldr	w0, [x0]	//, *_402
	bl	strerror		//
	mov	x23, x0	// _404,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x1, sp, 464	// tmp949,,
	str	x1, [sp, 448]	// tmp949, MEM[(struct _Alloc_hider *)&D.66227]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	mov	x2, -1	// iftmp.41_435,
	cbz	x0, .L4545	// _404,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:322: 	return __builtin_strlen(__s);
	bl	strlen		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	add	x2, x23, x0	// iftmp.41_435, _404,
.L4545:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	mov	x1, x23	//, _404
	mov	w3, 0	//,
	add	x0, sp, 448	// tmp1505,,
.LEHB328:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE328:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x3, x4, [sp, 352]	// _440, _437, MEM[(const struct basic_string *)&D.66228]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	mov	x6, 15	// tmp1420,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x1, x2, [sp, 448]	// pretmp_2302, _438, MEM[(const struct basic_string *)&D.66227]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 368]	// D.66228.D.21280._M_allocated_capacity, D.66228.D.21280._M_allocated_capacity
	cmp	x3, x24	// _440, tmp1445
	csel	x0, x0, x6, ne	// iftmp.59_442, D.66228.D.21280._M_allocated_capacity, tmp1420,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	add	x5, x4, x2	// __size, _437, _438
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_442
	bls	.L4550		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 464]	// D.66227.D.21280._M_allocated_capacity, D.66227.D.21280._M_allocated_capacity
	add	x7, sp, 464	// tmp961,,
	cmp	x1, x7	// pretmp_2302, tmp961
	csel	x0, x0, x6, ne	// iftmp.59_446, D.66227.D.21280._M_allocated_capacity, tmp1420,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_446
	bls	.L5049		//,
.L4550:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	add	x0, sp, 352	// tmp1508,,
.LEHB329:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE329:
.L4992:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x23, sp, 480	// tmp1410,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x1, x0	// _450,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x2, x23, 16	// tmp965, tmp1410,
	str	x2, [sp, 480]	// tmp965, MEM[(struct _Alloc_hider *)&D.66229]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x2, [x0], 16	// _453, MEM[(const struct basic_string *)iftmp.58_452]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:544: 	if (__str._M_is_local())
	cmp	x2, x0	// _453, _454
	beq	.L5050		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x2, [sp, 480]	// _453, MEM[(char * *)&D.66229]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:552: 	    _M_capacity(__str._M_allocated_capacity);
	ldr	x2, [x1, 16]	// _456, MEM[(struct basic_string &)iftmp.58_452].D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x2, [sp, 496]	// _456, MEM[(size_type *)&D.66229 + 16B]
.L4554:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:558: 	_M_length(__str.length());
	ldr	x2, [x1, 8]	// _457, MEM[(const struct basic_string *)iftmp.58_452 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x2, [sp, 488]	// _457, MEM[(size_type *)&D.66229 + 8B]
	stp	x0, xzr, [x1]	// _454,, MEM[(char * *)iftmp.58_452]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	adrp	x0, _ZSt4cerr	// tmp969,
	add	x0, x0, :lo12:_ZSt4cerr	//, tmp969,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, 16]	//, MEM[(char_type &)iftmp.58_452 + 16]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	ldp	x1, x2, [sp, 480]	//,, MEM[(const struct basic_string *)&D.66229]
.LEHB330:
	bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l		//
	mov	x26, x0	// _408,
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	ldr	x0, [x0]	// _408->_vptr.basic_ostream, _408->_vptr.basic_ostream
	ldr	x0, [x0, -24]	// MEM[(long int *)_462 + -24B], MEM[(long int *)_462 + -24B]
	add	x0, x26, x0	// tmp972, _408, MEM[(long int *)_462 + -24B]
	ldr	x25, [x0, 240]	// _466, MEM[(const struct __ctype_type * *)_465 + 240B]
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:49:       if (!__f)
	cbz	x25, .L5051	// _466,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:874: 	if (_M_widen_ok)
	ldrb	w0, [x25, 56]	// MEM[(const struct ctype *)_466]._M_widen_ok, MEM[(const struct ctype *)_466]._M_widen_ok
	cbz	w0, .L4556	// MEM[(const struct ctype *)_466]._M_widen_ok,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:875: 	  return _M_widen[static_cast<unsigned char>(__c)];
	ldrb	w1, [x25, 67]	// _473, MEM[(const struct ctype *)_466]._M_widen
.L4557:
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	mov	x0, x26	//, _408
	bl	_ZNSo3putEc		//
// /usr/local/include/c++/8.3.0/ostream:613:     { return __os.flush(); }
	bl	_ZNSo5flushEv		//
.LEHE330:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 480]	// _409, MEM[(const struct basic_string *)&D.66229]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp979, tmp1410,
	cmp	x0, x23	// _409, tmp979
	beq	.L4558		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4558:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 448]	// _410, MEM[(const struct basic_string *)&D.66227]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 464	// tmp981,,
	cmp	x0, x1	// _410, tmp981
	beq	.L4559		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4559:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 352]	// _411, MEM[(const struct basic_string *)&D.66228]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x0, x24	// _411, tmp1445
	beq	.L4560		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4560:
	ldr	x23, [sp, 416]	// pretmp_2295, MEM[(const struct basic_string *)&D.66216]
	b	.L4537		//
.L4493:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:350: 	if (__n == 0)
	ldr	x0, [sp, 112]	// pretmp_1100, %sfp
	cbnz	x28, .L4492	// _306,
.L4494:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x28, [sp, 328]	// _306, MEM[(size_type *)&D.66161 + 8B]
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x0, x28]	//, MEM[(char_type &)_317]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:311: 	if (this->max_size() - (this->size() - __n1) < __n2)
	mov	x0, 9223372036854775807	// tmp829,
	ldr	x1, [sp, 328]	// MEM[(const struct basic_string *)&D.66161 + 8B], MEM[(const struct basic_string *)&D.66161 + 8B]
	sub	x0, x0, x1	// tmp828, tmp829, MEM[(const struct basic_string *)&D.66161 + 8B]
	cmp	x0, 1	// tmp828,
	bls	.L5052		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1268: 	return _M_append(__s, __n);
	adrp	x1, .LC9	// tmp834,
	mov	x2, 2	//,
	add	x1, x1, :lo12:.LC9	//, tmp834,
	add	x0, sp, 320	// tmp1481,,
.LEHB331:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE331:
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	bl	__errno_location		//
// linux-perf-events.h:89:       std::cerr << (context + ": " + std::string(strerror(errno))) << std::endl;
	ldr	w0, [x0]	//, *_291
	bl	strerror		//
	mov	x23, x0	// _293,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:146: 	: allocator_type(__a), _M_p(__dat) { }
	add	x1, sp, 464	// tmp838,,
	str	x1, [sp, 448]	// tmp838, MEM[(struct _Alloc_hider *)&D.66160]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	mov	x2, -1	// iftmp.41_324,
	cbz	x0, .L4497	// _293,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:322: 	return __builtin_strlen(__s);
	bl	strlen		//
// /usr/local/include/c++/8.3.0/bits/basic_string.h:516:       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
	add	x2, x23, x0	// iftmp.41_324, _293,
.L4497:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:236:           _M_construct(__beg, __end, _Tag());
	mov	x1, x23	//, _293
	mov	w3, 0	//,
	add	x0, sp, 448	// tmp1484,,
.LEHB332:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag		//
.LEHE332:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x3, x4, [sp, 320]	// _329, _326, MEM[(const struct basic_string *)&D.66161]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	mov	x6, 15	// tmp1413,
	ldr	x0, [sp, 112]	// tmp1450, %sfp
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	ldp	x1, x2, [sp, 448]	// pretmp_1056, _327, MEM[(const struct basic_string *)&D.66160]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	cmp	x3, x0	// _329, tmp1450
	ldr	x0, [sp, 336]	// D.66161.D.21280._M_allocated_capacity, D.66161.D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6007:       const auto __size = __lhs.size() + __rhs.size();
	add	x5, x4, x2	// __size, _326, _327
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	csel	x0, x0, x6, ne	// iftmp.59_331, D.66161.D.21280._M_allocated_capacity, tmp1413,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_331
	bls	.L4502		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:995: 	return _M_is_local() ? size_type(_S_local_capacity)
	ldr	x0, [sp, 464]	// D.66160.D.21280._M_allocated_capacity, D.66160.D.21280._M_allocated_capacity
	add	x7, sp, 464	// tmp850,,
	cmp	x1, x7	// pretmp_1056, tmp850
	csel	x0, x0, x6, ne	// iftmp.59_335, D.66160.D.21280._M_allocated_capacity, tmp1413,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6009: 			   && __size <= __rhs.capacity());
	cmp	x5, x0	// __size, iftmp.59_335
	bls	.L5053		//,
.L4502:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	add	x0, sp, 320	// tmp1488,,
.LEHB333:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm		//
.LEHE333:
.L4991:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x23, sp, 480	// tmp1410,,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1222:       { return _M_append(__str._M_data(), __str.size()); }
	mov	x1, x0	// _339,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:149: 	: allocator_type(std::move(__a)), _M_p(__dat) { }
	add	x2, x23, 16	// tmp854, tmp1410,
	str	x2, [sp, 480]	// tmp854, MEM[(struct _Alloc_hider *)&D.66162]._M_p
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x2, [x0], 16	// _342, MEM[(const struct basic_string *)iftmp.58_341]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:544: 	if (__str._M_is_local())
	cmp	x2, x0	// _342, _343
	beq	.L5054		//,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x2, [sp, 480]	// _342, MEM[(char * *)&D.66162]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:552: 	    _M_capacity(__str._M_allocated_capacity);
	ldr	x2, [x1, 16]	// _345, MEM[(struct basic_string &)iftmp.58_341].D.21280._M_allocated_capacity
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x2, [sp, 496]	// _345, MEM[(size_type *)&D.66162 + 16B]
.L4506:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:558: 	_M_length(__str.length());
	ldr	x2, [x1, 8]	// _346, MEM[(const struct basic_string *)iftmp.58_341 + 8B]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:172:       { _M_string_length = __length; }
	str	x2, [sp, 488]	// _346, MEM[(size_type *)&D.66162 + 8B]
	stp	x0, xzr, [x1]	// _343,, MEM[(char * *)iftmp.58_341]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	adrp	x0, _ZSt4cerr	// tmp858,
	add	x0, x0, :lo12:_ZSt4cerr	//, tmp858,
// /usr/local/include/c++/8.3.0/bits/char_traits.h:287:       { __c1 = __c2; }
	strb	wzr, [x1, 16]	//, MEM[(char_type &)iftmp.58_341 + 16]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:6328:       return __ostream_insert(__os, __str.data(), __str.size());
	ldp	x1, x2, [sp, 480]	//,, MEM[(const struct basic_string *)&D.66162]
.LEHB334:
	bl	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l		//
	mov	x1, x0	// _297,
	str	x1, [sp, 120]	// _297, %sfp
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	ldr	x0, [x0]	// _297->_vptr.basic_ostream, _297->_vptr.basic_ostream
	ldr	x0, [x0, -24]	// MEM[(long int *)_351 + -24B], MEM[(long int *)_351 + -24B]
	add	x0, x1, x0	// tmp861, _297, MEM[(long int *)_351 + -24B]
	ldr	x28, [x0, 240]	// _355, MEM[(const struct __ctype_type * *)_354 + 240B]
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:49:       if (!__f)
	cbz	x28, .L5055	// _355,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:874: 	if (_M_widen_ok)
	ldrb	w0, [x28, 56]	// MEM[(const struct ctype *)_355]._M_widen_ok, MEM[(const struct ctype *)_355]._M_widen_ok
	cbz	w0, .L4508	// MEM[(const struct ctype *)_355]._M_widen_ok,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:875: 	  return _M_widen[static_cast<unsigned char>(__c)];
	ldrb	w1, [x28, 67]	// _362, MEM[(const struct ctype *)_355]._M_widen
.L4509:
// /usr/local/include/c++/8.3.0/ostream:591:     { return flush(__os.put(__os.widen('\n'))); }
	ldr	x0, [sp, 120]	//, %sfp
	bl	_ZNSo3putEc		//
// /usr/local/include/c++/8.3.0/ostream:613:     { return __os.flush(); }
	bl	_ZNSo5flushEv		//
.LEHE334:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 480]	// _298, MEM[(const struct basic_string *)&D.66162]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp868, tmp1410,
	cmp	x0, x23	// _298, tmp868
	beq	.L4510		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4510:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 448]	// _299, MEM[(const struct basic_string *)&D.66160]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 464	// tmp870,,
	cmp	x0, x1	// _299, tmp870
	beq	.L4511		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4511:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	ldr	x1, [sp, 112]	// tmp1450, %sfp
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 320]	// _300, MEM[(const struct basic_string *)&D.66161]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	cmp	x0, x1	// _300, tmp1450
	beq	.L4512		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4512:
	ldr	x23, [sp, 416]	// pretmp_286, MEM[(const struct basic_string *)&D.66146]
	b	.L4489		//
.L5011:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:829: 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
	add	x0, x3, x0, lsl 3	// _380, _373, _273,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1656: 	if (size_type __n = this->_M_impl._M_finish - __pos)
	cmp	x2, x0	// _374, _380
	beq	.L4525		//,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:1660: 	    this->_M_impl._M_finish = __pos;
	str	x0, [sp, 648]	// _380, MEM[(long unsigned int * *)&unified + 136B]
	b	.L4525		//
.L5033:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:219: 	    _M_data(_M_create(__dnew, size_type(0)));
	mov	x2, 0	//,
	add	x1, sp, 160	//,,
	mov	x0, x26	//, tmp1407
.LEHB335:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm		//
.LEHE335:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	ldr	x1, [sp, 160]	// __dnew, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x0, [sp, 384]	// _509, MEM[(char * *)&D.66284]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x1, [sp, 400]	// __dnew, MEM[(size_type *)&D.66284 + 16B]
.L4573:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x2, x25	//, _504
	mov	x1, x23	//, pretmp_2287
	bl	memcpy		//
	ldr	x25, [sp, 160]	// _504, __dnew
	ldr	x1, [sp, 384]	// pretmp_2292, MEM[(const struct basic_string *)&D.66284]
	b	.L4575		//
.L5039:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:219: 	    _M_data(_M_create(__dnew, size_type(0)));
	mov	x2, 0	//,
	add	x1, sp, 480	//,,
	add	x0, sp, 448	// tmp1534,,
.LEHB336:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm		//
.LEHE336:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	ldr	x1, [sp, 480]	// __dnew, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x0, [sp, 448]	// _968, MEM[(char * *)&D.66408]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x1, [sp, 464]	// __dnew, MEM[(size_type *)&D.66408 + 16B]
.L4711:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x2, x27	//, _963
	mov	x1, x23	//, pretmp_2271
	bl	memcpy		//
	ldr	x1, [sp, 448]	// pretmp_2276, MEM[(const struct basic_string *)&D.66408]
	ldr	x27, [sp, 480]	// _963, __dnew
	b	.L4713		//
.L4694:
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:876: 	this->_M_widen_init();
	mov	x0, x27	//, _925
.LEHB337:
	bl	_ZNKSt5ctypeIcE13_M_widen_initEv		//
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	ldr	x2, [x27]	// MEM[(const struct ctype *)_925].D.31376._vptr.facet, MEM[(const struct ctype *)_925].D.31376._vptr.facet
	adrp	x0, _ZNKSt5ctypeIcE8do_widenEc	// tmp1161,
	add	x0, x0, :lo12:_ZNKSt5ctypeIcE8do_widenEc	// tmp1160, tmp1161,
	mov	w1, 10	// _932,
	ldr	x2, [x2, 48]	// _936, MEM[(int (*) () *)_935 + 48B]
	cmp	x2, x0	// _936, tmp1160
	beq	.L4695		//,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	mov	x0, x27	//, _925
	blr	x2		// _936
.LEHE337:
	and	w1, w0, 255	// _932,
	b	.L4695		//
.L4556:
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:876: 	this->_M_widen_init();
	mov	x0, x25	//, _466
.LEHB338:
	bl	_ZNKSt5ctypeIcE13_M_widen_initEv		//
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	ldr	x2, [x25]	// MEM[(const struct ctype *)_466].D.31376._vptr.facet, MEM[(const struct ctype *)_466].D.31376._vptr.facet
	adrp	x0, _ZNKSt5ctypeIcE8do_widenEc	// tmp976,
	add	x0, x0, :lo12:_ZNKSt5ctypeIcE8do_widenEc	// tmp975, tmp976,
	mov	w1, 10	// _473,
	ldr	x2, [x2, 48]	// _477, MEM[(int (*) () *)_476 + 48B]
	cmp	x2, x0	// _477, tmp975
	beq	.L4557		//,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	mov	x0, x25	//, _466
	blr	x2		// _477
.LEHE338:
	and	w1, w0, 255	// _473,
	b	.L4557		//
.L4508:
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:876: 	this->_M_widen_init();
	mov	x0, x28	//, _355
.LEHB339:
	bl	_ZNKSt5ctypeIcE13_M_widen_initEv		//
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	ldr	x2, [x28]	// MEM[(const struct ctype *)_355].D.31376._vptr.facet, MEM[(const struct ctype *)_355].D.31376._vptr.facet
	adrp	x0, _ZNKSt5ctypeIcE8do_widenEc	// tmp865,
	add	x0, x0, :lo12:_ZNKSt5ctypeIcE8do_widenEc	// tmp864, tmp865,
	mov	w1, 10	// _362,
	ldr	x2, [x2, 48]	// _366, MEM[(int (*) () *)_365 + 48B]
	cmp	x2, x0	// _366, tmp864
	beq	.L4509		//,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	mov	x0, x28	//, _355
	blr	x2		// _366
.LEHE339:
	and	w1, w0, 255	// _362,
	b	.L4509		//
.L5029:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:219: 	    _M_data(_M_create(__dnew, size_type(0)));
	mov	x2, 0	//,
	add	x1, sp, 152	//,,
	add	x0, sp, 352	// tmp1501,,
.LEHB340:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm		//
.LEHE340:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	ldr	x1, [sp, 152]	// __dnew, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x0, [sp, 352]	// _422, MEM[(char * *)&D.66228]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x1, [sp, 368]	// __dnew, MEM[(size_type *)&D.66228 + 16B]
.L4540:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x2, x25	//, _417
	mov	x1, x23	//, pretmp_2295
	bl	memcpy		//
	ldr	x25, [sp, 152]	// _417, __dnew
	ldr	x0, [sp, 352]	// pretmp_2300, MEM[(const struct basic_string *)&D.66228]
	b	.L4542		//
.L5027:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:219: 	    _M_data(_M_create(__dnew, size_type(0)));
	mov	x2, 0	//,
	add	x1, sp, 168	//,,
	add	x0, sp, 416	// tmp1522,,
.LEHB341:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm		//
.LEHE341:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	ldr	x1, [sp, 168]	// __dnew, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x0, [sp, 416]	// _174, MEM[(char * *)&D.66352]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x1, [sp, 432]	// __dnew, MEM[(size_type *)&D.66352 + 16B]
.L4678:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x2, x27	//, _876
	mov	x1, x23	//, pretmp_2279
	bl	memcpy		//
	ldr	x27, [sp, 168]	// _876, __dnew
	ldr	x0, [sp, 416]	// pretmp_2284, MEM[(const struct basic_string *)&D.66352]
	b	.L4680		//
.L5046:
	ldp	x2, x3, [x1, 16]	// _914, MEM[(char * {ref-all})iftmp.58_911 + 16B]
	stp	x2, x3, [sp, 496]	// _914, MEM[(char * {ref-all})&D.66353 + 16B]
	b	.L4692		//
.L4589:
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:876: 	this->_M_widen_init();
	mov	x0, x25	//, _553
.LEHB342:
	bl	_ZNKSt5ctypeIcE13_M_widen_initEv		//
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	ldr	x2, [x25]	// MEM[(const struct ctype *)_553].D.31376._vptr.facet, MEM[(const struct ctype *)_553].D.31376._vptr.facet
	adrp	x0, _ZNKSt5ctypeIcE8do_widenEc	// tmp1061,
	add	x0, x0, :lo12:_ZNKSt5ctypeIcE8do_widenEc	// tmp1060, tmp1061,
	mov	w1, 10	// _560,
	ldr	x2, [x2, 48]	// _564, MEM[(int (*) () *)_563 + 48B]
	cmp	x2, x0	// _564, tmp1060
	beq	.L4590		//,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	mov	x0, x25	//, _553
	blr	x2		// _564
.LEHE342:
	and	w1, w0, 255	// _560,
	b	.L4590		//
.L5050:
	ldp	x2, x3, [x1, 16]	// _455, MEM[(char * {ref-all})iftmp.58_452 + 16B]
	stp	x2, x3, [sp, 496]	// _455, MEM[(char * {ref-all})&D.66229 + 16B]
	b	.L4554		//
.L5031:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:219: 	    _M_data(_M_create(__dnew, size_type(0)));
	mov	x2, 0	//,
	add	x1, sp, 144	//,,
	add	x0, sp, 320	// tmp1480,,
.LEHB343:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm		//
.LEHE343:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	ldr	x1, [sp, 144]	// __dnew, __dnew
// /usr/local/include/c++/8.3.0/bits/basic_string.h:168:       { _M_dataplus._M_p = __p; }
	str	x0, [sp, 320]	// _311, MEM[(char * *)&D.66161]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:200:       { _M_allocated_capacity = __capacity; }
	str	x1, [sp, 336]	// __dnew, MEM[(size_type *)&D.66161 + 16B]
.L4492:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:352: 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
	mov	x2, x28	//, _306
	mov	x1, x23	//, pretmp_286
	bl	memcpy		//
	ldr	x28, [sp, 144]	// _306, __dnew
	ldr	x0, [sp, 320]	// pretmp_1100, MEM[(const struct basic_string *)&D.66161]
	b	.L4494		//
.L5010:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:827: 	  _M_default_append(__new_size - size());
	sub	x1, x0, x1	//, _273, tmp797
	add	x0, sp, 640	//,,
.LEHB344:
	bl	_ZNSt6vectorImSaImEE17_M_default_appendEm		//
	b	.L4525		//
.L4483:
	mov	x1, x21	//, prephitmp_318
	add	x0, sp, 664	//,,
	bl	_ZNSt6vectorImSaImEE17_M_default_appendEm		//
.LEHE344:
	b	.L4487		//
.L4727:
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:876: 	this->_M_widen_init();
	mov	x0, x27	//, _1012
.LEHB345:
	bl	_ZNKSt5ctypeIcE13_M_widen_initEv		//
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	ldr	x2, [x27]	// MEM[(const struct ctype *)_1012].D.31376._vptr.facet, MEM[(const struct ctype *)_1012].D.31376._vptr.facet
	adrp	x0, _ZNKSt5ctypeIcE8do_widenEc	// tmp1248,
	add	x0, x0, :lo12:_ZNKSt5ctypeIcE8do_widenEc	// tmp1247, tmp1248,
	mov	w1, 10	// _1019,
	ldr	x2, [x2, 48]	// _1023, MEM[(int (*) () *)_1022 + 48B]
	cmp	x2, x0	// _1023, tmp1247
	beq	.L4728		//,
// /usr/local/include/c++/8.3.0/bits/locale_facets.h:877: 	return this->do_widen(__c);
	mov	x0, x27	//, _1012
	blr	x2		// _1023
.LEHE345:
	and	w1, w0, 255	// _1019,
	b	.L4728		//
.L4533:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:827: 	  _M_default_append(__new_size - size());
	add	x0, sp, 200	//,,
.LEHB346:
	bl	_ZNSt6vectorIySaIyEE17_M_default_appendEm		//
.LEHE346:
	b	.L4535		//
.L5054:
	ldp	x2, x3, [x1, 16]	// _344, MEM[(char * {ref-all})iftmp.58_341 + 16B]
	stp	x2, x3, [sp, 496]	// _344, MEM[(char * {ref-all})&D.66162 + 16B]
	b	.L4506		//
.L4814:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:296: 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
	mov	x22, 0	// prephitmp_322,
	mov	x26, 0	// _240,
	b	.L4480		//
.L5045:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1932: 			  _M_limit(__pos, __n1), __s, __n2);
	mov	x2, 0	//,
	mov	x1, 0	//,
	add	x0, sp, 448	// tmp1528,,
.LEHB347:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm		//
.LEHE347:
	b	.L4994		//
.L5049:
	mov	x2, 0	//,
	mov	x1, 0	//,
	add	x0, sp, 448	// tmp1507,,
.LEHB348:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm		//
.LEHE348:
	b	.L4992		//
.L4712:
// /usr/local/include/c++/8.3.0/bits/char_traits.h:350: 	if (__n == 0)
	mov	x1, x0	// pretmp_2276, tmp1194
	cbz	x27, .L4713	// _963,
	b	.L4711		//
	.p2align 2
.L4574:
	mov	x1, x0	// pretmp_2292, tmp1007
	cbz	x25, .L4575	// _504,
	b	.L4573		//
	.p2align 2
.L5053:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:1932: 			  _M_limit(__pos, __n1), __s, __n2);
	mov	x2, 0	//,
	mov	x1, 0	//,
	add	x0, sp, 448	// tmp1487,,
.LEHB349:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm		//
.LEHE349:
	b	.L4991		//
.L5036:
	ldp	x2, x3, [x1, 16]	// _542, MEM[(char * {ref-all})iftmp.58_539 + 16B]
	stp	x2, x3, [sp, 496]	// _542, MEM[(char * {ref-all})&D.66285 + 16B]
	b	.L4587		//
.L5042:
	ldp	x2, x3, [x1, 16]	// _1001, MEM[(char * {ref-all})iftmp.58_998 + 16B]
	stp	x2, x3, [sp, 496]	// _1001, MEM[(char * {ref-all})&D.66409 + 16B]
	b	.L4725		//
.L5035:
	mov	x2, 0	//,
	mov	x1, 0	//,
	add	x0, sp, 448	// tmp1516,,
.LEHB350:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm		//
.LEHE350:
	b	.L4993		//
.L5041:
	mov	x2, 0	//,
	mov	x1, 0	//,
	add	x0, sp, 416	// tmp1539,,
.LEHB351:
	bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm		//
.LEHE351:
	b	.L4995		//
.L5052:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:312: 	  __throw_length_error(__N(__s));
	adrp	x0, .LC8	// tmp832,
	add	x0, x0, :lo12:.LC8	//, tmp832,
.LEHB352:
	bl	_ZSt20__throw_length_errorPKc		//
.LEHE352:
.L5008:
.LEHB353:
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:102: 	  std::__throw_bad_alloc();
	bl	_ZSt17__throw_bad_allocv		//
.LEHE353:
.L5038:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:212: 	  std::__throw_logic_error(__N("basic_string::"
	adrp	x0, .LC6	// tmp1201,
	add	x0, x0, :lo12:.LC6	//, tmp1201,
.LEHB354:
	bl	_ZSt19__throw_logic_errorPKc		//
.LEHE354:
.L5032:
	adrp	x0, .LC6	// tmp1014,
	add	x0, x0, :lo12:.LC6	//, tmp1014,
.LEHB355:
	bl	_ZSt19__throw_logic_errorPKc		//
.LEHE355:
	.p2align 2
.L5016:
.LEHB356:
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:102: 	  std::__throw_bad_alloc();
	bl	_ZSt17__throw_bad_allocv		//
.LEHE356:
.L5026:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:212: 	  std::__throw_logic_error(__N("basic_string::"
	adrp	x0, .LC6	// tmp1114,
	add	x0, x0, :lo12:.LC6	//, tmp1114,
.LEHB357:
	bl	_ZSt19__throw_logic_errorPKc		//
.LEHE357:
	.p2align 2
.L5021:
.LEHB358:
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:102: 	  std::__throw_bad_alloc();
	bl	_ZSt17__throw_bad_allocv		//
.LEHE358:
.L5020:
.LEHB359:
	bl	_ZSt17__throw_bad_allocv		//
.LEHE359:
.L5019:
.LEHB360:
	bl	_ZSt17__throw_bad_allocv		//
.LEHE360:
.L5030:
// /usr/local/include/c++/8.3.0/bits/basic_string.tcc:212: 	  std::__throw_logic_error(__N("basic_string::"
	adrp	x0, .LC6	// tmp818,
	add	x0, x0, :lo12:.LC6	//, tmp818,
.LEHB361:
	bl	_ZSt19__throw_logic_errorPKc		//
.LEHE361:
.L5028:
	adrp	x0, .LC6	// tmp929,
	add	x0, x0, :lo12:.LC6	//, tmp929,
.LEHB362:
	bl	_ZSt19__throw_logic_errorPKc		//
.LEHE362:
.L5055:
.LEHB363:
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:50: 	__throw_bad_cast();
	bl	_ZSt16__throw_bad_castv		//
.LEHE363:
.L5018:
.LEHB364:
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:102: 	  std::__throw_bad_alloc();
	bl	_ZSt17__throw_bad_allocv		//
.LEHE364:
.L5040:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:312: 	  __throw_length_error(__N(__s));
	adrp	x0, .LC8	// tmp1215,
	add	x0, x0, :lo12:.LC8	//, tmp1215,
.LEHB365:
	bl	_ZSt20__throw_length_errorPKc		//
.LEHE365:
.L5043:
.LEHB366:
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:50: 	__throw_bad_cast();
	bl	_ZSt16__throw_bad_castv		//
.LEHE366:
.L5034:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:312: 	  __throw_length_error(__N(__s));
	adrp	x0, .LC8	// tmp1028,
	add	x0, x0, :lo12:.LC8	//, tmp1028,
.LEHB367:
	bl	_ZSt20__throw_length_errorPKc		//
.LEHE367:
.L5037:
.LEHB368:
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:50: 	__throw_bad_cast();
	bl	_ZSt16__throw_bad_castv		//
.LEHE368:
.L5044:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:312: 	  __throw_length_error(__N(__s));
	adrp	x0, .LC8	// tmp1128,
	add	x0, x0, :lo12:.LC8	//, tmp1128,
.LEHB369:
	bl	_ZSt20__throw_length_errorPKc		//
.LEHE369:
.L5047:
.LEHB370:
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:50: 	__throw_bad_cast();
	bl	_ZSt16__throw_bad_castv		//
.LEHE370:
.L5048:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:312: 	  __throw_length_error(__N(__s));
	adrp	x0, .LC8	// tmp943,
	add	x0, x0, :lo12:.LC8	//, tmp943,
.LEHB371:
	bl	_ZSt20__throw_length_errorPKc		//
.LEHE371:
.L5051:
.LEHB372:
// /usr/local/include/c++/8.3.0/bits/basic_ios.h:50: 	__throw_bad_cast();
	bl	_ZSt16__throw_bad_castv		//
.LEHE372:
.L4867:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 416]	// _878, MEM[(const struct basic_string *)&D.66352]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x2, sp, 432	// tmp1136,,
	mov	x19, x0	// tmp1138,
	cmp	x1, x2	// _878, tmp1136
	beq	.L4719		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _965
.L5006:
	bl	_ZdlPv		//
.L4719:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 384]	// _598,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x26, x26, 16	// tmp1280, tmp1407,
	cmp	x0, x26	// _598, tmp1280
	beq	.L4603		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4603:
// bitmapdecoding.cpp:515:   std::vector<std::vector<unsigned long long>> allresults;
	add	x0, sp, 224	//,,
	bl	_ZNSt6vectorIS_IySaIyEESaIS1_EED1Ev		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 200]	// _171, results.D.43930._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbnz	x0, .L5056	// _171,
.L4812:
// bitmapdecoding.cpp:513:   LinuxEvents<PERF_TYPE_HARDWARE> unified(evts);
	add	x0, sp, 512	// tmp1545,,
	bl	_ZN11LinuxEventsILi0EED1Ev		//
.L4806:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 176]	// _172, evts.D.42966._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4813	// _172,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4813:
	mov	x0, x19	//, tmp1387
.LEHB373:
	bl	_Unwind_Resume		//
.L4864:
	mov	x19, x0	// tmp1179,
.L4705:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _873, MEM[(const struct basic_string *)&D.66352]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 432	// tmp1182,,
	cmp	x0, x1	// _873, tmp1182
	bne	.L5006		//,
	b	.L4719		//
.L4865:
	mov	x19, x0	// tmp1173,
.L4703:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 448]	// _872, MEM[(const struct basic_string *)&D.66351]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 464	// tmp1178,,
	cmp	x0, x1	// _872, tmp1178
	beq	.L4705		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L4705		//
.L5056:
	bl	_ZdlPv		//
	b	.L4812		//
.L4850:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 480]	// _301, MEM[(const struct basic_string *)&D.66162]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp876, tmp1410,
	mov	x19, x0	// tmp878,
	cmp	x1, x23	// _301, tmp876
	beq	.L4517		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _301
	bl	_ZdlPv		//
.L4517:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 448]	// _302, MEM[(const struct basic_string *)&D.66160]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 464	// tmp882,,
	cmp	x0, x1	// _302, tmp882
	beq	.L4519		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4519:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 320]	// _303, MEM[(const struct basic_string *)&D.66161]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 336	// tmp886,,
	cmp	x0, x1	// _303, tmp886
	beq	.L4500		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4500:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _274, MEM[(const struct basic_string *)&D.66146]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 432	// tmp898,,
	cmp	x0, x1	// _274, tmp898
	beq	.L4527		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4527:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 664]	// _275, MEM[(struct vector *)&unified + 152B].D.42087._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4528	// _275,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4528:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 640]	// _276, MEM[(struct vector *)&unified + 128B].D.42087._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4529	// _276,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4529:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x26, .L4806	// _240,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x26	//, _240
	bl	_ZdlPv		//
	b	.L4806		//
.L4857:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 352]	// _419, MEM[(const struct basic_string *)&D.66228]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x2, sp, 368	// tmp951,,
	mov	x19, x0	// tmp953,
	cmp	x1, x2	// _419, tmp951
	beq	.L4581		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _506
.L5003:
	bl	_ZdlPv		//
.L4581:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _396,
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 432	// tmp1088,,
	cmp	x0, x1	// _396, tmp1088
	beq	.L4603		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L4603		//
.L4866:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 480]	// _871, MEM[(const struct basic_string *)&D.66353]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp1172, tmp1410,
	mov	x19, x0	// tmp1174,
	cmp	x1, x23	// _871, tmp1172
	beq	.L4703		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _871
	bl	_ZdlPv		//
	b	.L4703		//
.L4851:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 320]	// _308, MEM[(const struct basic_string *)&D.66161]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x2, sp, 336	// tmp840,,
	mov	x19, x0	// tmp842,
	cmp	x1, x2	// _308, tmp840
	beq	.L4500		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _308
	bl	_ZdlPv		//
	b	.L4500		//
.L4848:
	mov	x19, x0	// tmp883,
	b	.L4519		//
.L4849:
	mov	x19, x0	// tmp877,
	b	.L4517		//
.L4478:
// bitmapdecoding.cpp:504:   uint32_t *bigarray = new uint32_t[wordcount * 64];
	bl	__cxa_throw_bad_array_new_length		//
.LEHE373:
.L4847:
	mov	x19, x0	// tmp841,
	b	.L4500		//
.L4862:
	mov	x19, x0	// tmp1224,
	b	.L4719		//
.L4852:
	mov	x19, x0	// tmp1037,
	b	.L4581		//
.L4859:
	mov	x19, x0	// tmp1073,
.L4598:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 448]	// _500, MEM[(const struct basic_string *)&D.66283]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 464	// tmp1078,,
	cmp	x0, x1	// _500, tmp1078
	beq	.L4600		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4600:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 384]	// _501, MEM[(const struct basic_string *)&D.66284]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x26, x26, 16	// tmp1082, tmp1407,
	cmp	x0, x26	// _501, tmp1082
	bne	.L5003		//,
	b	.L4581		//
.L4841:
	mov	x19, x0	// tmp1085,
	b	.L4603		//
.L4845:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x1, [sp, 296]	// _169, avg.D.45803._M_impl._M_start
	mov	x19, x0	// tmp1395,
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x1, .L4790	// _169,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _169
	bl	_ZdlPv		//
	b	.L4790		//
.L4844:
	mov	x19, x0	// tmp1393,
	mov	x0, x23	//, tmp1410
	bl	_ZNSt6vectorIS_IySaIyEESaIS1_EED1Ev		//
.L4790:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [sp, 272]	// _170, mins.D.43930._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4603	// _170,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L4603		//
.L4875:
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:86: 	  __catch(...)
	bl	__cxa_begin_catch		//
.L4787:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x21, x26	// __cur, __first
	bne	.L5057		//,
.LEHB374:
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:89: 	      __throw_exception_again;
	bl	__cxa_rethrow		//
.LEHE374:
.L4873:
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:86: 	  __catch(...)
	bl	__cxa_begin_catch		//
.L4766:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	cmp	x25, x21	// __first, __cur
	bne	.L5058		//,
.LEHB375:
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:89: 	      __throw_exception_again;
	bl	__cxa_rethrow		//
.LEHE375:
.L5057:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [x26]	// _1126, MEM[base: __first_1125, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4786	// _1126,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4786:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	add	x26, x26, 24	// __first, __first,
	b	.L4787		//
.L4874:
	mov	x19, x0	// tmp1347,
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:86: 	  __catch(...)
	bl	__cxa_end_catch		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:285: 	_M_deallocate(_M_impl._M_start,
	ldr	x0, [sp, 480]	// _1106, MEM[(struct _Vector_base *)&D.46870]._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4790	// _1106,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L4790		//
.L4846:
	mov	x19, x0	// tmp899,
	b	.L4527		//
.L4842:
	mov	x19, x0	// tmp1390,
	mov	x0, x23	//, tmp1410
	bl	_ZNSt6vectorIS_IySaIyEESaIS1_EED1Ev		//
	b	.L4603		//
.L5058:
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:567: 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
	ldr	x0, [x25]	// _1076, MEM[base: __first_1075, offset: 0B]
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4765	// _1076,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4765:
// /usr/local/include/c++/8.3.0/bits/stl_construct.h:107: 	  for (; __first != __last; ++__first)
	add	x25, x25, 24	// __first, __first,
	b	.L4766		//
.L4872:
	mov	x19, x0	// tmp1327,
// /usr/local/include/c++/8.3.0/bits/stl_uninitialized.h:86: 	  __catch(...)
	bl	__cxa_end_catch		//
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:285: 	_M_deallocate(_M_impl._M_start,
	ldr	x0, [sp, 480]	// _1062, MEM[(struct _Vector_base *)&D.46867]._M_impl._M_start
// /usr/local/include/c++/8.3.0/bits/stl_vector.h:303: 	if (__p)
	cbz	x0, .L4603	// _1062,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L4603		//
.L4858:
	mov	x19, x0	// tmp1079,
	b	.L4600		//
.L4853:
	mov	x19, x0	// tmp1037,
	b	.L4581		//
.L4863:
	mov	x19, x0	// tmp1224,
	b	.L4719		//
.L4843:
	mov	x19, x0	// tmp1350,
	b	.L4790		//
.L4840:
	mov	x19, x0	// tmp1387,
	b	.L4806		//
.L4871:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 448]	// _965, MEM[(const struct basic_string *)&D.66408]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x2, sp, 464	// tmp1223,,
	mov	x19, x0	// tmp1225,
	cmp	x1, x2	// _965, tmp1223
	beq	.L4719		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _965
	b	.L5006		//
.L4868:
	mov	x19, x0	// tmp1266,
.L4738:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 448]	// _960, MEM[(const struct basic_string *)&D.66408]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 464	// tmp1269,,
	cmp	x0, x1	// _960, tmp1269
	bne	.L5006		//,
	b	.L4719		//
.L4869:
	mov	x19, x0	// tmp1260,
.L4736:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 416]	// _959, MEM[(const struct basic_string *)&D.66407]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 432	// tmp1265,,
	cmp	x0, x1	// _959, tmp1265
	beq	.L4738		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
	b	.L4738		//
.L4856:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 480]	// _412, MEM[(const struct basic_string *)&D.66229]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp987, tmp1410,
	mov	x19, x0	// tmp989,
	cmp	x1, x23	// _412, tmp987
	beq	.L4565		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _412
	bl	_ZdlPv		//
.L4565:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 448]	// _413, MEM[(const struct basic_string *)&D.66227]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 464	// tmp993,,
	cmp	x0, x1	// _413, tmp993
	beq	.L4567		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	bl	_ZdlPv		//
.L4567:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x0, [sp, 352]	// _414, MEM[(const struct basic_string *)&D.66228]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x1, sp, 368	// tmp997,,
	cmp	x0, x1	// _414, tmp997
	bne	.L5003		//,
	b	.L4581		//
.L4854:
	mov	x19, x0	// tmp994,
	b	.L4567		//
.L4855:
	mov	x19, x0	// tmp988,
	b	.L4565		//
.L4860:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 480]	// _499, MEM[(const struct basic_string *)&D.66285]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp1072, tmp1410,
	mov	x19, x0	// tmp1074,
	cmp	x1, x23	// _499, tmp1072
	beq	.L4598		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _499
	bl	_ZdlPv		//
	b	.L4598		//
.L4861:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 384]	// _506, MEM[(const struct basic_string *)&D.66284]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x26, x26, 16	// tmp1036, tmp1407,
	mov	x19, x0	// tmp1038,
	cmp	x1, x26	// _506, tmp1036
	beq	.L4581		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _506
	b	.L5003		//
.L4870:
// /usr/local/include/c++/8.3.0/bits/basic_string.h:211:       { return _M_data() == _M_local_data(); }
	ldr	x1, [sp, 480]	// _958, MEM[(const struct basic_string *)&D.66409]
// /usr/local/include/c++/8.3.0/bits/basic_string.h:220: 	if (!_M_is_local())
	add	x23, x23, 16	// tmp1259, tmp1410,
	mov	x19, x0	// tmp1261,
	cmp	x1, x23	// _958, tmp1259
	beq	.L4736		//,
// /usr/local/include/c++/8.3.0/ext/new_allocator.h:125: 	::operator delete(__p);
	mov	x0, x1	//, _958
	bl	_ZdlPv		//
	b	.L4736		//
	.cfi_endproc
.LFE1949:
	.section	.gcc_except_table
	.align	2
.LLSDA1949:
	.byte	0xff
	.byte	0x9b
	.uleb128 .LLSDATT1949-.LLSDATTD1949
.LLSDATTD1949:
	.byte	0x1
	.uleb128 .LLSDACSE1949-.LLSDACSB1949
.LLSDACSB1949:
	.uleb128 .LEHB303-.LFB1949
	.uleb128 .LEHE303-.LEHB303
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB304-.LFB1949
	.uleb128 .LEHE304-.LEHB304
	.uleb128 .L4840-.LFB1949
	.uleb128 0
	.uleb128 .LEHB305-.LFB1949
	.uleb128 .LEHE305-.LEHB305
	.uleb128 .L4846-.LFB1949
	.uleb128 0
	.uleb128 .LEHB306-.LFB1949
	.uleb128 .LEHE306-.LEHB306
	.uleb128 .L4841-.LFB1949
	.uleb128 0
	.uleb128 .LEHB307-.LFB1949
	.uleb128 .LEHE307-.LEHB307
	.uleb128 .L4873-.LFB1949
	.uleb128 0x1
	.uleb128 .LEHB308-.LFB1949
	.uleb128 .LEHE308-.LEHB308
	.uleb128 .L4842-.LFB1949
	.uleb128 0
	.uleb128 .LEHB309-.LFB1949
	.uleb128 .LEHE309-.LEHB309
	.uleb128 .L4843-.LFB1949
	.uleb128 0
	.uleb128 .LEHB310-.LFB1949
	.uleb128 .LEHE310-.LEHB310
	.uleb128 .L4875-.LFB1949
	.uleb128 0x1
	.uleb128 .LEHB311-.LFB1949
	.uleb128 .LEHE311-.LEHB311
	.uleb128 .L4844-.LFB1949
	.uleb128 0
	.uleb128 .LEHB312-.LFB1949
	.uleb128 .LEHE312-.LEHB312
	.uleb128 .L4845-.LFB1949
	.uleb128 0
	.uleb128 .LEHB313-.LFB1949
	.uleb128 .LEHE313-.LEHB313
	.uleb128 .L4841-.LFB1949
	.uleb128 0
	.uleb128 .LEHB314-.LFB1949
	.uleb128 .LEHE314-.LEHB314
	.uleb128 .L4861-.LFB1949
	.uleb128 0
	.uleb128 .LEHB315-.LFB1949
	.uleb128 .LEHE315-.LEHB315
	.uleb128 .L4858-.LFB1949
	.uleb128 0
	.uleb128 .LEHB316-.LFB1949
	.uleb128 .LEHE316-.LEHB316
	.uleb128 .L4859-.LFB1949
	.uleb128 0
	.uleb128 .LEHB317-.LFB1949
	.uleb128 .LEHE317-.LEHB317
	.uleb128 .L4860-.LFB1949
	.uleb128 0
	.uleb128 .LEHB318-.LFB1949
	.uleb128 .LEHE318-.LEHB318
	.uleb128 .L4871-.LFB1949
	.uleb128 0
	.uleb128 .LEHB319-.LFB1949
	.uleb128 .LEHE319-.LEHB319
	.uleb128 .L4868-.LFB1949
	.uleb128 0
	.uleb128 .LEHB320-.LFB1949
	.uleb128 .LEHE320-.LEHB320
	.uleb128 .L4869-.LFB1949
	.uleb128 0
	.uleb128 .LEHB321-.LFB1949
	.uleb128 .LEHE321-.LEHB321
	.uleb128 .L4870-.LFB1949
	.uleb128 0
	.uleb128 .LEHB322-.LFB1949
	.uleb128 .LEHE322-.LEHB322
	.uleb128 .L4841-.LFB1949
	.uleb128 0
	.uleb128 .LEHB323-.LFB1949
	.uleb128 .LEHE323-.LEHB323
	.uleb128 .L4867-.LFB1949
	.uleb128 0
	.uleb128 .LEHB324-.LFB1949
	.uleb128 .LEHE324-.LEHB324
	.uleb128 .L4864-.LFB1949
	.uleb128 0
	.uleb128 .LEHB325-.LFB1949
	.uleb128 .LEHE325-.LEHB325
	.uleb128 .L4865-.LFB1949
	.uleb128 0
	.uleb128 .LEHB326-.LFB1949
	.uleb128 .LEHE326-.LEHB326
	.uleb128 .L4866-.LFB1949
	.uleb128 0
	.uleb128 .LEHB327-.LFB1949
	.uleb128 .LEHE327-.LEHB327
	.uleb128 .L4857-.LFB1949
	.uleb128 0
	.uleb128 .LEHB328-.LFB1949
	.uleb128 .LEHE328-.LEHB328
	.uleb128 .L4854-.LFB1949
	.uleb128 0
	.uleb128 .LEHB329-.LFB1949
	.uleb128 .LEHE329-.LEHB329
	.uleb128 .L4855-.LFB1949
	.uleb128 0
	.uleb128 .LEHB330-.LFB1949
	.uleb128 .LEHE330-.LEHB330
	.uleb128 .L4856-.LFB1949
	.uleb128 0
	.uleb128 .LEHB331-.LFB1949
	.uleb128 .LEHE331-.LEHB331
	.uleb128 .L4851-.LFB1949
	.uleb128 0
	.uleb128 .LEHB332-.LFB1949
	.uleb128 .LEHE332-.LEHB332
	.uleb128 .L4848-.LFB1949
	.uleb128 0
	.uleb128 .LEHB333-.LFB1949
	.uleb128 .LEHE333-.LEHB333
	.uleb128 .L4849-.LFB1949
	.uleb128 0
	.uleb128 .LEHB334-.LFB1949
	.uleb128 .LEHE334-.LEHB334
	.uleb128 .L4850-.LFB1949
	.uleb128 0
	.uleb128 .LEHB335-.LFB1949
	.uleb128 .LEHE335-.LEHB335
	.uleb128 .L4852-.LFB1949
	.uleb128 0
	.uleb128 .LEHB336-.LFB1949
	.uleb128 .LEHE336-.LEHB336
	.uleb128 .L4862-.LFB1949
	.uleb128 0
	.uleb128 .LEHB337-.LFB1949
	.uleb128 .LEHE337-.LEHB337
	.uleb128 .L4866-.LFB1949
	.uleb128 0
	.uleb128 .LEHB338-.LFB1949
	.uleb128 .LEHE338-.LEHB338
	.uleb128 .L4856-.LFB1949
	.uleb128 0
	.uleb128 .LEHB339-.LFB1949
	.uleb128 .LEHE339-.LEHB339
	.uleb128 .L4850-.LFB1949
	.uleb128 0
	.uleb128 .LEHB340-.LFB1949
	.uleb128 .LEHE340-.LEHB340
	.uleb128 .L4853-.LFB1949
	.uleb128 0
	.uleb128 .LEHB341-.LFB1949
	.uleb128 .LEHE341-.LEHB341
	.uleb128 .L4863-.LFB1949
	.uleb128 0
	.uleb128 .LEHB342-.LFB1949
	.uleb128 .LEHE342-.LEHB342
	.uleb128 .L4860-.LFB1949
	.uleb128 0
	.uleb128 .LEHB343-.LFB1949
	.uleb128 .LEHE343-.LEHB343
	.uleb128 .L4847-.LFB1949
	.uleb128 0
	.uleb128 .LEHB344-.LFB1949
	.uleb128 .LEHE344-.LEHB344
	.uleb128 .L4846-.LFB1949
	.uleb128 0
	.uleb128 .LEHB345-.LFB1949
	.uleb128 .LEHE345-.LEHB345
	.uleb128 .L4870-.LFB1949
	.uleb128 0
	.uleb128 .LEHB346-.LFB1949
	.uleb128 .LEHE346-.LEHB346
	.uleb128 .L4841-.LFB1949
	.uleb128 0
	.uleb128 .LEHB347-.LFB1949
	.uleb128 .LEHE347-.LEHB347
	.uleb128 .L4865-.LFB1949
	.uleb128 0
	.uleb128 .LEHB348-.LFB1949
	.uleb128 .LEHE348-.LEHB348
	.uleb128 .L4855-.LFB1949
	.uleb128 0
	.uleb128 .LEHB349-.LFB1949
	.uleb128 .LEHE349-.LEHB349
	.uleb128 .L4849-.LFB1949
	.uleb128 0
	.uleb128 .LEHB350-.LFB1949
	.uleb128 .LEHE350-.LEHB350
	.uleb128 .L4859-.LFB1949
	.uleb128 0
	.uleb128 .LEHB351-.LFB1949
	.uleb128 .LEHE351-.LEHB351
	.uleb128 .L4869-.LFB1949
	.uleb128 0
	.uleb128 .LEHB352-.LFB1949
	.uleb128 .LEHE352-.LEHB352
	.uleb128 .L4851-.LFB1949
	.uleb128 0
	.uleb128 .LEHB353-.LFB1949
	.uleb128 .LEHE353-.LEHB353
	.uleb128 .L4840-.LFB1949
	.uleb128 0
	.uleb128 .LEHB354-.LFB1949
	.uleb128 .LEHE354-.LEHB354
	.uleb128 .L4862-.LFB1949
	.uleb128 0
	.uleb128 .LEHB355-.LFB1949
	.uleb128 .LEHE355-.LEHB355
	.uleb128 .L4852-.LFB1949
	.uleb128 0
	.uleb128 .LEHB356-.LFB1949
	.uleb128 .LEHE356-.LEHB356
	.uleb128 .L4841-.LFB1949
	.uleb128 0
	.uleb128 .LEHB357-.LFB1949
	.uleb128 .LEHE357-.LEHB357
	.uleb128 .L4863-.LFB1949
	.uleb128 0
	.uleb128 .LEHB358-.LFB1949
	.uleb128 .LEHE358-.LEHB358
	.uleb128 .L4875-.LFB1949
	.uleb128 0x1
	.uleb128 .LEHB359-.LFB1949
	.uleb128 .LEHE359-.LEHB359
	.uleb128 .L4843-.LFB1949
	.uleb128 0
	.uleb128 .LEHB360-.LFB1949
	.uleb128 .LEHE360-.LEHB360
	.uleb128 .L4873-.LFB1949
	.uleb128 0x1
	.uleb128 .LEHB361-.LFB1949
	.uleb128 .LEHE361-.LEHB361
	.uleb128 .L4847-.LFB1949
	.uleb128 0
	.uleb128 .LEHB362-.LFB1949
	.uleb128 .LEHE362-.LEHB362
	.uleb128 .L4853-.LFB1949
	.uleb128 0
	.uleb128 .LEHB363-.LFB1949
	.uleb128 .LEHE363-.LEHB363
	.uleb128 .L4850-.LFB1949
	.uleb128 0
	.uleb128 .LEHB364-.LFB1949
	.uleb128 .LEHE364-.LEHB364
	.uleb128 .L4841-.LFB1949
	.uleb128 0
	.uleb128 .LEHB365-.LFB1949
	.uleb128 .LEHE365-.LEHB365
	.uleb128 .L4871-.LFB1949
	.uleb128 0
	.uleb128 .LEHB366-.LFB1949
	.uleb128 .LEHE366-.LEHB366
	.uleb128 .L4870-.LFB1949
	.uleb128 0
	.uleb128 .LEHB367-.LFB1949
	.uleb128 .LEHE367-.LEHB367
	.uleb128 .L4861-.LFB1949
	.uleb128 0
	.uleb128 .LEHB368-.LFB1949
	.uleb128 .LEHE368-.LEHB368
	.uleb128 .L4860-.LFB1949
	.uleb128 0
	.uleb128 .LEHB369-.LFB1949
	.uleb128 .LEHE369-.LEHB369
	.uleb128 .L4867-.LFB1949
	.uleb128 0
	.uleb128 .LEHB370-.LFB1949
	.uleb128 .LEHE370-.LEHB370
	.uleb128 .L4866-.LFB1949
	.uleb128 0
	.uleb128 .LEHB371-.LFB1949
	.uleb128 .LEHE371-.LEHB371
	.uleb128 .L4857-.LFB1949
	.uleb128 0
	.uleb128 .LEHB372-.LFB1949
	.uleb128 .LEHE372-.LEHB372
	.uleb128 .L4856-.LFB1949
	.uleb128 0
	.uleb128 .LEHB373-.LFB1949
	.uleb128 .LEHE373-.LEHB373
	.uleb128 0
	.uleb128 0
	.uleb128 .LEHB374-.LFB1949
	.uleb128 .LEHE374-.LEHB374
	.uleb128 .L4874-.LFB1949
	.uleb128 0
	.uleb128 .LEHB375-.LFB1949
	.uleb128 .LEHE375-.LEHB375
	.uleb128 .L4872-.LFB1949
	.uleb128 0
.LLSDACSE1949:
	.byte	0x1
	.byte	0
	.align	2
	.4byte	0

.LLSDATT1949:
	.text
	.size	_Z8fasttestPKcc, .-_Z8fasttestPKcc
	.section	.text.startup,"ax",@progbits
	.align	2
	.p2align 3,,7
	.global	main
	.type	main, %function
main:
.LFB1950:
	.cfi_startproc
	stp	x29, x30, [sp, -32]!	//,,,
	.cfi_def_cfa_offset 32
	.cfi_offset 29, -32
	.cfi_offset 30, -24
// bitmapdecoding.cpp:567:   if(argc>1)fasttest("nfl.csv", ',');
	cmp	w0, 1	// argc,
// bitmapdecoding.cpp:566: int main(int argc, char** argv) {
	mov	x29, sp	//,
	str	x19, [sp, 16]	//,
	.cfi_offset 19, -16
// bitmapdecoding.cpp:567:   if(argc>1)fasttest("nfl.csv", ',');
	adrp	x19, .LC10	// tmp110,
	add	x19, x19, :lo12:.LC10	// tmp111, tmp110,
// bitmapdecoding.cpp:567:   if(argc>1)fasttest("nfl.csv", ',');
	ble	.L5060		//,
// bitmapdecoding.cpp:567:   if(argc>1)fasttest("nfl.csv", ',');
	mov	x0, x19	//, tmp111
	mov	w1, 44	//,
	bl	_Z8fasttestPKcc		//
.L5060:
// bitmapdecoding.cpp:568:   printf("fast_decoder:\n");
	adrp	x0, .LC24	// tmp96,
	add	x0, x0, :lo12:.LC24	//, tmp96,
	bl	puts		//
// bitmapdecoding.cpp:569:   unit<fast_decoder>();
	bl	_Z4unitIXadL_ZL12fast_decoderPjRjjmEEEbv		//
// bitmapdecoding.cpp:570:   test<fast_decoder>("nfl.csv", ',');
	bl	_Z4testIXadL_ZL12fast_decoderPjRjjmEEEvPKcc.constprop.151		//
// bitmapdecoding.cpp:571:   printf("simdjson_decoder:\n");
	adrp	x0, .LC25	// tmp98,
	add	x0, x0, :lo12:.LC25	//, tmp98,
	bl	puts		//
// bitmapdecoding.cpp:572:   unit<simdjson_decoder>();
	bl	_Z4unitIXadL_Z16simdjson_decoderPjRjjmEEEbv		//
// bitmapdecoding.cpp:573:   test<simdjson_decoder>("nfl.csv", ',');
	mov	w1, 44	//,
	mov	x0, x19	//, tmp111
	bl	_Z4testIXadL_Z16simdjson_decoderPjRjjmEEEvPKcc		//
// bitmapdecoding.cpp:574:   printf("basic_decoder:\n");
	adrp	x0, .LC26	// tmp102,
	add	x0, x0, :lo12:.LC26	//, tmp102,
	bl	puts		//
// bitmapdecoding.cpp:575:   unit<basic_decoder>();
	bl	_Z4unitIXadL_Z13basic_decoderPjRjjmEEEbv		//
// bitmapdecoding.cpp:576:   test<basic_decoder>("nfl.csv", ',');
	mov	w1, 44	//,
	mov	x0, x19	//, tmp111
	bl	_Z4testIXadL_Z13basic_decoderPjRjjmEEEvPKcc		//
// bitmapdecoding.cpp:577:   printf("faster_decoder:\n");
	adrp	x0, .LC27	// tmp106,
	add	x0, x0, :lo12:.LC27	//, tmp106,
	bl	puts		//
// bitmapdecoding.cpp:578:   unit<faster_decoder>();
	bl	_Z4unitIXadL_Z14faster_decoderPjRjjmEEEbv		//
// bitmapdecoding.cpp:579:   test<faster_decoder>("nfl.csv", ',');
	mov	w1, 44	//,
	mov	x0, x19	//, tmp111
	bl	_Z4testIXadL_Z14faster_decoderPjRjjmEEEvPKcc		//
// bitmapdecoding.cpp:580:   printf("\n");
	mov	w0, 10	//,
	bl	putchar		//
// bitmapdecoding.cpp:581: }
	mov	w0, 0	//,
	ldr	x19, [sp, 16]	//,
	ldp	x29, x30, [sp], 32	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret	
	.cfi_endproc
.LFE1950:
	.size	main, .-main
	.align	2
	.p2align 3,,7
	.type	_GLOBAL__sub_I__Z12compute_minsSt6vectorIS_IySaIyEESaIS1_EE, %function
_GLOBAL__sub_I__Z12compute_minsSt6vectorIS_IySaIyEESaIS1_EE:
.LFB3022:
	.cfi_startproc
	stp	x29, x30, [sp, -32]!	//,,,
	.cfi_def_cfa_offset 32
	.cfi_offset 29, -32
	.cfi_offset 30, -24
	mov	x29, sp	//,
	str	x19, [sp, 16]	//,
	.cfi_offset 19, -16
// /usr/local/include/c++/8.3.0/iostream:74:   static ios_base::Init __ioinit;
	adrp	x19, .LANCHOR0	// tmp91,
	add	x19, x19, :lo12:.LANCHOR0	// tmp90, tmp91,
	mov	x0, x19	//, tmp90
	bl	_ZNSt8ios_base4InitC1Ev		//
	mov	x1, x19	//, tmp90
	adrp	x2, __dso_handle	// tmp93,
// bitmapdecoding.cpp:581: }
	ldr	x19, [sp, 16]	//,
// /usr/local/include/c++/8.3.0/iostream:74:   static ios_base::Init __ioinit;
	adrp	x0, _ZNSt8ios_base4InitD1Ev	// tmp97,
// bitmapdecoding.cpp:581: }
	ldp	x29, x30, [sp], 32	//,,,
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 19
	.cfi_def_cfa_offset 0
// /usr/local/include/c++/8.3.0/iostream:74:   static ios_base::Init __ioinit;
	add	x2, x2, :lo12:__dso_handle	//, tmp93,
	add	x0, x0, :lo12:_ZNSt8ios_base4InitD1Ev	//, tmp97,
	b	__cxa_atexit		//
	.cfi_endproc
.LFE3022:
	.size	_GLOBAL__sub_I__Z12compute_minsSt6vectorIS_IySaIyEESaIS1_EE, .-_GLOBAL__sub_I__Z12compute_minsSt6vectorIS_IySaIyEESaIS1_EE
	.section	.init_array,"aw"
	.align	3
	.xword	_GLOBAL__sub_I__Z12compute_minsSt6vectorIS_IySaIyEESaIS1_EE
	.bss
	.align	3
	.set	.LANCHOR0,. + 0
	.type	_ZStL8__ioinit, %object
	.size	_ZStL8__ioinit, 1
_ZStL8__ioinit:
	.zero	1
	.section	.rodata._Z4testIXadL_Z14faster_decoderPjRjjmEEEvPKcc.cst8,"aM",@progbits,8
	.align	3
.LC23:
	.word	0
	.word	1079574528
	.section	.rodata._Z4testIXadL_Z16simdjson_decoderPjRjjmEEEvPKcc.cst8,"aM",@progbits,8
	.align	3
.LC22:
	.word	0
	.word	1078984704
	.section	.rodata._ZN11LinuxEventsILi0EEC2ESt6vectorIiSaIiEE.str1.8,"aMS",@progbits,1
	.align	3
.LC7:
	.string	"perf_event_open"
.LC8:
	.string	"basic_string::append"
	.zero	3
.LC9:
	.string	": "
	.section	.rodata._ZNSt6vectorIySaIyEE17_M_default_appendEm.str1.8,"aMS",@progbits,1
	.align	3
.LC5:
	.string	"vector::_M_default_append"
	.section	.rodata._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.str1.8,"aMS",@progbits,1
	.align	3
.LC6:
	.string	"basic_string::_M_construct null not valid"
	.section	.rodata.str1.8,"aMS",@progbits,1
	.align	3
.LC0:
	.string	"bug"
	.zero	4
.LC1:
	.string	"Tests passed."
	.zero	2
.LC2:
	.string	"rb"
	.zero	5
.LC3:
	.string	"could not read the data"
.LC4:
	.string	"can't open "
	.zero	4
.LC10:
	.string	"nfl.csv"
.LC11:
	.string	"ioctl(PERF_EVENT_IOC_RESET)"
	.zero	4
.LC12:
	.string	"ioctl(PERF_EVENT_IOC_ENABLE)"
	.zero	3
.LC13:
	.string	"ioctl(PERF_EVENT_IOC_DISABLE)"
	.zero	2
.LC14:
	.string	"read"
	.zero	3
.LC15:
	.string	"bogus\n."
.LC16:
	.string	"matches = %u words = %zu 1-bit density %4.3f %% \n"
	.zero	6
.LC17:
	.string	"bytes per index = %4.3f \n"
	.zero	6
.LC18:
	.string	"instructions per cycle %4.2f, cycles per value set:  %4.3f, instructions per value set: %4.3f, cycles per word: %4.3f, instructions per word: %4.3f \n"
	.zero	2
.LC19:
	.string	" cycles per input byte %4.2f instructions per input byte %4.2f \n"
	.zero	7
.LC20:
	.string	"min: %8llu cycles, %8llu instructions, \t%8llu branch mis., %8llu cache ref., %8llu cache mis.\n"
	.zero	1
.LC21:
	.string	"avg: %8.1f cycles, %8.1f instructions, \t%8.1f branch mis., %8.1f cache ref., %8.1f cache mis.\n"
	.zero	1
.LC24:
	.string	"fast_decoder:"
	.zero	2
.LC25:
	.string	"simdjson_decoder:"
	.zero	6
.LC26:
	.string	"basic_decoder:"
	.zero	1
.LC27:
	.string	"faster_decoder:"
	.hidden	DW.ref.__gxx_personality_v0
	.weak	DW.ref.__gxx_personality_v0
	.section	.data.DW.ref.__gxx_personality_v0,"awG",@progbits,DW.ref.__gxx_personality_v0,comdat
	.align	3
	.type	DW.ref.__gxx_personality_v0, %object
	.size	DW.ref.__gxx_personality_v0, 8
DW.ref.__gxx_personality_v0:
	.xword	__gxx_personality_v0
	.hidden	__dso_handle
	.ident	"GCC: (GNU) 8.3.0"
	.section	.note.GNU-stack,"",@progbits
